
Fire_Alarm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001b7c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008e  00800060  00001b7c  00001c10  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000021  008000ee  008000ee  00001c9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001cfc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000368  00000000  00000000  00001d38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003416  00000000  00000000  000020a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000107b  00000000  00000000  000054b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001ac7  00000000  00000000  00006531  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000009c8  00000000  00000000  00007ff8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000ec9  00000000  00000000  000089c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001c4d  00000000  00000000  00009889  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c8  00000000  00000000  0000b4d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__vector_1>
       8:	0c 94 66 06 	jmp	0xccc	; 0xccc <__vector_2>
       c:	0c 94 93 06 	jmp	0xd26	; 0xd26 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 c4 07 	jmp	0xf88	; 0xf88 <__vector_10>
      2c:	0c 94 ba 07 	jmp	0xf74	; 0xf74 <__vector_11>
      30:	0c 94 12 07 	jmp	0xe24	; 0xe24 <__vector_12>
      34:	0c 94 58 08 	jmp	0x10b0	; 0x10b0 <__vector_13>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 85 08 	jmp	0x110a	; 0x110a <__vector_15>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e7       	ldi	r30, 0x7C	; 124
      68:	fb e1       	ldi	r31, 0x1B	; 27
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 3e       	cpi	r26, 0xEE	; 238
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	ae ee       	ldi	r26, 0xEE	; 238
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	af 30       	cpi	r26, 0x0F	; 15
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 a6 03 	call	0x74c	; 0x74c <main>
      8a:	0c 94 bc 0d 	jmp	0x1b78	; 0x1b78 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcd_send_pulse_enable>:
}

void lcd_convert_u8_to_str (u8  value , u8* str){
	memset(str,'\0',4);
	sprintf((s8*)str,"%d",value);
	return;
      92:	41 e0       	ldi	r20, 0x01	; 1
      94:	62 e0       	ldi	r22, 0x02	; 2
      96:	80 e0       	ldi	r24, 0x00	; 0
      98:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
      9c:	40 e0       	ldi	r20, 0x00	; 0
      9e:	62 e0       	ldi	r22, 0x02	; 2
      a0:	80 e0       	ldi	r24, 0x00	; 0
      a2:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
      a6:	08 95       	ret

000000a8 <lcd_void_init_pins>:
      a8:	41 e0       	ldi	r20, 0x01	; 1
      aa:	63 e0       	ldi	r22, 0x03	; 3
      ac:	80 e0       	ldi	r24, 0x00	; 0
      ae:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
      b2:	41 e0       	ldi	r20, 0x01	; 1
      b4:	62 e0       	ldi	r22, 0x02	; 2
      b6:	80 e0       	ldi	r24, 0x00	; 0
      b8:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
      bc:	41 e0       	ldi	r20, 0x01	; 1
      be:	64 e0       	ldi	r22, 0x04	; 4
      c0:	81 e0       	ldi	r24, 0x01	; 1
      c2:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
      c6:	41 e0       	ldi	r20, 0x01	; 1
      c8:	62 e0       	ldi	r22, 0x02	; 2
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
      d0:	41 e0       	ldi	r20, 0x01	; 1
      d2:	61 e0       	ldi	r22, 0x01	; 1
      d4:	81 e0       	ldi	r24, 0x01	; 1
      d6:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
      da:	41 e0       	ldi	r20, 0x01	; 1
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	81 e0       	ldi	r24, 0x01	; 1
      e0:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
      e4:	40 e0       	ldi	r20, 0x00	; 0
      e6:	63 e0       	ldi	r22, 0x03	; 3
      e8:	80 e0       	ldi	r24, 0x00	; 0
      ea:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
      ee:	40 e0       	ldi	r20, 0x00	; 0
      f0:	62 e0       	ldi	r22, 0x02	; 2
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
      f8:	40 e0       	ldi	r20, 0x00	; 0
      fa:	64 e0       	ldi	r22, 0x04	; 4
      fc:	81 e0       	ldi	r24, 0x01	; 1
      fe:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     102:	40 e0       	ldi	r20, 0x00	; 0
     104:	62 e0       	ldi	r22, 0x02	; 2
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     10c:	40 e0       	ldi	r20, 0x00	; 0
     10e:	61 e0       	ldi	r22, 0x01	; 1
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     116:	40 e0       	ldi	r20, 0x00	; 0
     118:	60 e0       	ldi	r22, 0x00	; 0
     11a:	81 e0       	ldi	r24, 0x01	; 1
     11c:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     120:	08 95       	ret

00000122 <lcd_send_command>:
     122:	1f 93       	push	r17
     124:	cf 93       	push	r28
     126:	df 93       	push	r29
     128:	1f 92       	push	r1
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	18 2f       	mov	r17, r24
     130:	19 82       	std	Y+1, r1	; 0x01
     132:	ce 01       	movw	r24, r28
     134:	01 96       	adiw	r24, 0x01	; 1
     136:	0e 94 c8 06 	call	0xd90	; 0xd90 <GIE_GetValue>
     13a:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
     13e:	40 e0       	ldi	r20, 0x00	; 0
     140:	63 e0       	ldi	r22, 0x03	; 3
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     148:	41 2f       	mov	r20, r17
     14a:	44 1f       	adc	r20, r20
     14c:	44 27       	eor	r20, r20
     14e:	44 1f       	adc	r20, r20
     150:	64 e0       	ldi	r22, 0x04	; 4
     152:	81 e0       	ldi	r24, 0x01	; 1
     154:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     158:	16 fb       	bst	r17, 6
     15a:	44 27       	eor	r20, r20
     15c:	40 f9       	bld	r20, 0
     15e:	62 e0       	ldi	r22, 0x02	; 2
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     166:	15 fb       	bst	r17, 5
     168:	44 27       	eor	r20, r20
     16a:	40 f9       	bld	r20, 0
     16c:	61 e0       	ldi	r22, 0x01	; 1
     16e:	81 e0       	ldi	r24, 0x01	; 1
     170:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     174:	14 fb       	bst	r17, 4
     176:	44 27       	eor	r20, r20
     178:	40 f9       	bld	r20, 0
     17a:	60 e0       	ldi	r22, 0x00	; 0
     17c:	81 e0       	ldi	r24, 0x01	; 1
     17e:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     182:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     186:	8f eb       	ldi	r24, 0xBF	; 191
     188:	97 e1       	ldi	r25, 0x17	; 23
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcd_send_command+0x68>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcd_send_command+0x6e>
     190:	00 00       	nop
     192:	13 fb       	bst	r17, 3
     194:	44 27       	eor	r20, r20
     196:	40 f9       	bld	r20, 0
     198:	64 e0       	ldi	r22, 0x04	; 4
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     1a0:	12 fb       	bst	r17, 2
     1a2:	44 27       	eor	r20, r20
     1a4:	40 f9       	bld	r20, 0
     1a6:	62 e0       	ldi	r22, 0x02	; 2
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     1ae:	11 fb       	bst	r17, 1
     1b0:	44 27       	eor	r20, r20
     1b2:	40 f9       	bld	r20, 0
     1b4:	61 e0       	ldi	r22, 0x01	; 1
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     1bc:	41 2f       	mov	r20, r17
     1be:	41 70       	andi	r20, 0x01	; 1
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     1c8:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     1cc:	8f eb       	ldi	r24, 0xBF	; 191
     1ce:	97 e1       	ldi	r25, 0x17	; 23
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <lcd_send_command+0xae>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <lcd_send_command+0xb4>
     1d6:	00 00       	nop
     1d8:	89 81       	ldd	r24, Y+1	; 0x01
     1da:	0e 94 cf 06 	call	0xd9e	; 0xd9e <GIE_SetValue>
     1de:	0f 90       	pop	r0
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	1f 91       	pop	r17
     1e6:	08 95       	ret

000001e8 <lcd_send_char>:
     1e8:	cf 93       	push	r28
     1ea:	c8 2f       	mov	r28, r24
     1ec:	41 e0       	ldi	r20, 0x01	; 1
     1ee:	63 e0       	ldi	r22, 0x03	; 3
     1f0:	80 e0       	ldi	r24, 0x00	; 0
     1f2:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     1f6:	4c 2f       	mov	r20, r28
     1f8:	44 1f       	adc	r20, r20
     1fa:	44 27       	eor	r20, r20
     1fc:	44 1f       	adc	r20, r20
     1fe:	64 e0       	ldi	r22, 0x04	; 4
     200:	81 e0       	ldi	r24, 0x01	; 1
     202:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     206:	c6 fb       	bst	r28, 6
     208:	44 27       	eor	r20, r20
     20a:	40 f9       	bld	r20, 0
     20c:	62 e0       	ldi	r22, 0x02	; 2
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     214:	c5 fb       	bst	r28, 5
     216:	44 27       	eor	r20, r20
     218:	40 f9       	bld	r20, 0
     21a:	61 e0       	ldi	r22, 0x01	; 1
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     222:	c4 fb       	bst	r28, 4
     224:	44 27       	eor	r20, r20
     226:	40 f9       	bld	r20, 0
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     230:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     234:	c3 fb       	bst	r28, 3
     236:	44 27       	eor	r20, r20
     238:	40 f9       	bld	r20, 0
     23a:	64 e0       	ldi	r22, 0x04	; 4
     23c:	81 e0       	ldi	r24, 0x01	; 1
     23e:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     242:	c2 fb       	bst	r28, 2
     244:	44 27       	eor	r20, r20
     246:	40 f9       	bld	r20, 0
     248:	62 e0       	ldi	r22, 0x02	; 2
     24a:	81 e0       	ldi	r24, 0x01	; 1
     24c:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     250:	c1 fb       	bst	r28, 1
     252:	44 27       	eor	r20, r20
     254:	40 f9       	bld	r20, 0
     256:	61 e0       	ldi	r22, 0x01	; 1
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     25e:	4c 2f       	mov	r20, r28
     260:	41 70       	andi	r20, 0x01	; 1
     262:	60 e0       	ldi	r22, 0x00	; 0
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     26a:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     26e:	87 ec       	ldi	r24, 0xC7	; 199
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <lcd_send_char+0x8a>
     276:	00 c0       	rjmp	.+0      	; 0x278 <lcd_send_char+0x90>
     278:	00 00       	nop
     27a:	cf 91       	pop	r28
     27c:	08 95       	ret

0000027e <lcd_send_char_pos>:
     27e:	ff 92       	push	r15
     280:	0f 93       	push	r16
     282:	1f 93       	push	r17
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	1f 92       	push	r1
     28a:	cd b7       	in	r28, 0x3d	; 61
     28c:	de b7       	in	r29, 0x3e	; 62
     28e:	08 2f       	mov	r16, r24
     290:	16 2f       	mov	r17, r22
     292:	f4 2e       	mov	r15, r20
     294:	19 82       	std	Y+1, r1	; 0x01
     296:	ce 01       	movw	r24, r28
     298:	01 96       	adiw	r24, 0x01	; 1
     29a:	0e 94 c8 06 	call	0xd90	; 0xd90 <GIE_GetValue>
     29e:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
     2a2:	12 30       	cpi	r17, 0x02	; 2
     2a4:	71 f0       	breq	.+28     	; 0x2c2 <lcd_send_char_pos+0x44>
     2a6:	18 f4       	brcc	.+6      	; 0x2ae <lcd_send_char_pos+0x30>
     2a8:	11 30       	cpi	r17, 0x01	; 1
     2aa:	31 f0       	breq	.+12     	; 0x2b8 <lcd_send_char_pos+0x3a>
     2ac:	18 c0       	rjmp	.+48     	; 0x2de <lcd_send_char_pos+0x60>
     2ae:	13 30       	cpi	r17, 0x03	; 3
     2b0:	69 f0       	breq	.+26     	; 0x2cc <lcd_send_char_pos+0x4e>
     2b2:	14 30       	cpi	r17, 0x04	; 4
     2b4:	81 f0       	breq	.+32     	; 0x2d6 <lcd_send_char_pos+0x58>
     2b6:	13 c0       	rjmp	.+38     	; 0x2de <lcd_send_char_pos+0x60>
     2b8:	8f e7       	ldi	r24, 0x7F	; 127
     2ba:	8f 0d       	add	r24, r15
     2bc:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2c0:	0e c0       	rjmp	.+28     	; 0x2de <lcd_send_char_pos+0x60>
     2c2:	8f eb       	ldi	r24, 0xBF	; 191
     2c4:	8f 0d       	add	r24, r15
     2c6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2ca:	09 c0       	rjmp	.+18     	; 0x2de <lcd_send_char_pos+0x60>
     2cc:	83 e9       	ldi	r24, 0x93	; 147
     2ce:	8f 0d       	add	r24, r15
     2d0:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2d4:	04 c0       	rjmp	.+8      	; 0x2de <lcd_send_char_pos+0x60>
     2d6:	83 ed       	ldi	r24, 0xD3	; 211
     2d8:	8f 0d       	add	r24, r15
     2da:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2de:	80 2f       	mov	r24, r16
     2e0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_send_char>
     2e4:	89 81       	ldd	r24, Y+1	; 0x01
     2e6:	0e 94 cf 06 	call	0xd9e	; 0xd9e <GIE_SetValue>
     2ea:	0f 90       	pop	r0
     2ec:	df 91       	pop	r29
     2ee:	cf 91       	pop	r28
     2f0:	1f 91       	pop	r17
     2f2:	0f 91       	pop	r16
     2f4:	ff 90       	pop	r15
     2f6:	08 95       	ret

000002f8 <lcd_send_string_pos>:
     2f8:	ef 92       	push	r14
     2fa:	ff 92       	push	r15
     2fc:	0f 93       	push	r16
     2fe:	1f 93       	push	r17
     300:	cf 93       	push	r28
     302:	df 93       	push	r29
     304:	1f 92       	push	r1
     306:	cd b7       	in	r28, 0x3d	; 61
     308:	de b7       	in	r29, 0x3e	; 62
     30a:	8c 01       	movw	r16, r24
     30c:	f6 2e       	mov	r15, r22
     30e:	e4 2e       	mov	r14, r20
     310:	19 82       	std	Y+1, r1	; 0x01
     312:	ce 01       	movw	r24, r28
     314:	01 96       	adiw	r24, 0x01	; 1
     316:	0e 94 c8 06 	call	0xd90	; 0xd90 <GIE_GetValue>
     31a:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
     31e:	82 e0       	ldi	r24, 0x02	; 2
     320:	f8 16       	cp	r15, r24
     322:	91 f0       	breq	.+36     	; 0x348 <lcd_send_string_pos+0x50>
     324:	8f 15       	cp	r24, r15
     326:	20 f0       	brcs	.+8      	; 0x330 <lcd_send_string_pos+0x38>
     328:	e1 e0       	ldi	r30, 0x01	; 1
     32a:	fe 16       	cp	r15, r30
     32c:	41 f0       	breq	.+16     	; 0x33e <lcd_send_string_pos+0x46>
     32e:	1f c0       	rjmp	.+62     	; 0x36e <lcd_send_string_pos+0x76>
     330:	f3 e0       	ldi	r31, 0x03	; 3
     332:	ff 16       	cp	r15, r31
     334:	71 f0       	breq	.+28     	; 0x352 <lcd_send_string_pos+0x5a>
     336:	84 e0       	ldi	r24, 0x04	; 4
     338:	f8 16       	cp	r15, r24
     33a:	81 f0       	breq	.+32     	; 0x35c <lcd_send_string_pos+0x64>
     33c:	18 c0       	rjmp	.+48     	; 0x36e <lcd_send_string_pos+0x76>
     33e:	8f e7       	ldi	r24, 0x7F	; 127
     340:	8e 0d       	add	r24, r14
     342:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     346:	13 c0       	rjmp	.+38     	; 0x36e <lcd_send_string_pos+0x76>
     348:	8f eb       	ldi	r24, 0xBF	; 191
     34a:	8e 0d       	add	r24, r14
     34c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     350:	0e c0       	rjmp	.+28     	; 0x36e <lcd_send_string_pos+0x76>
     352:	83 e9       	ldi	r24, 0x93	; 147
     354:	8e 0d       	add	r24, r14
     356:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     35a:	09 c0       	rjmp	.+18     	; 0x36e <lcd_send_string_pos+0x76>
     35c:	83 ed       	ldi	r24, 0xD3	; 211
     35e:	8e 0d       	add	r24, r14
     360:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     364:	04 c0       	rjmp	.+8      	; 0x36e <lcd_send_string_pos+0x76>
     366:	0f 5f       	subi	r16, 0xFF	; 255
     368:	1f 4f       	sbci	r17, 0xFF	; 255
     36a:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_send_char>
     36e:	f8 01       	movw	r30, r16
     370:	80 81       	ld	r24, Z
     372:	81 11       	cpse	r24, r1
     374:	f8 cf       	rjmp	.-16     	; 0x366 <lcd_send_string_pos+0x6e>
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	0e 94 cf 06 	call	0xd9e	; 0xd9e <GIE_SetValue>
     37c:	0f 90       	pop	r0
     37e:	df 91       	pop	r29
     380:	cf 91       	pop	r28
     382:	1f 91       	pop	r17
     384:	0f 91       	pop	r16
     386:	ff 90       	pop	r15
     388:	ef 90       	pop	r14
     38a:	08 95       	ret

0000038c <lcd_init_4bit>:
     38c:	0e 94 54 00 	call	0xa8	; 0xa8 <lcd_void_init_pins>
     390:	2f ef       	ldi	r18, 0xFF	; 255
     392:	89 ef       	ldi	r24, 0xF9	; 249
     394:	90 e0       	ldi	r25, 0x00	; 0
     396:	21 50       	subi	r18, 0x01	; 1
     398:	80 40       	sbci	r24, 0x00	; 0
     39a:	90 40       	sbci	r25, 0x00	; 0
     39c:	e1 f7       	brne	.-8      	; 0x396 <lcd_init_4bit+0xa>
     39e:	00 c0       	rjmp	.+0      	; 0x3a0 <lcd_init_4bit+0x14>
     3a0:	00 00       	nop
     3a2:	88 e3       	ldi	r24, 0x38	; 56
     3a4:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3a8:	8f e1       	ldi	r24, 0x1F	; 31
     3aa:	9e e4       	ldi	r25, 0x4E	; 78
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <lcd_init_4bit+0x20>
     3b0:	00 c0       	rjmp	.+0      	; 0x3b2 <lcd_init_4bit+0x26>
     3b2:	00 00       	nop
     3b4:	88 e3       	ldi	r24, 0x38	; 56
     3b6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3ba:	87 e5       	ldi	r24, 0x57	; 87
     3bc:	92 e0       	ldi	r25, 0x02	; 2
     3be:	01 97       	sbiw	r24, 0x01	; 1
     3c0:	f1 f7       	brne	.-4      	; 0x3be <lcd_init_4bit+0x32>
     3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <lcd_init_4bit+0x38>
     3c4:	00 00       	nop
     3c6:	88 e3       	ldi	r24, 0x38	; 56
     3c8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3cc:	81 e0       	ldi	r24, 0x01	; 1
     3ce:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3d2:	82 e0       	ldi	r24, 0x02	; 2
     3d4:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3d8:	86 e0       	ldi	r24, 0x06	; 6
     3da:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3de:	8c e0       	ldi	r24, 0x0C	; 12
     3e0:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3e4:	88 e2       	ldi	r24, 0x28	; 40
     3e6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3ea:	80 e8       	ldi	r24, 0x80	; 128
     3ec:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3f6:	8c e0       	ldi	r24, 0x0C	; 12
     3f8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     3fc:	08 95       	ret

000003fe <lcd_convert_u16_to_str>:
}

void lcd_convert_u16_to_str(u16 value , u8* str){
	memset(str,'\0',6);
     3fe:	e6 2f       	mov	r30, r22
     400:	f7 2f       	mov	r31, r23
     402:	26 e0       	ldi	r18, 0x06	; 6
     404:	df 01       	movw	r26, r30
     406:	1d 92       	st	X+, r1
     408:	2a 95       	dec	r18
     40a:	e9 f7       	brne	.-6      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
	sprintf((s8*)str,"%d",value);
     40c:	9f 93       	push	r25
     40e:	8f 93       	push	r24
     410:	85 ee       	ldi	r24, 0xE5	; 229
     412:	90 e0       	ldi	r25, 0x00	; 0
     414:	9f 93       	push	r25
     416:	8f 93       	push	r24
     418:	7f 93       	push	r23
     41a:	6f 93       	push	r22
     41c:	0e 94 d2 0a 	call	0x15a4	; 0x15a4 <sprintf>
	return;
     420:	0f 90       	pop	r0
     422:	0f 90       	pop	r0
     424:	0f 90       	pop	r0
     426:	0f 90       	pop	r0
     428:	0f 90       	pop	r0
     42a:	0f 90       	pop	r0
     42c:	08 95       	ret

0000042e <LED_init>:
}
void LED_turn_off(u8 portID, u8 pinID){
	DIO_void_SetPinValue	  (portID,pinID, LOGIC_LOW);
}
void LED_toggle  (u8 portID, u8 pinID){
	DIO_void_togglePinValue  (portID, pinID);
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	c8 2f       	mov	r28, r24
     434:	d6 2f       	mov	r29, r22
     436:	41 e0       	ldi	r20, 0x01	; 1
     438:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
     43c:	40 e0       	ldi	r20, 0x00	; 0
     43e:	6d 2f       	mov	r22, r29
     440:	8c 2f       	mov	r24, r28
     442:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <LED_turn_on>:
     44c:	41 e0       	ldi	r20, 0x01	; 1
     44e:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     452:	08 95       	ret

00000454 <LED_turn_off>:
     454:	40 e0       	ldi	r20, 0x00	; 0
     456:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     45a:	08 95       	ret

0000045c <BUZZER_init>:
}
void BUZZER_init	 (void){
	DIO_void_SetPinDirection (BUZZER_PORT, BUZZER_PIN, DIO_DIRECTION_OUTPUT);
     45c:	41 e0       	ldi	r20, 0x01	; 1
     45e:	66 e0       	ldi	r22, 0x06	; 6
     460:	82 e0       	ldi	r24, 0x02	; 2
     462:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
	DIO_void_SetPinValue	  (BUZZER_PORT,BUZZER_PIN, LOGIC_LOW);
     466:	40 e0       	ldi	r20, 0x00	; 0
     468:	66 e0       	ldi	r22, 0x06	; 6
     46a:	82 e0       	ldi	r24, 0x02	; 2
     46c:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     470:	08 95       	ret

00000472 <BUZZER_turn_on>:
}

void BUZZER_turn_on (void){
	DIO_void_SetPinValue	  (BUZZER_PORT,BUZZER_PIN, LOGIC_HIGH);
     472:	41 e0       	ldi	r20, 0x01	; 1
     474:	66 e0       	ldi	r22, 0x06	; 6
     476:	82 e0       	ldi	r24, 0x02	; 2
     478:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     47c:	08 95       	ret

0000047e <BUZZER_turn_off>:
}
void BUZZER_turn_off (void){
	DIO_void_SetPinValue	  (BUZZER_PORT,BUZZER_PIN, LOGIC_LOW);
     47e:	40 e0       	ldi	r20, 0x00	; 0
     480:	66 e0       	ldi	r22, 0x06	; 6
     482:	82 e0       	ldi	r24, 0x02	; 2
     484:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     488:	08 95       	ret

0000048a <FLAME_INT_EXT_InterruptHandler>:
	if(0 == DIO_void_GetBitValue(GAS_SENSOR_PORT, GAS_SENSOR_PIN)){
		GasSensor_PollerHandler();
	}
}

void FLAME_INT_EXT_InterruptHandler(void){
     48a:	cf 93       	push	r28
	Flame_state = 1;
     48c:	c1 e0       	ldi	r28, 0x01	; 1
     48e:	c0 93 ef 00 	sts	0x00EF, r28	; 0x8000ef <Flame_state>
	LED_turn_on(LED_BLUE_PORT,LED_BLUE_PIN);
     492:	65 e0       	ldi	r22, 0x05	; 5
     494:	80 e0       	ldi	r24, 0x00	; 0
     496:	0e 94 26 02 	call	0x44c	; 0x44c <LED_turn_on>
	lcd_send_string_pos(flame_detected,2,1);
     49a:	41 e0       	ldi	r20, 0x01	; 1
     49c:	62 e0       	ldi	r22, 0x02	; 2
     49e:	8d e8       	ldi	r24, 0x8D	; 141
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	ADC_Auto_Trigger_Read(&Temp_ADC_val);
     4a6:	8b ef       	ldi	r24, 0xFB	; 251
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	0e 94 76 04 	call	0x8ec	; 0x8ec <ADC_Auto_Trigger_Read>
	Temp_ADC_val = Temp_ADC_val * 5000.0f / 10230;
     4ae:	60 91 fb 00 	lds	r22, 0x00FB	; 0x8000fb <Temp_ADC_val>
     4b2:	70 91 fc 00 	lds	r23, 0x00FC	; 0x8000fc <Temp_ADC_val+0x1>
     4b6:	80 e0       	ldi	r24, 0x00	; 0
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	0e 94 53 09 	call	0x12a6	; 0x12a6 <__floatunsisf>
     4be:	20 e0       	ldi	r18, 0x00	; 0
     4c0:	30 e4       	ldi	r19, 0x40	; 64
     4c2:	4c e9       	ldi	r20, 0x9C	; 156
     4c4:	55 e4       	ldi	r21, 0x45	; 69
     4c6:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__mulsf3>
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	38 ed       	ldi	r19, 0xD8	; 216
     4ce:	4f e1       	ldi	r20, 0x1F	; 31
     4d0:	56 e4       	ldi	r21, 0x46	; 70
     4d2:	0e 94 b2 08 	call	0x1164	; 0x1164 <__divsf3>
     4d6:	0e 94 24 09 	call	0x1248	; 0x1248 <__fixunssfsi>
     4da:	70 93 fc 00 	sts	0x00FC, r23	; 0x8000fc <Temp_ADC_val+0x1>
     4de:	60 93 fb 00 	sts	0x00FB, r22	; 0x8000fb <Temp_ADC_val>
	lcd_convert_u16_to_str(Temp_ADC_val,temp_reading);
     4e2:	80 91 fb 00 	lds	r24, 0x00FB	; 0x8000fb <Temp_ADC_val>
     4e6:	90 91 fc 00 	lds	r25, 0x00FC	; 0x8000fc <Temp_ADC_val+0x1>
     4ea:	69 e0       	ldi	r22, 0x09	; 9
     4ec:	71 e0       	ldi	r23, 0x01	; 1
     4ee:	0e 94 ff 01 	call	0x3fe	; 0x3fe <lcd_convert_u16_to_str>
	lcd_send_string_pos(temp_std,4,1);
     4f2:	41 e0       	ldi	r20, 0x01	; 1
     4f4:	64 e0       	ldi	r22, 0x04	; 4
     4f6:	8e e7       	ldi	r24, 0x7E	; 126
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	IsModeNormal = 1;
     4fe:	c0 93 f3 00 	sts	0x00F3, r28	; 0x8000f3 <IsModeNormal>
     502:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <IsModeNormal+0x1>
     506:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <IsModeNormal+0x2>
     50a:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <IsModeNormal+0x3>
     50e:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <IsModeNormal+0x4>
     512:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <IsModeNormal+0x5>
     516:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <IsModeNormal+0x6>
     51a:	10 92 fa 00 	sts	0x00FA, r1	; 0x8000fa <IsModeNormal+0x7>
	BUZZER_turn_on();
     51e:	0e 94 39 02 	call	0x472	; 0x472 <BUZZER_turn_on>
	LED_turn_off(LED_GREEN_PORT,LED_GREEN_PIN);
     522:	64 e0       	ldi	r22, 0x04	; 4
     524:	80 e0       	ldi	r24, 0x00	; 0
     526:	0e 94 2a 02 	call	0x454	; 0x454 <LED_turn_off>
	lcd_send_string_pos(temp_reading,4,16);
     52a:	40 e1       	ldi	r20, 0x10	; 16
     52c:	64 e0       	ldi	r22, 0x04	; 4
     52e:	89 e0       	ldi	r24, 0x09	; 9
     530:	91 e0       	ldi	r25, 0x01	; 1
     532:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	
}
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <UART_RX_InterruptHandlerr>:
		motor_HS_flag = 1;
	}
}

void UART_RX_InterruptHandlerr(void){
	UART_Recieve(&rec);
     53a:	81 ef       	ldi	r24, 0xF1	; 241
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	0e 94 4a 08 	call	0x1094	; 0x1094 <UART_Recieve>
	if(rec == 'L'){
     542:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <rec>
     546:	8c 34       	cpi	r24, 0x4C	; 76
     548:	39 f4       	brne	.+14     	; 0x558 <UART_RX_InterruptHandlerr+0x1e>
		
		lcd_send_string_pos(BT_text_1,3,15);
     54a:	4f e0       	ldi	r20, 0x0F	; 15
     54c:	63 e0       	ldi	r22, 0x03	; 3
     54e:	88 e6       	ldi	r24, 0x68	; 104
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
     556:	08 95       	ret
	}
	else if(rec == 'R'){
     558:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <rec>
     55c:	82 35       	cpi	r24, 0x52	; 82
     55e:	31 f4       	brne	.+12     	; 0x56c <UART_RX_InterruptHandlerr+0x32>
		
		lcd_send_string_pos(BT_text_2,3,15);
     560:	4f e0       	ldi	r20, 0x0F	; 15
     562:	63 e0       	ldi	r22, 0x03	; 3
     564:	81 e6       	ldi	r24, 0x61	; 97
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
     56c:	08 95       	ret

0000056e <EXT_INT1_Int_Handler>:

u8 test_spi = 0;

void EXT_INT1_Int_Handler(void){
	
	if(0 == SPI_Sender_Flag){
     56e:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__data_end>
     572:	81 11       	cpse	r24, r1
     574:	3f c0       	rjmp	.+126    	; 0x5f4 <EXT_INT1_Int_Handler+0x86>
		if(Gas_State == 0 && Flame_state == 0){
     576:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <Gas_State>
     57a:	81 11       	cpse	r24, r1
     57c:	08 c0       	rjmp	.+16     	; 0x58e <EXT_INT1_Int_Handler+0x20>
     57e:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <Flame_state>
     582:	81 11       	cpse	r24, r1
     584:	04 c0       	rjmp	.+8      	; 0x58e <EXT_INT1_Int_Handler+0x20>
			SPI_Transmit(GAS_NO_FLAME_NO);
     586:	81 e0       	ldi	r24, 0x01	; 1
     588:	0e 94 05 07 	call	0xe0a	; 0xe0a <SPI_Transmit>
     58c:	23 c0       	rjmp	.+70     	; 0x5d4 <EXT_INT1_Int_Handler+0x66>
		}
		else if(Gas_State == 0 && Flame_state == 1){
     58e:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <Gas_State>
     592:	81 11       	cpse	r24, r1
     594:	08 c0       	rjmp	.+16     	; 0x5a6 <EXT_INT1_Int_Handler+0x38>
     596:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <Flame_state>
     59a:	81 30       	cpi	r24, 0x01	; 1
     59c:	21 f4       	brne	.+8      	; 0x5a6 <EXT_INT1_Int_Handler+0x38>
			SPI_Transmit(GAS_NO_FLAME_YES);
     59e:	82 e0       	ldi	r24, 0x02	; 2
     5a0:	0e 94 05 07 	call	0xe0a	; 0xe0a <SPI_Transmit>
     5a4:	17 c0       	rjmp	.+46     	; 0x5d4 <EXT_INT1_Int_Handler+0x66>
		}
		else if(Gas_State == 1 && Flame_state == 0){
     5a6:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <Gas_State>
     5aa:	81 30       	cpi	r24, 0x01	; 1
     5ac:	41 f4       	brne	.+16     	; 0x5be <EXT_INT1_Int_Handler+0x50>
     5ae:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <Flame_state>
     5b2:	81 11       	cpse	r24, r1
     5b4:	04 c0       	rjmp	.+8      	; 0x5be <EXT_INT1_Int_Handler+0x50>
			SPI_Transmit(GAS_YES_FLAME_NO);
     5b6:	84 e0       	ldi	r24, 0x04	; 4
     5b8:	0e 94 05 07 	call	0xe0a	; 0xe0a <SPI_Transmit>
     5bc:	0b c0       	rjmp	.+22     	; 0x5d4 <EXT_INT1_Int_Handler+0x66>
		}
		else if(Gas_State == 1 && Flame_state == 1){
     5be:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <Gas_State>
     5c2:	81 30       	cpi	r24, 0x01	; 1
     5c4:	39 f4       	brne	.+14     	; 0x5d4 <EXT_INT1_Int_Handler+0x66>
     5c6:	80 91 ef 00 	lds	r24, 0x00EF	; 0x8000ef <Flame_state>
     5ca:	81 30       	cpi	r24, 0x01	; 1
     5cc:	19 f4       	brne	.+6      	; 0x5d4 <EXT_INT1_Int_Handler+0x66>
			SPI_Transmit(GAS_YES_FLAME_YES);
     5ce:	88 e0       	ldi	r24, 0x08	; 8
     5d0:	0e 94 05 07 	call	0xe0a	; 0xe0a <SPI_Transmit>
		}
		
		
		lcd_send_char_pos(SPI_Counter,1,20);
     5d4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     5d8:	44 e1       	ldi	r20, 0x14	; 20
     5da:	61 e0       	ldi	r22, 0x01	; 1
     5dc:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_send_char_pos>
		SPI_Counter++;	
     5e0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
     5e4:	8f 5f       	subi	r24, 0xFF	; 255
     5e6:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
		
		SPI_Sender_Flag++;
     5ea:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__data_end>
     5ee:	8f 5f       	subi	r24, 0xFF	; 255
     5f0:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__data_end>
     5f4:	08 95       	ret

000005f6 <GasSensor_Init>:
	lcd_send_string_pos(flame_text_std,2,1);
	FanLowSpeed();
}

void GasSensor_Init(void){
	DIO_void_SetPinDirection(GAS_SENSOR_PORT,GAS_SENSOR_PIN, DIO_DIRECTION_INPUT);
     5f6:	40 e0       	ldi	r20, 0x00	; 0
     5f8:	67 e0       	ldi	r22, 0x07	; 7
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
	DIO_void_SetPinValue	(GAS_SENSOR_PORT,GAS_SENSOR_PIN, LOGIC_HIGH			);
     600:	41 e0       	ldi	r20, 0x01	; 1
     602:	67 e0       	ldi	r22, 0x07	; 7
     604:	80 e0       	ldi	r24, 0x00	; 0
     606:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
     60a:	08 95       	ret

0000060c <IsAnySensorActive>:
	
}

u8 IsAnySensorActive(void){
	if(
		0 == DIO_void_GetBitValue(INT0_PORT		 ,INT0_PIN		)
     60c:	62 e0       	ldi	r22, 0x02	; 2
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	0e 94 69 05 	call	0xad2	; 0xad2 <DIO_void_GetBitValue>
	lcd_send_string_pos(temp_reading,4,16);
	
}

u8 IsAnySensorActive(void){
	if(
     614:	88 23       	and	r24, r24
     616:	41 f0       	breq	.+16     	; 0x628 <IsAnySensorActive+0x1c>
		0 == DIO_void_GetBitValue(INT0_PORT		 ,INT0_PIN		)
	||	0 == DIO_void_GetBitValue(GAS_SENSOR_PORT,GAS_SENSOR_PIN)){
     618:	67 e0       	ldi	r22, 0x07	; 7
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	0e 94 69 05 	call	0xad2	; 0xad2 <DIO_void_GetBitValue>
     620:	88 23       	and	r24, r24
     622:	21 f0       	breq	.+8      	; 0x62c <IsAnySensorActive+0x20>
		return 1;
	}
	else{
		return 0;
     624:	80 e0       	ldi	r24, 0x00	; 0
     626:	08 95       	ret

u8 IsAnySensorActive(void){
	if(
		0 == DIO_void_GetBitValue(INT0_PORT		 ,INT0_PIN		)
	||	0 == DIO_void_GetBitValue(GAS_SENSOR_PORT,GAS_SENSOR_PIN)){
		return 1;
     628:	81 e0       	ldi	r24, 0x01	; 1
     62a:	08 95       	ret
     62c:	81 e0       	ldi	r24, 0x01	; 1
	}
	else{
		return 0;
	}
}
     62e:	08 95       	ret

00000630 <FanLowSpeed>:

void FanLowSpeed (void){
	TMR0_Set_OCR0_Value(LOW_PWM);
     630:	86 e9       	ldi	r24, 0x96	; 150
     632:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <TMR0_Set_OCR0_Value>
     636:	08 95       	ret

00000638 <APP_Init>:
	}
	return 0;
}

void APP_Init(void){
	LED_init(LED_YELLOW_PORT ,LED_YELLOW_PIN );
     638:	66 e0       	ldi	r22, 0x06	; 6
     63a:	80 e0       	ldi	r24, 0x00	; 0
     63c:	0e 94 17 02 	call	0x42e	; 0x42e <LED_init>
	LED_init(LED_GREEN_PORT ,LED_GREEN_PIN );
     640:	64 e0       	ldi	r22, 0x04	; 4
     642:	80 e0       	ldi	r24, 0x00	; 0
     644:	0e 94 17 02 	call	0x42e	; 0x42e <LED_init>
	LED_init(LED_BLUE_PORT ,LED_BLUE_PIN );
     648:	65 e0       	ldi	r22, 0x05	; 5
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	0e 94 17 02 	call	0x42e	; 0x42e <LED_init>
	BUZZER_init();
     650:	0e 94 2e 02 	call	0x45c	; 0x45c <BUZZER_init>
	GasSensor_Init();
     654:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <GasSensor_Init>
	lcd_init_4bit();
     658:	0e 94 c6 01 	call	0x38c	; 0x38c <lcd_init_4bit>
	ext_init(FLAME_EXT_INT_0,FLAME_INT_EXT_InterruptHandler,EXT_INT_ON_FALLING_EDGE);
     65c:	42 e0       	ldi	r20, 0x02	; 2
     65e:	65 e4       	ldi	r22, 0x45	; 69
     660:	72 e0       	ldi	r23, 0x02	; 2
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	0e 94 ac 05 	call	0xb58	; 0xb58 <ext_init>
	ext_init(EXT_INT_1_INDEX, EXT_INT1_Int_Handler,EXT_INT_ON_FALLING_EDGE);
     668:	42 e0       	ldi	r20, 0x02	; 2
     66a:	67 eb       	ldi	r22, 0xB7	; 183
     66c:	72 e0       	ldi	r23, 0x02	; 2
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	0e 94 ac 05 	call	0xb58	; 0xb58 <ext_init>
	ADC_Auto_Trigger_Init(TEMP_CHANNEL);
     674:	81 e0       	ldi	r24, 0x01	; 1
     676:	0e 94 45 04 	call	0x88a	; 0x88a <ADC_Auto_Trigger_Init>
	TMR0_Enable_Interrupt();
     67a:	0e 94 b6 07 	call	0xf6c	; 0xf6c <TMR0_Enable_Interrupt>
	TMR0_Init();
     67e:	0e 94 a2 07 	call	0xf44	; 0xf44 <TMR0_Init>
	UART_RX_Callback(UART_RX_InterruptHandlerr);
     682:	8d e9       	ldi	r24, 0x9D	; 157
     684:	92 e0       	ldi	r25, 0x02	; 2
     686:	0e 94 53 08 	call	0x10a6	; 0x10a6 <UART_RX_Callback>
	UART_Init(9600);
     68a:	80 e8       	ldi	r24, 0x80	; 128
     68c:	95 e2       	ldi	r25, 0x25	; 37
     68e:	0e 94 2d 08 	call	0x105a	; 0x105a <UART_Init>
	SPI_Master_Init();
     692:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <SPI_Master_Init>
	lcd_send_string_pos(BT_text_std,3,1);
     696:	41 e0       	ldi	r20, 0x01	; 1
     698:	63 e0       	ldi	r22, 0x03	; 3
     69a:	8f e6       	ldi	r24, 0x6F	; 111
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	lcd_send_string_pos(BT_text_1,3,15);
     6a2:	4f e0       	ldi	r20, 0x0F	; 15
     6a4:	63 e0       	ldi	r22, 0x03	; 3
     6a6:	88 e6       	ldi	r24, 0x68	; 104
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	GIE_Enable();
     6ae:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
	


	LED_turn_on(LED_GREEN_PORT ,LED_GREEN_PIN);
     6b2:	64 e0       	ldi	r22, 0x04	; 4
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	0e 94 26 02 	call	0x44c	; 0x44c <LED_turn_on>
	lcd_send_string_pos(gas_text_std,1,1);
     6ba:	41 e0       	ldi	r20, 0x01	; 1
     6bc:	61 e0       	ldi	r22, 0x01	; 1
     6be:	8b ec       	ldi	r24, 0xCB	; 203
     6c0:	90 e0       	ldi	r25, 0x00	; 0
     6c2:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	lcd_send_string_pos(flame_text_std,2,1);
     6c6:	41 e0       	ldi	r20, 0x01	; 1
     6c8:	62 e0       	ldi	r22, 0x02	; 2
     6ca:	82 ea       	ldi	r24, 0xA2	; 162
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	FanLowSpeed();
     6d2:	0e 94 18 03 	call	0x630	; 0x630 <FanLowSpeed>
     6d6:	08 95       	ret

000006d8 <FanHighSpeed>:
void FanLowSpeed (void){
	TMR0_Set_OCR0_Value(LOW_PWM);
}

void FanHighSpeed (void){
	if(motor_HS_flag == 0){	
     6d8:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <motor_HS_flag>
     6dc:	81 11       	cpse	r24, r1
     6de:	06 c0       	rjmp	.+12     	; 0x6ec <FanHighSpeed+0x14>
		//_delay_ms(200);
		//TMR0_Set_OCR0_Value(LOW_PWM +100);
		//_delay_ms(200);
		//TMR0_Set_OCR0_Value(LOW_PWM + 125);
		//_delay_ms(200);
		TMR0_Set_OCR0_Value(HIGH_PWM);
     6e0:	8a ef       	ldi	r24, 0xFA	; 250
     6e2:	0e 94 e8 07 	call	0xfd0	; 0xfd0 <TMR0_Set_OCR0_Value>
		//_delay_ms(200);
		motor_HS_flag = 1;
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <motor_HS_flag>
     6ec:	08 95       	ret

000006ee <GasSensor_PollerHandler>:
void GasSensor_Init(void){
	DIO_void_SetPinDirection(GAS_SENSOR_PORT,GAS_SENSOR_PIN, DIO_DIRECTION_INPUT);
	DIO_void_SetPinValue	(GAS_SENSOR_PORT,GAS_SENSOR_PIN, LOGIC_HIGH			);
}

void GasSensor_PollerHandler(void){
     6ee:	cf 93       	push	r28
	Gas_State = 1;
     6f0:	c1 e0       	ldi	r28, 0x01	; 1
     6f2:	c0 93 f0 00 	sts	0x00F0, r28	; 0x8000f0 <Gas_State>
	lcd_send_string_pos(gas_detected,1,1);
     6f6:	41 e0       	ldi	r20, 0x01	; 1
     6f8:	61 e0       	ldi	r22, 0x01	; 1
     6fa:	87 eb       	ldi	r24, 0xB7	; 183
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
	LED_turn_on(LED_YELLOW_PORT,LED_YELLOW_PIN);
     702:	66 e0       	ldi	r22, 0x06	; 6
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	0e 94 26 02 	call	0x44c	; 0x44c <LED_turn_on>
	LED_turn_off(LED_GREEN_PORT,LED_GREEN_PIN);
     70a:	64 e0       	ldi	r22, 0x04	; 4
     70c:	80 e0       	ldi	r24, 0x00	; 0
     70e:	0e 94 2a 02 	call	0x454	; 0x454 <LED_turn_off>
	FanHighSpeed();
     712:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <FanHighSpeed>
	IsModeNormal = 1;
     716:	c0 93 f3 00 	sts	0x00F3, r28	; 0x8000f3 <IsModeNormal>
     71a:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <IsModeNormal+0x1>
     71e:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <IsModeNormal+0x2>
     722:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <IsModeNormal+0x3>
     726:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <IsModeNormal+0x4>
     72a:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <IsModeNormal+0x5>
     72e:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <IsModeNormal+0x6>
     732:	10 92 fa 00 	sts	0x00FA, r1	; 0x8000fa <IsModeNormal+0x7>
}
     736:	cf 91       	pop	r28
     738:	08 95       	ret

0000073a <GasSensor_Poll>:

void GasSensor_Poll(void){
	if(0 == DIO_void_GetBitValue(GAS_SENSOR_PORT, GAS_SENSOR_PIN)){
     73a:	67 e0       	ldi	r22, 0x07	; 7
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	0e 94 69 05 	call	0xad2	; 0xad2 <DIO_void_GetBitValue>
     742:	81 11       	cpse	r24, r1
     744:	02 c0       	rjmp	.+4      	; 0x74a <GasSensor_Poll+0x10>
		GasSensor_PollerHandler();
     746:	0e 94 77 03 	call	0x6ee	; 0x6ee <GasSensor_PollerHandler>
     74a:	08 95       	ret

0000074c <main>:
void EXT_INT1_Int_Handler(void);
/****************MAIN FUNCTION*********************/

int main(void){
	
	APP_Init();
     74c:	0e 94 1c 03 	call	0x638	; 0x638 <APP_Init>
	
	while(1)
	{	SPI_Sender_Flag = 0;
     750:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__data_end>
		GasSensor_Poll();
     754:	0e 94 9d 03 	call	0x73a	; 0x73a <GasSensor_Poll>
		if( IsAnySensorActive() ){}
     758:	0e 94 06 03 	call	0x60c	; 0x60c <IsAnySensorActive>
     75c:	81 11       	cpse	r24, r1
     75e:	f8 cf       	rjmp	.-16     	; 0x750 <main+0x4>
		else{
			if(IsModeNormal < 100000){
     760:	00 91 f3 00 	lds	r16, 0x00F3	; 0x8000f3 <IsModeNormal>
     764:	10 91 f4 00 	lds	r17, 0x00F4	; 0x8000f4 <IsModeNormal+0x1>
     768:	d0 91 f5 00 	lds	r29, 0x00F5	; 0x8000f5 <IsModeNormal+0x2>
     76c:	c0 91 f6 00 	lds	r28, 0x00F6	; 0x8000f6 <IsModeNormal+0x3>
     770:	b0 91 f7 00 	lds	r27, 0x00F7	; 0x8000f7 <IsModeNormal+0x4>
     774:	a0 91 f8 00 	lds	r26, 0x00F8	; 0x8000f8 <IsModeNormal+0x5>
     778:	f0 91 f9 00 	lds	r31, 0x00F9	; 0x8000f9 <IsModeNormal+0x6>
     77c:	f0 90 fa 00 	lds	r15, 0x00FA	; 0x8000fa <IsModeNormal+0x7>
     780:	20 2f       	mov	r18, r16
     782:	31 2f       	mov	r19, r17
     784:	4d 2f       	mov	r20, r29
     786:	5c 2f       	mov	r21, r28
     788:	6b 2f       	mov	r22, r27
     78a:	7a 2f       	mov	r23, r26
     78c:	8f 2f       	mov	r24, r31
     78e:	9f 2d       	mov	r25, r15
     790:	2f 39       	cpi	r18, 0x9F	; 159
     792:	e6 e8       	ldi	r30, 0x86	; 134
     794:	3e 07       	cpc	r19, r30
     796:	e1 e0       	ldi	r30, 0x01	; 1
     798:	4e 07       	cpc	r20, r30
     79a:	51 05       	cpc	r21, r1
     79c:	61 05       	cpc	r22, r1
     79e:	71 05       	cpc	r23, r1
     7a0:	81 05       	cpc	r24, r1
     7a2:	91 05       	cpc	r25, r1
     7a4:	09 f0       	breq	.+2      	; 0x7a8 <main+0x5c>
     7a6:	a0 f4       	brcc	.+40     	; 0x7d0 <main+0x84>
				IsModeNormal++;
     7a8:	a1 e0       	ldi	r26, 0x01	; 1
     7aa:	0e 94 c6 0a 	call	0x158c	; 0x158c <__adddi3_s8>
     7ae:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <IsModeNormal>
     7b2:	30 93 f4 00 	sts	0x00F4, r19	; 0x8000f4 <IsModeNormal+0x1>
     7b6:	40 93 f5 00 	sts	0x00F5, r20	; 0x8000f5 <IsModeNormal+0x2>
     7ba:	50 93 f6 00 	sts	0x00F6, r21	; 0x8000f6 <IsModeNormal+0x3>
     7be:	60 93 f7 00 	sts	0x00F7, r22	; 0x8000f7 <IsModeNormal+0x4>
     7c2:	70 93 f8 00 	sts	0x00F8, r23	; 0x8000f8 <IsModeNormal+0x5>
     7c6:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <IsModeNormal+0x6>
     7ca:	90 93 fa 00 	sts	0x00FA, r25	; 0x8000fa <IsModeNormal+0x7>
     7ce:	c0 cf       	rjmp	.-128    	; 0x750 <main+0x4>
			}
			else if(IsModeNormal == 100000){
     7d0:	20 2f       	mov	r18, r16
     7d2:	31 2f       	mov	r19, r17
     7d4:	4d 2f       	mov	r20, r29
     7d6:	5c 2f       	mov	r21, r28
     7d8:	6b 2f       	mov	r22, r27
     7da:	7a 2f       	mov	r23, r26
     7dc:	8f 2f       	mov	r24, r31
     7de:	9f 2d       	mov	r25, r15
     7e0:	20 3a       	cpi	r18, 0xA0	; 160
     7e2:	36 48       	sbci	r19, 0x86	; 134
     7e4:	41 40       	sbci	r20, 0x01	; 1
     7e6:	51 05       	cpc	r21, r1
     7e8:	61 05       	cpc	r22, r1
     7ea:	71 05       	cpc	r23, r1
     7ec:	81 05       	cpc	r24, r1
     7ee:	91 05       	cpc	r25, r1
     7f0:	09 f0       	breq	.+2      	; 0x7f4 <main+0xa8>
     7f2:	48 c0       	rjmp	.+144    	; 0x884 <__stack+0x25>
				SPI_Sender_Flag = 0;
     7f4:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__data_end>
				Gas_State = 0;
     7f8:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <Gas_State>
				Flame_state = 0;
     7fc:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <Flame_state>
				BUZZER_turn_off();
     800:	0e 94 3f 02 	call	0x47e	; 0x47e <BUZZER_turn_off>
				LED_turn_off(LED_BLUE_PORT,LED_BLUE_PIN);
     804:	65 e0       	ldi	r22, 0x05	; 5
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	0e 94 2a 02 	call	0x454	; 0x454 <LED_turn_off>
				LED_turn_off(LED_YELLOW_PORT,LED_YELLOW_PIN);
     80c:	66 e0       	ldi	r22, 0x06	; 6
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	0e 94 2a 02 	call	0x454	; 0x454 <LED_turn_off>
				LED_turn_on(LED_GREEN_PORT ,LED_GREEN_PIN);
     814:	64 e0       	ldi	r22, 0x04	; 4
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	0e 94 26 02 	call	0x44c	; 0x44c <LED_turn_on>
				lcd_send_string_pos(gas_text_std,1,1);
     81c:	41 e0       	ldi	r20, 0x01	; 1
     81e:	61 e0       	ldi	r22, 0x01	; 1
     820:	8b ec       	ldi	r24, 0xCB	; 203
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
				lcd_send_string_pos(flame_text_std,2,1);
     828:	41 e0       	ldi	r20, 0x01	; 1
     82a:	62 e0       	ldi	r22, 0x02	; 2
     82c:	82 ea       	ldi	r24, 0xA2	; 162
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <lcd_send_string_pos>
				FanLowSpeed();
     834:	0e 94 18 03 	call	0x630	; 0x630 <FanLowSpeed>
				motor_HS_flag = 0;
     838:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <motor_HS_flag>
				IsModeNormal++;
     83c:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <IsModeNormal>
     840:	30 91 f4 00 	lds	r19, 0x00F4	; 0x8000f4 <IsModeNormal+0x1>
     844:	40 91 f5 00 	lds	r20, 0x00F5	; 0x8000f5 <IsModeNormal+0x2>
     848:	50 91 f6 00 	lds	r21, 0x00F6	; 0x8000f6 <IsModeNormal+0x3>
     84c:	60 91 f7 00 	lds	r22, 0x00F7	; 0x8000f7 <IsModeNormal+0x4>
     850:	70 91 f8 00 	lds	r23, 0x00F8	; 0x8000f8 <IsModeNormal+0x5>
     854:	80 91 f9 00 	lds	r24, 0x00F9	; 0x8000f9 <IsModeNormal+0x6>
     858:	90 91 fa 00 	lds	r25, 0x00FA	; 0x8000fa <IsModeNormal+0x7>
     85c:	a1 e0       	ldi	r26, 0x01	; 1
     85e:	0e 94 c6 0a 	call	0x158c	; 0x158c <__adddi3_s8>
     862:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <IsModeNormal>
     866:	30 93 f4 00 	sts	0x00F4, r19	; 0x8000f4 <IsModeNormal+0x1>
     86a:	40 93 f5 00 	sts	0x00F5, r20	; 0x8000f5 <IsModeNormal+0x2>
     86e:	50 93 f6 00 	sts	0x00F6, r21	; 0x8000f6 <IsModeNormal+0x3>
     872:	60 93 f7 00 	sts	0x00F7, r22	; 0x8000f7 <IsModeNormal+0x4>
     876:	70 93 f8 00 	sts	0x00F8, r23	; 0x8000f8 <IsModeNormal+0x5>
     87a:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <IsModeNormal+0x6>
     87e:	90 93 fa 00 	sts	0x00FA, r25	; 0x8000fa <IsModeNormal+0x7>
     882:	66 cf       	rjmp	.-308    	; 0x750 <main+0x4>
			}
			else{
				SPI_Sender_Flag = 0;
     884:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__data_end>
     888:	63 cf       	rjmp	.-314    	; 0x750 <main+0x4>

0000088a <ADC_Auto_Trigger_Init>:
	SFIOR |= (last_mode<<5);
}

void ADC_Auto_Trigger_Init(u8 channel){
	/*		disable adc peripheral								*/
	CLEAR_BIT(ADCSRA, ADC_ENABLE_BIT);
     88a:	96 b1       	in	r25, 0x06	; 6
     88c:	9f 77       	andi	r25, 0x7F	; 127
     88e:	96 b9       	out	0x06, r25	; 6
	
	/*		select reference of adc								*/
	CLEAR_BIT(ADMUX, ADC_REF_SELECT_1);
     890:	97 b1       	in	r25, 0x07	; 7
     892:	9f 77       	andi	r25, 0x7F	; 127
     894:	97 b9       	out	0x07, r25	; 7
	SET_BIT(ADMUX, ADC_REF_SELECT_0);
     896:	97 b1       	in	r25, 0x07	; 7
     898:	90 64       	ori	r25, 0x40	; 64
     89a:	97 b9       	out	0x07, r25	; 7
	
	/*		configure right adjustment							*/
	CLEAR_BIT(ADMUX, ADC_LEFT_ADJUST_BIT);
     89c:	97 b1       	in	r25, 0x07	; 7
     89e:	9f 7d       	andi	r25, 0xDF	; 223
     8a0:	97 b9       	out	0x07, r25	; 7
	
	/*		configure prescaler to be 128 16MHz crystal			*/
	SET_BIT(ADCSRA, ADC_PRESCALER_BIT_0);
     8a2:	96 b1       	in	r25, 0x06	; 6
     8a4:	91 60       	ori	r25, 0x01	; 1
     8a6:	96 b9       	out	0x06, r25	; 6
	SET_BIT(ADCSRA, ADC_PRESCALER_BIT_1);
     8a8:	96 b1       	in	r25, 0x06	; 6
     8aa:	92 60       	ori	r25, 0x02	; 2
     8ac:	96 b9       	out	0x06, r25	; 6
	SET_BIT(ADCSRA, ADC_PRESCALER_BIT_2);
     8ae:	96 b1       	in	r25, 0x06	; 6
     8b0:	94 60       	ori	r25, 0x04	; 4
     8b2:	96 b9       	out	0x06, r25	; 6
	
	/*		disable interrupt and clear flag by setting it		*/
	CLEAR_BIT(ADCSRA, ADC_INTERRUPT_ENABLE_BIT);
     8b4:	96 b1       	in	r25, 0x06	; 6
     8b6:	97 7f       	andi	r25, 0xF7	; 247
     8b8:	96 b9       	out	0x06, r25	; 6
	SET_BIT(ADCSRA, ADC_INTERRUPT_FLAG_BIT);
     8ba:	96 b1       	in	r25, 0x06	; 6
     8bc:	90 61       	ori	r25, 0x10	; 16
     8be:	96 b9       	out	0x06, r25	; 6
	
	/*	select External Interrupt 0 as Auto trigger Source		*/
	CLEAR_BIT(SFIOR, 5);
     8c0:	90 b7       	in	r25, 0x30	; 48
     8c2:	9f 7d       	andi	r25, 0xDF	; 223
     8c4:	90 bf       	out	0x30, r25	; 48
	SET_BIT(SFIOR, 6);
     8c6:	90 b7       	in	r25, 0x30	; 48
     8c8:	90 64       	ori	r25, 0x40	; 64
     8ca:	90 bf       	out	0x30, r25	; 48
	CLEAR_BIT(SFIOR, 7);
     8cc:	90 b7       	in	r25, 0x30	; 48
     8ce:	9f 77       	andi	r25, 0x7F	; 127
     8d0:	90 bf       	out	0x30, r25	; 48
	/*select channel*/
	ADMUX &= 0xE0;
     8d2:	97 b1       	in	r25, 0x07	; 7
     8d4:	90 7e       	andi	r25, 0xE0	; 224
     8d6:	97 b9       	out	0x07, r25	; 7
	ADMUX |= channel;
     8d8:	97 b1       	in	r25, 0x07	; 7
     8da:	89 2b       	or	r24, r25
     8dc:	87 b9       	out	0x07, r24	; 7
	
	/*					enable auto trigger						*/
	SET_BIT(ADCSRA, 5);
     8de:	86 b1       	in	r24, 0x06	; 6
     8e0:	80 62       	ori	r24, 0x20	; 32
     8e2:	86 b9       	out	0x06, r24	; 6
	
	/*					enable adc peripheral					*/
	SET_BIT(ADCSRA, ADC_ENABLE_BIT);
     8e4:	86 b1       	in	r24, 0x06	; 6
     8e6:	80 68       	ori	r24, 0x80	; 128
     8e8:	86 b9       	out	0x06, r24	; 6
     8ea:	08 95       	ret

000008ec <ADC_Auto_Trigger_Read>:
}

void ADC_Auto_Trigger_Read(volatile u16* retVal){
     8ec:	fc 01       	movw	r30, r24
	/* DO NOT UN COMMENT THE WHILE LOOP BECAUSE THE FLAG SOMETIMES DOESNOT GET TRIGGERED*/
	//while(0 == GET_BIT(ADCSRA, ADC_INTERRUPT_FLAG_BIT)){
		///*NOTHING*/
	//}
	/* clear adc flag by setting it*/
	SET_BIT(ADCSRA, ADC_INTERRUPT_FLAG_BIT);
     8ee:	96 b1       	in	r25, 0x06	; 6
     8f0:	90 61       	ori	r25, 0x10	; 16
     8f2:	96 b9       	out	0x06, r25	; 6
	/*pass data to pointer*/
	*retVal = ADC;
     8f4:	84 b1       	in	r24, 0x04	; 4
     8f6:	95 b1       	in	r25, 0x05	; 5
     8f8:	91 83       	std	Z+1, r25	; 0x01
     8fa:	80 83       	st	Z, r24
     8fc:	08 95       	ret

000008fe <DIO_void_SetPinDirection>:
void DIO_void_togglePinValue	( u8 portID, u8 pinID){
	switch(portID){
		case PORT_A: TOGGLE_BIT(PORTA, pinID); break;
		case PORT_B: TOGGLE_BIT(PORTB, pinID); break;
		case PORT_C: TOGGLE_BIT(PORTC, pinID); break;
		case PORT_D: TOGGLE_BIT(PORTD, pinID); break;
     8fe:	81 30       	cpi	r24, 0x01	; 1
     900:	11 f1       	breq	.+68     	; 0x946 <DIO_void_SetPinDirection+0x48>
     902:	30 f0       	brcs	.+12     	; 0x910 <DIO_void_SetPinDirection+0x12>
     904:	82 30       	cpi	r24, 0x02	; 2
     906:	d1 f1       	breq	.+116    	; 0x97c <DIO_void_SetPinDirection+0x7e>
     908:	83 30       	cpi	r24, 0x03	; 3
     90a:	09 f4       	brne	.+2      	; 0x90e <DIO_void_SetPinDirection+0x10>
     90c:	52 c0       	rjmp	.+164    	; 0x9b2 <DIO_void_SetPinDirection+0xb4>
     90e:	08 95       	ret
     910:	41 30       	cpi	r20, 0x01	; 1
     912:	59 f4       	brne	.+22     	; 0x92a <DIO_void_SetPinDirection+0x2c>
     914:	2a b3       	in	r18, 0x1a	; 26
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	02 c0       	rjmp	.+4      	; 0x920 <DIO_void_SetPinDirection+0x22>
     91c:	88 0f       	add	r24, r24
     91e:	99 1f       	adc	r25, r25
     920:	6a 95       	dec	r22
     922:	e2 f7       	brpl	.-8      	; 0x91c <DIO_void_SetPinDirection+0x1e>
     924:	82 2b       	or	r24, r18
     926:	8a bb       	out	0x1a, r24	; 26
     928:	08 95       	ret
     92a:	41 11       	cpse	r20, r1
     92c:	5c c0       	rjmp	.+184    	; 0x9e6 <DIO_void_SetPinDirection+0xe8>
     92e:	2a b3       	in	r18, 0x1a	; 26
     930:	81 e0       	ldi	r24, 0x01	; 1
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	02 c0       	rjmp	.+4      	; 0x93a <DIO_void_SetPinDirection+0x3c>
     936:	88 0f       	add	r24, r24
     938:	99 1f       	adc	r25, r25
     93a:	6a 95       	dec	r22
     93c:	e2 f7       	brpl	.-8      	; 0x936 <DIO_void_SetPinDirection+0x38>
     93e:	80 95       	com	r24
     940:	82 23       	and	r24, r18
     942:	8a bb       	out	0x1a, r24	; 26
     944:	08 95       	ret
     946:	41 30       	cpi	r20, 0x01	; 1
     948:	59 f4       	brne	.+22     	; 0x960 <DIO_void_SetPinDirection+0x62>
     94a:	27 b3       	in	r18, 0x17	; 23
     94c:	81 e0       	ldi	r24, 0x01	; 1
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	02 c0       	rjmp	.+4      	; 0x956 <DIO_void_SetPinDirection+0x58>
     952:	88 0f       	add	r24, r24
     954:	99 1f       	adc	r25, r25
     956:	6a 95       	dec	r22
     958:	e2 f7       	brpl	.-8      	; 0x952 <DIO_void_SetPinDirection+0x54>
     95a:	82 2b       	or	r24, r18
     95c:	87 bb       	out	0x17, r24	; 23
     95e:	08 95       	ret
     960:	41 11       	cpse	r20, r1
     962:	41 c0       	rjmp	.+130    	; 0x9e6 <DIO_void_SetPinDirection+0xe8>
     964:	27 b3       	in	r18, 0x17	; 23
     966:	81 e0       	ldi	r24, 0x01	; 1
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	02 c0       	rjmp	.+4      	; 0x970 <DIO_void_SetPinDirection+0x72>
     96c:	88 0f       	add	r24, r24
     96e:	99 1f       	adc	r25, r25
     970:	6a 95       	dec	r22
     972:	e2 f7       	brpl	.-8      	; 0x96c <DIO_void_SetPinDirection+0x6e>
     974:	80 95       	com	r24
     976:	82 23       	and	r24, r18
     978:	87 bb       	out	0x17, r24	; 23
     97a:	08 95       	ret
     97c:	41 30       	cpi	r20, 0x01	; 1
     97e:	59 f4       	brne	.+22     	; 0x996 <DIO_void_SetPinDirection+0x98>
     980:	24 b3       	in	r18, 0x14	; 20
     982:	81 e0       	ldi	r24, 0x01	; 1
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	02 c0       	rjmp	.+4      	; 0x98c <DIO_void_SetPinDirection+0x8e>
     988:	88 0f       	add	r24, r24
     98a:	99 1f       	adc	r25, r25
     98c:	6a 95       	dec	r22
     98e:	e2 f7       	brpl	.-8      	; 0x988 <DIO_void_SetPinDirection+0x8a>
     990:	82 2b       	or	r24, r18
     992:	84 bb       	out	0x14, r24	; 20
     994:	08 95       	ret
     996:	41 11       	cpse	r20, r1
     998:	26 c0       	rjmp	.+76     	; 0x9e6 <DIO_void_SetPinDirection+0xe8>
     99a:	24 b3       	in	r18, 0x14	; 20
     99c:	81 e0       	ldi	r24, 0x01	; 1
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	02 c0       	rjmp	.+4      	; 0x9a6 <DIO_void_SetPinDirection+0xa8>
     9a2:	88 0f       	add	r24, r24
     9a4:	99 1f       	adc	r25, r25
     9a6:	6a 95       	dec	r22
     9a8:	e2 f7       	brpl	.-8      	; 0x9a2 <DIO_void_SetPinDirection+0xa4>
     9aa:	80 95       	com	r24
     9ac:	82 23       	and	r24, r18
     9ae:	84 bb       	out	0x14, r24	; 20
     9b0:	08 95       	ret
     9b2:	41 30       	cpi	r20, 0x01	; 1
     9b4:	59 f4       	brne	.+22     	; 0x9cc <DIO_void_SetPinDirection+0xce>
     9b6:	21 b3       	in	r18, 0x11	; 17
     9b8:	81 e0       	ldi	r24, 0x01	; 1
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <DIO_void_SetPinDirection+0xc4>
     9be:	88 0f       	add	r24, r24
     9c0:	99 1f       	adc	r25, r25
     9c2:	6a 95       	dec	r22
     9c4:	e2 f7       	brpl	.-8      	; 0x9be <DIO_void_SetPinDirection+0xc0>
     9c6:	82 2b       	or	r24, r18
     9c8:	81 bb       	out	0x11, r24	; 17
     9ca:	08 95       	ret
     9cc:	41 11       	cpse	r20, r1
     9ce:	0b c0       	rjmp	.+22     	; 0x9e6 <DIO_void_SetPinDirection+0xe8>
     9d0:	21 b3       	in	r18, 0x11	; 17
     9d2:	81 e0       	ldi	r24, 0x01	; 1
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	02 c0       	rjmp	.+4      	; 0x9dc <DIO_void_SetPinDirection+0xde>
     9d8:	88 0f       	add	r24, r24
     9da:	99 1f       	adc	r25, r25
     9dc:	6a 95       	dec	r22
     9de:	e2 f7       	brpl	.-8      	; 0x9d8 <DIO_void_SetPinDirection+0xda>
     9e0:	80 95       	com	r24
     9e2:	82 23       	and	r24, r18
     9e4:	81 bb       	out	0x11, r24	; 17
     9e6:	08 95       	ret

000009e8 <DIO_void_SetPinValue>:
     9e8:	81 30       	cpi	r24, 0x01	; 1
     9ea:	11 f1       	breq	.+68     	; 0xa30 <DIO_void_SetPinValue+0x48>
     9ec:	30 f0       	brcs	.+12     	; 0x9fa <DIO_void_SetPinValue+0x12>
     9ee:	82 30       	cpi	r24, 0x02	; 2
     9f0:	d1 f1       	breq	.+116    	; 0xa66 <DIO_void_SetPinValue+0x7e>
     9f2:	83 30       	cpi	r24, 0x03	; 3
     9f4:	09 f4       	brne	.+2      	; 0x9f8 <DIO_void_SetPinValue+0x10>
     9f6:	52 c0       	rjmp	.+164    	; 0xa9c <DIO_void_SetPinValue+0xb4>
     9f8:	08 95       	ret
     9fa:	41 30       	cpi	r20, 0x01	; 1
     9fc:	59 f4       	brne	.+22     	; 0xa14 <DIO_void_SetPinValue+0x2c>
     9fe:	2b b3       	in	r18, 0x1b	; 27
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	90 e0       	ldi	r25, 0x00	; 0
     a04:	02 c0       	rjmp	.+4      	; 0xa0a <DIO_void_SetPinValue+0x22>
     a06:	88 0f       	add	r24, r24
     a08:	99 1f       	adc	r25, r25
     a0a:	6a 95       	dec	r22
     a0c:	e2 f7       	brpl	.-8      	; 0xa06 <DIO_void_SetPinValue+0x1e>
     a0e:	82 2b       	or	r24, r18
     a10:	8b bb       	out	0x1b, r24	; 27
     a12:	08 95       	ret
     a14:	41 11       	cpse	r20, r1
     a16:	5c c0       	rjmp	.+184    	; 0xad0 <DIO_void_SetPinValue+0xe8>
     a18:	2b b3       	in	r18, 0x1b	; 27
     a1a:	81 e0       	ldi	r24, 0x01	; 1
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	02 c0       	rjmp	.+4      	; 0xa24 <DIO_void_SetPinValue+0x3c>
     a20:	88 0f       	add	r24, r24
     a22:	99 1f       	adc	r25, r25
     a24:	6a 95       	dec	r22
     a26:	e2 f7       	brpl	.-8      	; 0xa20 <DIO_void_SetPinValue+0x38>
     a28:	80 95       	com	r24
     a2a:	82 23       	and	r24, r18
     a2c:	8b bb       	out	0x1b, r24	; 27
     a2e:	08 95       	ret
     a30:	41 30       	cpi	r20, 0x01	; 1
     a32:	59 f4       	brne	.+22     	; 0xa4a <DIO_void_SetPinValue+0x62>
     a34:	28 b3       	in	r18, 0x18	; 24
     a36:	81 e0       	ldi	r24, 0x01	; 1
     a38:	90 e0       	ldi	r25, 0x00	; 0
     a3a:	02 c0       	rjmp	.+4      	; 0xa40 <DIO_void_SetPinValue+0x58>
     a3c:	88 0f       	add	r24, r24
     a3e:	99 1f       	adc	r25, r25
     a40:	6a 95       	dec	r22
     a42:	e2 f7       	brpl	.-8      	; 0xa3c <DIO_void_SetPinValue+0x54>
     a44:	82 2b       	or	r24, r18
     a46:	88 bb       	out	0x18, r24	; 24
     a48:	08 95       	ret
     a4a:	41 11       	cpse	r20, r1
     a4c:	41 c0       	rjmp	.+130    	; 0xad0 <DIO_void_SetPinValue+0xe8>
     a4e:	28 b3       	in	r18, 0x18	; 24
     a50:	81 e0       	ldi	r24, 0x01	; 1
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	02 c0       	rjmp	.+4      	; 0xa5a <DIO_void_SetPinValue+0x72>
     a56:	88 0f       	add	r24, r24
     a58:	99 1f       	adc	r25, r25
     a5a:	6a 95       	dec	r22
     a5c:	e2 f7       	brpl	.-8      	; 0xa56 <DIO_void_SetPinValue+0x6e>
     a5e:	80 95       	com	r24
     a60:	82 23       	and	r24, r18
     a62:	88 bb       	out	0x18, r24	; 24
     a64:	08 95       	ret
     a66:	41 30       	cpi	r20, 0x01	; 1
     a68:	59 f4       	brne	.+22     	; 0xa80 <DIO_void_SetPinValue+0x98>
     a6a:	25 b3       	in	r18, 0x15	; 21
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	02 c0       	rjmp	.+4      	; 0xa76 <DIO_void_SetPinValue+0x8e>
     a72:	88 0f       	add	r24, r24
     a74:	99 1f       	adc	r25, r25
     a76:	6a 95       	dec	r22
     a78:	e2 f7       	brpl	.-8      	; 0xa72 <DIO_void_SetPinValue+0x8a>
     a7a:	82 2b       	or	r24, r18
     a7c:	85 bb       	out	0x15, r24	; 21
     a7e:	08 95       	ret
     a80:	41 11       	cpse	r20, r1
     a82:	26 c0       	rjmp	.+76     	; 0xad0 <DIO_void_SetPinValue+0xe8>
     a84:	25 b3       	in	r18, 0x15	; 21
     a86:	81 e0       	ldi	r24, 0x01	; 1
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	02 c0       	rjmp	.+4      	; 0xa90 <DIO_void_SetPinValue+0xa8>
     a8c:	88 0f       	add	r24, r24
     a8e:	99 1f       	adc	r25, r25
     a90:	6a 95       	dec	r22
     a92:	e2 f7       	brpl	.-8      	; 0xa8c <DIO_void_SetPinValue+0xa4>
     a94:	80 95       	com	r24
     a96:	82 23       	and	r24, r18
     a98:	85 bb       	out	0x15, r24	; 21
     a9a:	08 95       	ret
     a9c:	41 30       	cpi	r20, 0x01	; 1
     a9e:	59 f4       	brne	.+22     	; 0xab6 <DIO_void_SetPinValue+0xce>
     aa0:	22 b3       	in	r18, 0x12	; 18
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	02 c0       	rjmp	.+4      	; 0xaac <DIO_void_SetPinValue+0xc4>
     aa8:	88 0f       	add	r24, r24
     aaa:	99 1f       	adc	r25, r25
     aac:	6a 95       	dec	r22
     aae:	e2 f7       	brpl	.-8      	; 0xaa8 <DIO_void_SetPinValue+0xc0>
     ab0:	82 2b       	or	r24, r18
     ab2:	82 bb       	out	0x12, r24	; 18
     ab4:	08 95       	ret
     ab6:	41 11       	cpse	r20, r1
     ab8:	0b c0       	rjmp	.+22     	; 0xad0 <DIO_void_SetPinValue+0xe8>
     aba:	22 b3       	in	r18, 0x12	; 18
     abc:	81 e0       	ldi	r24, 0x01	; 1
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	02 c0       	rjmp	.+4      	; 0xac6 <DIO_void_SetPinValue+0xde>
     ac2:	88 0f       	add	r24, r24
     ac4:	99 1f       	adc	r25, r25
     ac6:	6a 95       	dec	r22
     ac8:	e2 f7       	brpl	.-8      	; 0xac2 <DIO_void_SetPinValue+0xda>
     aca:	80 95       	com	r24
     acc:	82 23       	and	r24, r18
     ace:	82 bb       	out	0x12, r24	; 18
     ad0:	08 95       	ret

00000ad2 <DIO_void_GetBitValue>:
		default: break;
	}
}
u8 DIO_void_GetBitValue(u8 PortID, u8 PinID){
	u8 value = 0;
	switch(PortID){
     ad2:	81 30       	cpi	r24, 0x01	; 1
     ad4:	79 f0       	breq	.+30     	; 0xaf4 <DIO_void_GetBitValue+0x22>
     ad6:	28 f0       	brcs	.+10     	; 0xae2 <DIO_void_GetBitValue+0x10>
     ad8:	82 30       	cpi	r24, 0x02	; 2
     ada:	a9 f0       	breq	.+42     	; 0xb06 <DIO_void_GetBitValue+0x34>
     adc:	83 30       	cpi	r24, 0x03	; 3
     ade:	e1 f0       	breq	.+56     	; 0xb18 <DIO_void_GetBitValue+0x46>
     ae0:	24 c0       	rjmp	.+72     	; 0xb2a <DIO_void_GetBitValue+0x58>
		case PORT_A: value = GET_BIT(PINA, PinID); break;
     ae2:	89 b3       	in	r24, 0x19	; 25
     ae4:	90 e0       	ldi	r25, 0x00	; 0
     ae6:	02 c0       	rjmp	.+4      	; 0xaec <DIO_void_GetBitValue+0x1a>
     ae8:	95 95       	asr	r25
     aea:	87 95       	ror	r24
     aec:	6a 95       	dec	r22
     aee:	e2 f7       	brpl	.-8      	; 0xae8 <DIO_void_GetBitValue+0x16>
     af0:	81 70       	andi	r24, 0x01	; 1
     af2:	08 95       	ret
		case PORT_B: value = GET_BIT(PINB, PinID); break;
     af4:	86 b3       	in	r24, 0x16	; 22
     af6:	90 e0       	ldi	r25, 0x00	; 0
     af8:	02 c0       	rjmp	.+4      	; 0xafe <DIO_void_GetBitValue+0x2c>
     afa:	95 95       	asr	r25
     afc:	87 95       	ror	r24
     afe:	6a 95       	dec	r22
     b00:	e2 f7       	brpl	.-8      	; 0xafa <DIO_void_GetBitValue+0x28>
     b02:	81 70       	andi	r24, 0x01	; 1
     b04:	08 95       	ret
		case PORT_C: value = GET_BIT(PINC, PinID); break;
     b06:	83 b3       	in	r24, 0x13	; 19
     b08:	90 e0       	ldi	r25, 0x00	; 0
     b0a:	02 c0       	rjmp	.+4      	; 0xb10 <DIO_void_GetBitValue+0x3e>
     b0c:	95 95       	asr	r25
     b0e:	87 95       	ror	r24
     b10:	6a 95       	dec	r22
     b12:	e2 f7       	brpl	.-8      	; 0xb0c <DIO_void_GetBitValue+0x3a>
     b14:	81 70       	andi	r24, 0x01	; 1
     b16:	08 95       	ret
		case PORT_D: value = GET_BIT(PIND, PinID); break;
     b18:	80 b3       	in	r24, 0x10	; 16
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	02 c0       	rjmp	.+4      	; 0xb22 <DIO_void_GetBitValue+0x50>
     b1e:	95 95       	asr	r25
     b20:	87 95       	ror	r24
     b22:	6a 95       	dec	r22
     b24:	e2 f7       	brpl	.-8      	; 0xb1e <DIO_void_GetBitValue+0x4c>
     b26:	81 70       	andi	r24, 0x01	; 1
     b28:	08 95       	ret
		case PORT_D: TOGGLE_BIT(PORTD, pinID); break;
		default: break;
	}
}
u8 DIO_void_GetBitValue(u8 PortID, u8 PinID){
	u8 value = 0;
     b2a:	80 e0       	ldi	r24, 0x00	; 0
		case PORT_C: value = GET_BIT(PINC, PinID); break;
		case PORT_D: value = GET_BIT(PIND, PinID); break;
		default: break;
	}
	return value;
}
     b2c:	08 95       	ret

00000b2e <ext_callback>:
		
		default:			  break;
	}
}
static void ext_callback( void (*ptr)(void), u8 ext_int_num ){
	switch(ext_int_num){
     b2e:	61 30       	cpi	r22, 0x01	; 1
     b30:	49 f0       	breq	.+18     	; 0xb44 <ext_callback+0x16>
     b32:	18 f0       	brcs	.+6      	; 0xb3a <ext_callback+0xc>
     b34:	62 30       	cpi	r22, 0x02	; 2
     b36:	59 f0       	breq	.+22     	; 0xb4e <ext_callback+0x20>
     b38:	08 95       	ret
		case EXT_INT_0_INDEX: 
		EXT_INT0_InterruptHandler = ptr;
     b3a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <EXT_INT0_InterruptHandler+0x1>
     b3e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <EXT_INT0_InterruptHandler>
		break;
     b42:	08 95       	ret
		case EXT_INT_1_INDEX: 
		EXT_INT1_InterruptHandler = ptr;
     b44:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <EXT_INT1_InterruptHandler+0x1>
     b48:	80 93 ff 00 	sts	0x00FF, r24	; 0x8000ff <EXT_INT1_InterruptHandler>
		break;
     b4c:	08 95       	ret
		case EXT_INT_2_INDEX: 
		EXT_INT2_InterruptHandler = ptr;
     b4e:	90 93 fe 00 	sts	0x00FE, r25	; 0x8000fe <EXT_INT2_InterruptHandler+0x1>
     b52:	80 93 fd 00 	sts	0x00FD, r24	; 0x8000fd <EXT_INT2_InterruptHandler>
     b56:	08 95       	ret

00000b58 <ext_init>:
static void (*EXT_INT1_InterruptHandler)(void) = (void*)0;
static void (*EXT_INT2_InterruptHandler)(void) = (void*)0;

static void ext_callback( void (*ptr)(void), u8 ext_int_num );

void ext_init	 ( u8 ext_int_num, void (*ptr)(void), u8 ext_int_sense){
     b58:	cf 93       	push	r28
     b5a:	df 93       	push	r29
     b5c:	c8 2f       	mov	r28, r24
     b5e:	cb 01       	movw	r24, r22
     b60:	d4 2f       	mov	r29, r20
	
	ext_callback( ptr, ext_int_num );
     b62:	6c 2f       	mov	r22, r28
     b64:	0e 94 97 05 	call	0xb2e	; 0xb2e <ext_callback>
	
	switch(ext_int_num){
     b68:	c1 30       	cpi	r28, 0x01	; 1
     b6a:	b1 f1       	breq	.+108    	; 0xbd8 <ext_init+0x80>
     b6c:	20 f0       	brcs	.+8      	; 0xb76 <ext_init+0x1e>
     b6e:	c2 30       	cpi	r28, 0x02	; 2
     b70:	09 f4       	brne	.+2      	; 0xb74 <ext_init+0x1c>
     b72:	63 c0       	rjmp	.+198    	; 0xc3a <ext_init+0xe2>
     b74:	7b c0       	rjmp	.+246    	; 0xc6c <ext_init+0x114>
		case EXT_INT_0_INDEX: 
		DIO_void_SetPinDirection (PORT_D, PIN_2, DIO_DIRECTION_INPUT);
     b76:	40 e0       	ldi	r20, 0x00	; 0
     b78:	62 e0       	ldi	r22, 0x02	; 2
     b7a:	83 e0       	ldi	r24, 0x03	; 3
     b7c:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
		DIO_void_SetPinValue	(PORT_D, PIN_2, LOGIC_HIGH);
     b80:	41 e0       	ldi	r20, 0x01	; 1
     b82:	62 e0       	ldi	r22, 0x02	; 2
     b84:	83 e0       	ldi	r24, 0x03	; 3
     b86:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
		SET_BIT(GICR,GICR_INT0_PIN_MASK); 
     b8a:	8b b7       	in	r24, 0x3b	; 59
     b8c:	80 64       	ori	r24, 0x40	; 64
     b8e:	8b bf       	out	0x3b, r24	; 59
		
		switch(ext_int_sense){
     b90:	d1 30       	cpi	r29, 0x01	; 1
     b92:	69 f0       	breq	.+26     	; 0xbae <ext_init+0x56>
     b94:	28 f0       	brcs	.+10     	; 0xba0 <ext_init+0x48>
     b96:	d2 30       	cpi	r29, 0x02	; 2
     b98:	89 f0       	breq	.+34     	; 0xbbc <ext_init+0x64>
     b9a:	d3 30       	cpi	r29, 0x03	; 3
     b9c:	b1 f0       	breq	.+44     	; 0xbca <ext_init+0x72>
     b9e:	66 c0       	rjmp	.+204    	; 0xc6c <ext_init+0x114>
			case EXT_INT_ON_LOW_LEVEL: 
			CLEAR_BIT(MCUCR,ISC0_0_PIN_MASK);
     ba0:	85 b7       	in	r24, 0x35	; 53
     ba2:	8e 7f       	andi	r24, 0xFE	; 254
     ba4:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC0_1_PIN_MASK);
     ba6:	85 b7       	in	r24, 0x35	; 53
     ba8:	8d 7f       	andi	r24, 0xFD	; 253
     baa:	85 bf       	out	0x35, r24	; 53
			break;
     bac:	5f c0       	rjmp	.+190    	; 0xc6c <ext_init+0x114>
			
			case EXT_INT_ON_ANY_CHANGE: 
			SET_BIT(MCUCR,ISC0_0_PIN_MASK);
     bae:	85 b7       	in	r24, 0x35	; 53
     bb0:	81 60       	ori	r24, 0x01	; 1
     bb2:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC0_1_PIN_MASK);
     bb4:	85 b7       	in	r24, 0x35	; 53
     bb6:	8d 7f       	andi	r24, 0xFD	; 253
     bb8:	85 bf       	out	0x35, r24	; 53
			break;
     bba:	58 c0       	rjmp	.+176    	; 0xc6c <ext_init+0x114>
			
			case EXT_INT_ON_FALLING_EDGE:
			CLEAR_BIT(MCUCR,ISC0_0_PIN_MASK);
     bbc:	85 b7       	in	r24, 0x35	; 53
     bbe:	8e 7f       	andi	r24, 0xFE	; 254
     bc0:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR,ISC0_1_PIN_MASK);
     bc2:	85 b7       	in	r24, 0x35	; 53
     bc4:	82 60       	ori	r24, 0x02	; 2
     bc6:	85 bf       	out	0x35, r24	; 53
			break;
     bc8:	51 c0       	rjmp	.+162    	; 0xc6c <ext_init+0x114>
			
			case EXT_INT_ON_RISING_EDGE:
			SET_BIT(MCUCR,ISC0_0_PIN_MASK);
     bca:	85 b7       	in	r24, 0x35	; 53
     bcc:	81 60       	ori	r24, 0x01	; 1
     bce:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR,ISC0_1_PIN_MASK);
     bd0:	85 b7       	in	r24, 0x35	; 53
     bd2:	82 60       	ori	r24, 0x02	; 2
     bd4:	85 bf       	out	0x35, r24	; 53
			break;
     bd6:	4a c0       	rjmp	.+148    	; 0xc6c <ext_init+0x114>
			default: break;
		}
		break;
		
		case EXT_INT_1_INDEX: 
		DIO_void_SetPinDirection (PORT_D, PIN_3, DIO_DIRECTION_INPUT);
     bd8:	40 e0       	ldi	r20, 0x00	; 0
     bda:	63 e0       	ldi	r22, 0x03	; 3
     bdc:	83 e0       	ldi	r24, 0x03	; 3
     bde:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
		DIO_void_SetPinValue	(PORT_D, PIN_3, LOGIC_HIGH);
     be2:	41 e0       	ldi	r20, 0x01	; 1
     be4:	63 e0       	ldi	r22, 0x03	; 3
     be6:	83 e0       	ldi	r24, 0x03	; 3
     be8:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
		SET_BIT(GICR,GICR_INT1_PIN_MASK); 
     bec:	8b b7       	in	r24, 0x3b	; 59
     bee:	80 68       	ori	r24, 0x80	; 128
     bf0:	8b bf       	out	0x3b, r24	; 59
		switch(ext_int_sense){
     bf2:	d1 30       	cpi	r29, 0x01	; 1
     bf4:	69 f0       	breq	.+26     	; 0xc10 <ext_init+0xb8>
     bf6:	28 f0       	brcs	.+10     	; 0xc02 <ext_init+0xaa>
     bf8:	d2 30       	cpi	r29, 0x02	; 2
     bfa:	89 f0       	breq	.+34     	; 0xc1e <ext_init+0xc6>
     bfc:	d3 30       	cpi	r29, 0x03	; 3
     bfe:	b1 f0       	breq	.+44     	; 0xc2c <ext_init+0xd4>
     c00:	35 c0       	rjmp	.+106    	; 0xc6c <ext_init+0x114>
			case EXT_INT_ON_LOW_LEVEL:
			CLEAR_BIT(MCUCR,ISC1_0_PIN_MASK);
     c02:	85 b7       	in	r24, 0x35	; 53
     c04:	8b 7f       	andi	r24, 0xFB	; 251
     c06:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC1_1_PIN_MASK);
     c08:	85 b7       	in	r24, 0x35	; 53
     c0a:	87 7f       	andi	r24, 0xF7	; 247
     c0c:	85 bf       	out	0x35, r24	; 53
			break;
     c0e:	2e c0       	rjmp	.+92     	; 0xc6c <ext_init+0x114>
			
			case EXT_INT_ON_ANY_CHANGE:
			SET_BIT  (MCUCR,ISC1_0_PIN_MASK);
     c10:	85 b7       	in	r24, 0x35	; 53
     c12:	84 60       	ori	r24, 0x04	; 4
     c14:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC1_1_PIN_MASK);
     c16:	85 b7       	in	r24, 0x35	; 53
     c18:	87 7f       	andi	r24, 0xF7	; 247
     c1a:	85 bf       	out	0x35, r24	; 53
			break;
     c1c:	27 c0       	rjmp	.+78     	; 0xc6c <ext_init+0x114>
			
			case EXT_INT_ON_FALLING_EDGE:
			CLEAR_BIT(MCUCR,ISC1_0_PIN_MASK);
     c1e:	85 b7       	in	r24, 0x35	; 53
     c20:	8b 7f       	andi	r24, 0xFB	; 251
     c22:	85 bf       	out	0x35, r24	; 53
			SET_BIT	 (MCUCR,ISC1_1_PIN_MASK);
     c24:	85 b7       	in	r24, 0x35	; 53
     c26:	88 60       	ori	r24, 0x08	; 8
     c28:	85 bf       	out	0x35, r24	; 53
			break;
     c2a:	20 c0       	rjmp	.+64     	; 0xc6c <ext_init+0x114>
			
			case EXT_INT_ON_RISING_EDGE:
			SET_BIT(MCUCR,ISC1_0_PIN_MASK);
     c2c:	85 b7       	in	r24, 0x35	; 53
     c2e:	84 60       	ori	r24, 0x04	; 4
     c30:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR,ISC1_1_PIN_MASK);
     c32:	85 b7       	in	r24, 0x35	; 53
     c34:	88 60       	ori	r24, 0x08	; 8
     c36:	85 bf       	out	0x35, r24	; 53
			break;
     c38:	19 c0       	rjmp	.+50     	; 0xc6c <ext_init+0x114>
		}
		break;
		
		case EXT_INT_2_INDEX: 
		
		SET_BIT(GICR,GICR_INT2_PIN_MASK);
     c3a:	8b b7       	in	r24, 0x3b	; 59
     c3c:	80 62       	ori	r24, 0x20	; 32
     c3e:	8b bf       	out	0x3b, r24	; 59
		DIO_void_SetPinDirection (PORT_B, PIN_2, DIO_DIRECTION_INPUT); 
     c40:	40 e0       	ldi	r20, 0x00	; 0
     c42:	62 e0       	ldi	r22, 0x02	; 2
     c44:	81 e0       	ldi	r24, 0x01	; 1
     c46:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
		DIO_void_SetPinValue	(PORT_B, PIN_2, LOGIC_HIGH);
     c4a:	41 e0       	ldi	r20, 0x01	; 1
     c4c:	62 e0       	ldi	r22, 0x02	; 2
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <DIO_void_SetPinValue>
		switch(ext_int_sense){			
     c54:	d2 30       	cpi	r29, 0x02	; 2
     c56:	19 f0       	breq	.+6      	; 0xc5e <ext_init+0x106>
     c58:	d3 30       	cpi	r29, 0x03	; 3
     c5a:	29 f0       	breq	.+10     	; 0xc66 <ext_init+0x10e>
     c5c:	07 c0       	rjmp	.+14     	; 0xc6c <ext_init+0x114>
			case EXT_INT_ON_FALLING_EDGE:
			CLEAR_BIT(MCUCSR,ISC2_PIN_MASK);
     c5e:	84 b7       	in	r24, 0x34	; 52
     c60:	8f 7b       	andi	r24, 0xBF	; 191
     c62:	84 bf       	out	0x34, r24	; 52
			break;
     c64:	03 c0       	rjmp	.+6      	; 0xc6c <ext_init+0x114>
			
			case EXT_INT_ON_RISING_EDGE:
			SET_BIT(MCUCSR,ISC2_PIN_MASK);
     c66:	84 b7       	in	r24, 0x34	; 52
     c68:	80 64       	ori	r24, 0x40	; 64
     c6a:	84 bf       	out	0x34, r24	; 52
		}
		break;
		
		default:			  break;
	}
}
     c6c:	df 91       	pop	r29
     c6e:	cf 91       	pop	r28
     c70:	08 95       	ret

00000c72 <__vector_1>:
		break;
	}
}

void __vector_1() __attribute__((signal));
void __vector_1(){
     c72:	1f 92       	push	r1
     c74:	0f 92       	push	r0
     c76:	0f b6       	in	r0, 0x3f	; 63
     c78:	0f 92       	push	r0
     c7a:	11 24       	eor	r1, r1
     c7c:	2f 93       	push	r18
     c7e:	3f 93       	push	r19
     c80:	4f 93       	push	r20
     c82:	5f 93       	push	r21
     c84:	6f 93       	push	r22
     c86:	7f 93       	push	r23
     c88:	8f 93       	push	r24
     c8a:	9f 93       	push	r25
     c8c:	af 93       	push	r26
     c8e:	bf 93       	push	r27
     c90:	ef 93       	push	r30
     c92:	ff 93       	push	r31
	GIE_Disable();
     c94:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
	
	if(EXT_INT0_InterruptHandler){
     c98:	e0 91 01 01 	lds	r30, 0x0101	; 0x800101 <EXT_INT0_InterruptHandler>
     c9c:	f0 91 02 01 	lds	r31, 0x0102	; 0x800102 <EXT_INT0_InterruptHandler+0x1>
     ca0:	30 97       	sbiw	r30, 0x00	; 0
     ca2:	09 f0       	breq	.+2      	; 0xca6 <__vector_1+0x34>
		EXT_INT0_InterruptHandler();
     ca4:	09 95       	icall
	}
	
	GIE_Enable();
     ca6:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
}
     caa:	ff 91       	pop	r31
     cac:	ef 91       	pop	r30
     cae:	bf 91       	pop	r27
     cb0:	af 91       	pop	r26
     cb2:	9f 91       	pop	r25
     cb4:	8f 91       	pop	r24
     cb6:	7f 91       	pop	r23
     cb8:	6f 91       	pop	r22
     cba:	5f 91       	pop	r21
     cbc:	4f 91       	pop	r20
     cbe:	3f 91       	pop	r19
     cc0:	2f 91       	pop	r18
     cc2:	0f 90       	pop	r0
     cc4:	0f be       	out	0x3f, r0	; 63
     cc6:	0f 90       	pop	r0
     cc8:	1f 90       	pop	r1
     cca:	18 95       	reti

00000ccc <__vector_2>:
void __vector_2() __attribute__((signal));
void __vector_2(){
     ccc:	1f 92       	push	r1
     cce:	0f 92       	push	r0
     cd0:	0f b6       	in	r0, 0x3f	; 63
     cd2:	0f 92       	push	r0
     cd4:	11 24       	eor	r1, r1
     cd6:	2f 93       	push	r18
     cd8:	3f 93       	push	r19
     cda:	4f 93       	push	r20
     cdc:	5f 93       	push	r21
     cde:	6f 93       	push	r22
     ce0:	7f 93       	push	r23
     ce2:	8f 93       	push	r24
     ce4:	9f 93       	push	r25
     ce6:	af 93       	push	r26
     ce8:	bf 93       	push	r27
     cea:	ef 93       	push	r30
     cec:	ff 93       	push	r31
	GIE_Disable();
     cee:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
	
	if(EXT_INT1_InterruptHandler){
     cf2:	e0 91 ff 00 	lds	r30, 0x00FF	; 0x8000ff <EXT_INT1_InterruptHandler>
     cf6:	f0 91 00 01 	lds	r31, 0x0100	; 0x800100 <EXT_INT1_InterruptHandler+0x1>
     cfa:	30 97       	sbiw	r30, 0x00	; 0
     cfc:	09 f0       	breq	.+2      	; 0xd00 <__vector_2+0x34>
		EXT_INT1_InterruptHandler();
     cfe:	09 95       	icall
	}
	
	GIE_Enable();
     d00:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
}
     d04:	ff 91       	pop	r31
     d06:	ef 91       	pop	r30
     d08:	bf 91       	pop	r27
     d0a:	af 91       	pop	r26
     d0c:	9f 91       	pop	r25
     d0e:	8f 91       	pop	r24
     d10:	7f 91       	pop	r23
     d12:	6f 91       	pop	r22
     d14:	5f 91       	pop	r21
     d16:	4f 91       	pop	r20
     d18:	3f 91       	pop	r19
     d1a:	2f 91       	pop	r18
     d1c:	0f 90       	pop	r0
     d1e:	0f be       	out	0x3f, r0	; 63
     d20:	0f 90       	pop	r0
     d22:	1f 90       	pop	r1
     d24:	18 95       	reti

00000d26 <__vector_3>:
void __vector_3() __attribute__((signal));
void __vector_3(){
     d26:	1f 92       	push	r1
     d28:	0f 92       	push	r0
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	0f 92       	push	r0
     d2e:	11 24       	eor	r1, r1
     d30:	2f 93       	push	r18
     d32:	3f 93       	push	r19
     d34:	4f 93       	push	r20
     d36:	5f 93       	push	r21
     d38:	6f 93       	push	r22
     d3a:	7f 93       	push	r23
     d3c:	8f 93       	push	r24
     d3e:	9f 93       	push	r25
     d40:	af 93       	push	r26
     d42:	bf 93       	push	r27
     d44:	ef 93       	push	r30
     d46:	ff 93       	push	r31
	GIE_Disable();
     d48:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
	
	if(EXT_INT2_InterruptHandler){
     d4c:	e0 91 fd 00 	lds	r30, 0x00FD	; 0x8000fd <EXT_INT2_InterruptHandler>
     d50:	f0 91 fe 00 	lds	r31, 0x00FE	; 0x8000fe <EXT_INT2_InterruptHandler+0x1>
     d54:	30 97       	sbiw	r30, 0x00	; 0
     d56:	09 f0       	breq	.+2      	; 0xd5a <__vector_3+0x34>
		EXT_INT2_InterruptHandler();
     d58:	09 95       	icall
	}
	
	GIE_Enable();
     d5a:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
}
     d5e:	ff 91       	pop	r31
     d60:	ef 91       	pop	r30
     d62:	bf 91       	pop	r27
     d64:	af 91       	pop	r26
     d66:	9f 91       	pop	r25
     d68:	8f 91       	pop	r24
     d6a:	7f 91       	pop	r23
     d6c:	6f 91       	pop	r22
     d6e:	5f 91       	pop	r21
     d70:	4f 91       	pop	r20
     d72:	3f 91       	pop	r19
     d74:	2f 91       	pop	r18
     d76:	0f 90       	pop	r0
     d78:	0f be       	out	0x3f, r0	; 63
     d7a:	0f 90       	pop	r0
     d7c:	1f 90       	pop	r1
     d7e:	18 95       	reti

00000d80 <GIE_Enable>:
#include "gie_interface.h"
#include "gie_config.h"
#include "gie_private.h"

void GIE_Enable(void){
	SET_BIT(SREG, GIE_PIN_MASK);
     d80:	8f b7       	in	r24, 0x3f	; 63
     d82:	80 68       	ori	r24, 0x80	; 128
     d84:	8f bf       	out	0x3f, r24	; 63
     d86:	08 95       	ret

00000d88 <GIE_Disable>:
}
void GIE_Disable(void){
	CLEAR_BIT(SREG, GIE_PIN_MASK);
     d88:	8f b7       	in	r24, 0x3f	; 63
     d8a:	8f 77       	andi	r24, 0x7F	; 127
     d8c:	8f bf       	out	0x3f, r24	; 63
     d8e:	08 95       	ret

00000d90 <GIE_GetValue>:
}
void GIE_GetValue(u8* GIE_Value){
     d90:	fc 01       	movw	r30, r24
	*GIE_Value = GET_BIT(SREG, GIE_PIN_MASK);
     d92:	9f b7       	in	r25, 0x3f	; 63
     d94:	99 1f       	adc	r25, r25
     d96:	99 27       	eor	r25, r25
     d98:	99 1f       	adc	r25, r25
     d9a:	90 83       	st	Z, r25
     d9c:	08 95       	ret

00000d9e <GIE_SetValue>:
}
void GIE_SetValue(u8 GIE_Value){
	if(GIE_Value == 1){
     d9e:	81 30       	cpi	r24, 0x01	; 1
     da0:	19 f4       	brne	.+6      	; 0xda8 <GIE_SetValue+0xa>
		GIE_Enable();
     da2:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
     da6:	08 95       	ret
	}
	else if(GIE_Value == 0){
     da8:	81 11       	cpse	r24, r1
     daa:	02 c0       	rjmp	.+4      	; 0xdb0 <GIE_SetValue+0x12>
		GIE_Disable();
     dac:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
     db0:	08 95       	ret

00000db2 <SPI_Master_Init>:
	//CLEARING FLAG IS DONE BY READING STATUS REGISTER AND THEN ACCESSING SPDR REG
	*value = *SPDR;
}

void SPI_Callback(void (*ptr)(void)){
	SPI_InterruptHandler = ptr;
     db2:	41 e0       	ldi	r20, 0x01	; 1
     db4:	65 e0       	ldi	r22, 0x05	; 5
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
     dbc:	41 e0       	ldi	r20, 0x01	; 1
     dbe:	67 e0       	ldi	r22, 0x07	; 7
     dc0:	81 e0       	ldi	r24, 0x01	; 1
     dc2:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
     dc6:	e0 91 e3 00 	lds	r30, 0x00E3	; 0x8000e3 <SPCRbits>
     dca:	f0 91 e4 00 	lds	r31, 0x00E4	; 0x8000e4 <SPCRbits+0x1>
     dce:	10 82       	st	Z, r1
     dd0:	e0 91 e3 00 	lds	r30, 0x00E3	; 0x8000e3 <SPCRbits>
     dd4:	f0 91 e4 00 	lds	r31, 0x00E4	; 0x8000e4 <SPCRbits+0x1>
     dd8:	80 81       	ld	r24, Z
     dda:	80 61       	ori	r24, 0x10	; 16
     ddc:	80 83       	st	Z, r24
     dde:	e0 91 e3 00 	lds	r30, 0x00E3	; 0x8000e3 <SPCRbits>
     de2:	f0 91 e4 00 	lds	r31, 0x00E4	; 0x8000e4 <SPCRbits+0x1>
     de6:	80 81       	ld	r24, Z
     de8:	80 62       	ori	r24, 0x20	; 32
     dea:	80 83       	st	Z, r24
     dec:	e0 91 e3 00 	lds	r30, 0x00E3	; 0x8000e3 <SPCRbits>
     df0:	f0 91 e4 00 	lds	r31, 0x00E4	; 0x8000e4 <SPCRbits+0x1>
     df4:	80 81       	ld	r24, Z
     df6:	81 60       	ori	r24, 0x01	; 1
     df8:	80 83       	st	Z, r24
     dfa:	e0 91 e3 00 	lds	r30, 0x00E3	; 0x8000e3 <SPCRbits>
     dfe:	f0 91 e4 00 	lds	r31, 0x00E4	; 0x8000e4 <SPCRbits+0x1>
     e02:	80 81       	ld	r24, Z
     e04:	80 64       	ori	r24, 0x40	; 64
     e06:	80 83       	st	Z, r24
     e08:	08 95       	ret

00000e0a <SPI_Transmit>:
     e0a:	e0 91 df 00 	lds	r30, 0x00DF	; 0x8000df <SPDR>
     e0e:	f0 91 e0 00 	lds	r31, 0x00E0	; 0x8000e0 <SPDR+0x1>
     e12:	80 83       	st	Z, r24
     e14:	e0 91 e1 00 	lds	r30, 0x00E1	; 0x8000e1 <SPSRbits>
     e18:	f0 91 e2 00 	lds	r31, 0x00E2	; 0x8000e2 <SPSRbits+0x1>
     e1c:	80 81       	ld	r24, Z
     e1e:	88 23       	and	r24, r24
     e20:	cc f7       	brge	.-14     	; 0xe14 <SPI_Transmit+0xa>
     e22:	08 95       	ret

00000e24 <__vector_12>:
}


/*	SPI COMPLETE INTERRUPT VECTOR	*/
void __vector_12() __attribute__((signal));
void __vector_12(){
     e24:	1f 92       	push	r1
     e26:	0f 92       	push	r0
     e28:	0f b6       	in	r0, 0x3f	; 63
     e2a:	0f 92       	push	r0
     e2c:	11 24       	eor	r1, r1
     e2e:	2f 93       	push	r18
     e30:	3f 93       	push	r19
     e32:	4f 93       	push	r20
     e34:	5f 93       	push	r21
     e36:	6f 93       	push	r22
     e38:	7f 93       	push	r23
     e3a:	8f 93       	push	r24
     e3c:	9f 93       	push	r25
     e3e:	af 93       	push	r26
     e40:	bf 93       	push	r27
     e42:	ef 93       	push	r30
     e44:	ff 93       	push	r31
	GIE_Disable();
     e46:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
	if(SPI_InterruptHandler)
     e4a:	e0 91 03 01 	lds	r30, 0x0103	; 0x800103 <SPI_InterruptHandler>
     e4e:	f0 91 04 01 	lds	r31, 0x0104	; 0x800104 <SPI_InterruptHandler+0x1>
     e52:	30 97       	sbiw	r30, 0x00	; 0
     e54:	09 f0       	breq	.+2      	; 0xe58 <__vector_12+0x34>
	{
		SPI_InterruptHandler();
     e56:	09 95       	icall
	}
	GIE_Enable();
     e58:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
     e5c:	ff 91       	pop	r31
     e5e:	ef 91       	pop	r30
     e60:	bf 91       	pop	r27
     e62:	af 91       	pop	r26
     e64:	9f 91       	pop	r25
     e66:	8f 91       	pop	r24
     e68:	7f 91       	pop	r23
     e6a:	6f 91       	pop	r22
     e6c:	5f 91       	pop	r21
     e6e:	4f 91       	pop	r20
     e70:	3f 91       	pop	r19
     e72:	2f 91       	pop	r18
     e74:	0f 90       	pop	r0
     e76:	0f be       	out	0x3f, r0	; 63
     e78:	0f 90       	pop	r0
     e7a:	1f 90       	pop	r1
     e7c:	18 95       	reti

00000e7e <TMR0_Select_Mode_Select_Prescaler>:
	}
	TMR0_Disable();	
	GIE_SetValue(GIE_State);
}

void __vector_11() __attribute__((signal));
     e7e:	81 11       	cpse	r24, r1
     e80:	0a c0       	rjmp	.+20     	; 0xe96 <TMR0_Select_Mode_Select_Prescaler+0x18>
     e82:	83 b7       	in	r24, 0x33	; 51
     e84:	8e 7f       	andi	r24, 0xFE	; 254
     e86:	83 bf       	out	0x33, r24	; 51
     e88:	83 b7       	in	r24, 0x33	; 51
     e8a:	8d 7f       	andi	r24, 0xFD	; 253
     e8c:	83 bf       	out	0x33, r24	; 51
     e8e:	83 b7       	in	r24, 0x33	; 51
     e90:	8b 7f       	andi	r24, 0xFB	; 251
     e92:	83 bf       	out	0x33, r24	; 51
     e94:	08 95       	ret
     e96:	81 30       	cpi	r24, 0x01	; 1
     e98:	51 f4       	brne	.+20     	; 0xeae <TMR0_Select_Mode_Select_Prescaler+0x30>
     e9a:	83 b7       	in	r24, 0x33	; 51
     e9c:	81 60       	ori	r24, 0x01	; 1
     e9e:	83 bf       	out	0x33, r24	; 51
     ea0:	83 b7       	in	r24, 0x33	; 51
     ea2:	8d 7f       	andi	r24, 0xFD	; 253
     ea4:	83 bf       	out	0x33, r24	; 51
     ea6:	83 b7       	in	r24, 0x33	; 51
     ea8:	8b 7f       	andi	r24, 0xFB	; 251
     eaa:	83 bf       	out	0x33, r24	; 51
     eac:	08 95       	ret
     eae:	82 30       	cpi	r24, 0x02	; 2
     eb0:	51 f4       	brne	.+20     	; 0xec6 <TMR0_Select_Mode_Select_Prescaler+0x48>
     eb2:	83 b7       	in	r24, 0x33	; 51
     eb4:	8e 7f       	andi	r24, 0xFE	; 254
     eb6:	83 bf       	out	0x33, r24	; 51
     eb8:	83 b7       	in	r24, 0x33	; 51
     eba:	82 60       	ori	r24, 0x02	; 2
     ebc:	83 bf       	out	0x33, r24	; 51
     ebe:	83 b7       	in	r24, 0x33	; 51
     ec0:	8b 7f       	andi	r24, 0xFB	; 251
     ec2:	83 bf       	out	0x33, r24	; 51
     ec4:	08 95       	ret
     ec6:	83 30       	cpi	r24, 0x03	; 3
     ec8:	51 f4       	brne	.+20     	; 0xede <TMR0_Select_Mode_Select_Prescaler+0x60>
     eca:	83 b7       	in	r24, 0x33	; 51
     ecc:	81 60       	ori	r24, 0x01	; 1
     ece:	83 bf       	out	0x33, r24	; 51
     ed0:	83 b7       	in	r24, 0x33	; 51
     ed2:	82 60       	ori	r24, 0x02	; 2
     ed4:	83 bf       	out	0x33, r24	; 51
     ed6:	83 b7       	in	r24, 0x33	; 51
     ed8:	8b 7f       	andi	r24, 0xFB	; 251
     eda:	83 bf       	out	0x33, r24	; 51
     edc:	08 95       	ret
     ede:	84 30       	cpi	r24, 0x04	; 4
     ee0:	51 f4       	brne	.+20     	; 0xef6 <TMR0_Select_Mode_Select_Prescaler+0x78>
     ee2:	83 b7       	in	r24, 0x33	; 51
     ee4:	8e 7f       	andi	r24, 0xFE	; 254
     ee6:	83 bf       	out	0x33, r24	; 51
     ee8:	83 b7       	in	r24, 0x33	; 51
     eea:	8d 7f       	andi	r24, 0xFD	; 253
     eec:	83 bf       	out	0x33, r24	; 51
     eee:	83 b7       	in	r24, 0x33	; 51
     ef0:	84 60       	ori	r24, 0x04	; 4
     ef2:	83 bf       	out	0x33, r24	; 51
     ef4:	08 95       	ret
     ef6:	85 30       	cpi	r24, 0x05	; 5
     ef8:	49 f4       	brne	.+18     	; 0xf0c <TMR0_Select_Mode_Select_Prescaler+0x8e>
     efa:	83 b7       	in	r24, 0x33	; 51
     efc:	81 60       	ori	r24, 0x01	; 1
     efe:	83 bf       	out	0x33, r24	; 51
     f00:	83 b7       	in	r24, 0x33	; 51
     f02:	8d 7f       	andi	r24, 0xFD	; 253
     f04:	83 bf       	out	0x33, r24	; 51
     f06:	83 b7       	in	r24, 0x33	; 51
     f08:	84 60       	ori	r24, 0x04	; 4
     f0a:	83 bf       	out	0x33, r24	; 51
     f0c:	08 95       	ret

00000f0e <TMR0_PWM_SelectCompareMatchOutput>:
     f0e:	81 11       	cpse	r24, r1
     f10:	07 c0       	rjmp	.+14     	; 0xf20 <TMR0_PWM_SelectCompareMatchOutput+0x12>
     f12:	83 b7       	in	r24, 0x33	; 51
     f14:	8f 7e       	andi	r24, 0xEF	; 239
     f16:	83 bf       	out	0x33, r24	; 51
     f18:	83 b7       	in	r24, 0x33	; 51
     f1a:	8f 7d       	andi	r24, 0xDF	; 223
     f1c:	83 bf       	out	0x33, r24	; 51
     f1e:	08 95       	ret
     f20:	81 30       	cpi	r24, 0x01	; 1
     f22:	39 f4       	brne	.+14     	; 0xf32 <TMR0_PWM_SelectCompareMatchOutput+0x24>
     f24:	83 b7       	in	r24, 0x33	; 51
     f26:	8f 7e       	andi	r24, 0xEF	; 239
     f28:	83 bf       	out	0x33, r24	; 51
     f2a:	83 b7       	in	r24, 0x33	; 51
     f2c:	80 62       	ori	r24, 0x20	; 32
     f2e:	83 bf       	out	0x33, r24	; 51
     f30:	08 95       	ret
     f32:	82 30       	cpi	r24, 0x02	; 2
     f34:	31 f4       	brne	.+12     	; 0xf42 <TMR0_PWM_SelectCompareMatchOutput+0x34>
     f36:	83 b7       	in	r24, 0x33	; 51
     f38:	80 61       	ori	r24, 0x10	; 16
     f3a:	83 bf       	out	0x33, r24	; 51
     f3c:	83 b7       	in	r24, 0x33	; 51
     f3e:	80 62       	ori	r24, 0x20	; 32
     f40:	83 bf       	out	0x33, r24	; 51
     f42:	08 95       	ret

00000f44 <TMR0_Init>:
     f44:	83 b7       	in	r24, 0x33	; 51
     f46:	80 64       	ori	r24, 0x40	; 64
     f48:	83 bf       	out	0x33, r24	; 51
     f4a:	83 b7       	in	r24, 0x33	; 51
     f4c:	87 7f       	andi	r24, 0xF7	; 247
     f4e:	83 bf       	out	0x33, r24	; 51
     f50:	81 e0       	ldi	r24, 0x01	; 1
     f52:	0e 94 87 07 	call	0xf0e	; 0xf0e <TMR0_PWM_SelectCompareMatchOutput>
     f56:	41 e0       	ldi	r20, 0x01	; 1
     f58:	63 e0       	ldi	r22, 0x03	; 3
     f5a:	81 e0       	ldi	r24, 0x01	; 1
     f5c:	0e 94 7f 04 	call	0x8fe	; 0x8fe <DIO_void_SetPinDirection>
     f60:	84 e6       	ldi	r24, 0x64	; 100
     f62:	8c bf       	out	0x3c, r24	; 60
     f64:	82 e0       	ldi	r24, 0x02	; 2
     f66:	0e 94 3f 07 	call	0xe7e	; 0xe7e <TMR0_Select_Mode_Select_Prescaler>
     f6a:	08 95       	ret

00000f6c <TMR0_Enable_Interrupt>:
     f6c:	89 b7       	in	r24, 0x39	; 57
     f6e:	82 60       	ori	r24, 0x02	; 2
     f70:	89 bf       	out	0x39, r24	; 57
     f72:	08 95       	ret

00000f74 <__vector_11>:
void __vector_11(){
#if TIMER0_NORMAL_MODE==TIMER0_WORKING_MODE

     f74:	1f 92       	push	r1
     f76:	0f 92       	push	r0
     f78:	0f b6       	in	r0, 0x3f	; 63
     f7a:	0f 92       	push	r0
     f7c:	11 24       	eor	r1, r1
	}
	GIE_Enable();
#endif
}

void __vector_10() __attribute__((signal));
     f7e:	0f 90       	pop	r0
     f80:	0f be       	out	0x3f, r0	; 63
     f82:	0f 90       	pop	r0
     f84:	1f 90       	pop	r1
     f86:	18 95       	reti

00000f88 <__vector_10>:
void __vector_10(){
	GIE_Disable();
	#if TIMER0_CTC_MODE==TIMER0_WORKING_MODE
     f88:	1f 92       	push	r1
     f8a:	0f 92       	push	r0
     f8c:	0f b6       	in	r0, 0x3f	; 63
     f8e:	0f 92       	push	r0
     f90:	11 24       	eor	r1, r1
     f92:	2f 93       	push	r18
     f94:	3f 93       	push	r19
     f96:	4f 93       	push	r20
     f98:	5f 93       	push	r21
     f9a:	6f 93       	push	r22
     f9c:	7f 93       	push	r23
     f9e:	8f 93       	push	r24
     fa0:	9f 93       	push	r25
     fa2:	af 93       	push	r26
     fa4:	bf 93       	push	r27
     fa6:	ef 93       	push	r30
     fa8:	ff 93       	push	r31
		TMR0_OverFlowCounter++;
     faa:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
		}
	GIE_Enable();
	#endif	
}

void TMR0_Set_OCR0_Value(u8 value){
     fae:	ff 91       	pop	r31
     fb0:	ef 91       	pop	r30
     fb2:	bf 91       	pop	r27
     fb4:	af 91       	pop	r26
     fb6:	9f 91       	pop	r25
     fb8:	8f 91       	pop	r24
     fba:	7f 91       	pop	r23
     fbc:	6f 91       	pop	r22
     fbe:	5f 91       	pop	r21
     fc0:	4f 91       	pop	r20
     fc2:	3f 91       	pop	r19
     fc4:	2f 91       	pop	r18
     fc6:	0f 90       	pop	r0
     fc8:	0f be       	out	0x3f, r0	; 63
     fca:	0f 90       	pop	r0
     fcc:	1f 90       	pop	r1
     fce:	18 95       	reti

00000fd0 <TMR0_Set_OCR0_Value>:
	OCR0 = value;
}

     fd0:	8c bf       	out	0x3c, r24	; 60
     fd2:	08 95       	ret

00000fd4 <UART_UBBR_Equation>:
	/*clear flag*/
	SET_BIT(UCSRA,UDRE);
}

void UART_TX_Callback( void(*ptr)(void) ){
	TX_InterruptHandler = ptr;
     fd4:	8f 92       	push	r8
     fd6:	9f 92       	push	r9
     fd8:	af 92       	push	r10
     fda:	bf 92       	push	r11
     fdc:	cf 92       	push	r12
     fde:	df 92       	push	r13
     fe0:	ef 92       	push	r14
     fe2:	ff 92       	push	r15
     fe4:	0f 93       	push	r16
     fe6:	1f 93       	push	r17
     fe8:	cf 93       	push	r28
     fea:	df 93       	push	r29
     fec:	59 9b       	sbis	0x0b, 1	; 11
     fee:	03 c0       	rjmp	.+6      	; 0xff6 <UART_UBBR_Equation+0x22>
     ff0:	00 b4       	in	r0, 0x20	; 32
     ff2:	06 fc       	sbrc	r0, 6
     ff4:	25 c0       	rjmp	.+74     	; 0x1040 <UART_UBBR_Equation+0x6c>
     ff6:	eb 01       	movw	r28, r22
     ff8:	4c 01       	movw	r8, r24
     ffa:	28 2f       	mov	r18, r24
     ffc:	39 2d       	mov	r19, r9
     ffe:	40 e0       	ldi	r20, 0x00	; 0
    1000:	50 e0       	ldi	r21, 0x00	; 0
    1002:	60 e0       	ldi	r22, 0x00	; 0
    1004:	70 e0       	ldi	r23, 0x00	; 0
    1006:	80 e0       	ldi	r24, 0x00	; 0
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	04 e0       	ldi	r16, 0x04	; 4
    100c:	0e 94 ad 0a 	call	0x155a	; 0x155a <__ashldi3>
    1010:	a2 2e       	mov	r10, r18
    1012:	b3 2e       	mov	r11, r19
    1014:	c4 2e       	mov	r12, r20
    1016:	d5 2e       	mov	r13, r21
    1018:	e6 2e       	mov	r14, r22
    101a:	f7 2e       	mov	r15, r23
    101c:	08 2f       	mov	r16, r24
    101e:	19 2f       	mov	r17, r25
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	34 e2       	ldi	r19, 0x24	; 36
    1024:	44 ef       	ldi	r20, 0xF4	; 244
    1026:	50 e0       	ldi	r21, 0x00	; 0
    1028:	60 e0       	ldi	r22, 0x00	; 0
    102a:	70 e0       	ldi	r23, 0x00	; 0
    102c:	80 e0       	ldi	r24, 0x00	; 0
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <__udivdi3>
    1034:	02 2f       	mov	r16, r18
    1036:	13 2f       	mov	r17, r19
    1038:	01 50       	subi	r16, 0x01	; 1
    103a:	11 09       	sbc	r17, r1
    103c:	19 83       	std	Y+1, r17	; 0x01
    103e:	08 83       	st	Y, r16
    1040:	df 91       	pop	r29
    1042:	cf 91       	pop	r28
    1044:	1f 91       	pop	r17
    1046:	0f 91       	pop	r16
    1048:	ff 90       	pop	r15
    104a:	ef 90       	pop	r14
    104c:	df 90       	pop	r13
    104e:	cf 90       	pop	r12
    1050:	bf 90       	pop	r11
    1052:	af 90       	pop	r10
    1054:	9f 90       	pop	r9
    1056:	8f 90       	pop	r8
    1058:	08 95       	ret

0000105a <UART_Init>:
    105a:	cf 93       	push	r28
    105c:	df 93       	push	r29
    105e:	00 d0       	rcall	.+0      	; 0x1060 <UART_Init+0x6>
    1060:	cd b7       	in	r28, 0x3d	; 61
    1062:	de b7       	in	r29, 0x3e	; 62
    1064:	1a 82       	std	Y+2, r1	; 0x02
    1066:	19 82       	std	Y+1, r1	; 0x01
    1068:	be 01       	movw	r22, r28
    106a:	6f 5f       	subi	r22, 0xFF	; 255
    106c:	7f 4f       	sbci	r23, 0xFF	; 255
    106e:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <UART_UBBR_Equation>
    1072:	89 81       	ldd	r24, Y+1	; 0x01
    1074:	89 b9       	out	0x09, r24	; 9
    1076:	8a 81       	ldd	r24, Y+2	; 0x02
    1078:	80 bd       	out	0x20, r24	; 32
    107a:	8a b1       	in	r24, 0x0a	; 10
    107c:	88 61       	ori	r24, 0x18	; 24
    107e:	8a b9       	out	0x0a, r24	; 10
    1080:	8a b1       	in	r24, 0x0a	; 10
    1082:	80 6c       	ori	r24, 0xC0	; 192
    1084:	8a b9       	out	0x0a, r24	; 10
    1086:	86 e8       	ldi	r24, 0x86	; 134
    1088:	80 bd       	out	0x20, r24	; 32
    108a:	0f 90       	pop	r0
    108c:	0f 90       	pop	r0
    108e:	df 91       	pop	r29
    1090:	cf 91       	pop	r28
    1092:	08 95       	ret

00001094 <UART_Recieve>:
    1094:	5f 9b       	sbis	0x0b, 7	; 11
    1096:	fe cf       	rjmp	.-4      	; 0x1094 <UART_Recieve>
    1098:	2c b1       	in	r18, 0x0c	; 12
    109a:	fc 01       	movw	r30, r24
    109c:	20 83       	st	Z, r18
    109e:	8b b1       	in	r24, 0x0b	; 11
    10a0:	80 68       	ori	r24, 0x80	; 128
    10a2:	8b b9       	out	0x0b, r24	; 11
    10a4:	08 95       	ret

000010a6 <UART_RX_Callback>:
}
void UART_RX_Callback( void(*ptr)(void) ){
	RX_InterruptHandler = ptr;
    10a6:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <RX_InterruptHandler+0x1>
    10aa:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <RX_InterruptHandler>
    10ae:	08 95       	ret

000010b0 <__vector_13>:
	/******configure rest of equations*****************************/
}

/*	RX COMPLETE INTERRUPT VECTOR	*/
void __vector_13() __attribute__((signal));
void __vector_13(){
    10b0:	1f 92       	push	r1
    10b2:	0f 92       	push	r0
    10b4:	0f b6       	in	r0, 0x3f	; 63
    10b6:	0f 92       	push	r0
    10b8:	11 24       	eor	r1, r1
    10ba:	2f 93       	push	r18
    10bc:	3f 93       	push	r19
    10be:	4f 93       	push	r20
    10c0:	5f 93       	push	r21
    10c2:	6f 93       	push	r22
    10c4:	7f 93       	push	r23
    10c6:	8f 93       	push	r24
    10c8:	9f 93       	push	r25
    10ca:	af 93       	push	r26
    10cc:	bf 93       	push	r27
    10ce:	ef 93       	push	r30
    10d0:	ff 93       	push	r31
	GIE_Disable();
    10d2:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
	if(RX_InterruptHandler)
    10d6:	e0 91 07 01 	lds	r30, 0x0107	; 0x800107 <RX_InterruptHandler>
    10da:	f0 91 08 01 	lds	r31, 0x0108	; 0x800108 <RX_InterruptHandler+0x1>
    10de:	30 97       	sbiw	r30, 0x00	; 0
    10e0:	09 f0       	breq	.+2      	; 0x10e4 <__vector_13+0x34>
	{
		RX_InterruptHandler();
    10e2:	09 95       	icall
	}
	GIE_Enable();
    10e4:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
}
    10e8:	ff 91       	pop	r31
    10ea:	ef 91       	pop	r30
    10ec:	bf 91       	pop	r27
    10ee:	af 91       	pop	r26
    10f0:	9f 91       	pop	r25
    10f2:	8f 91       	pop	r24
    10f4:	7f 91       	pop	r23
    10f6:	6f 91       	pop	r22
    10f8:	5f 91       	pop	r21
    10fa:	4f 91       	pop	r20
    10fc:	3f 91       	pop	r19
    10fe:	2f 91       	pop	r18
    1100:	0f 90       	pop	r0
    1102:	0f be       	out	0x3f, r0	; 63
    1104:	0f 90       	pop	r0
    1106:	1f 90       	pop	r1
    1108:	18 95       	reti

0000110a <__vector_15>:

/*	TX COMPLETE INTERRUPT VECTOR	*/
void __vector_15() __attribute__((signal));
void __vector_15(){
    110a:	1f 92       	push	r1
    110c:	0f 92       	push	r0
    110e:	0f b6       	in	r0, 0x3f	; 63
    1110:	0f 92       	push	r0
    1112:	11 24       	eor	r1, r1
    1114:	2f 93       	push	r18
    1116:	3f 93       	push	r19
    1118:	4f 93       	push	r20
    111a:	5f 93       	push	r21
    111c:	6f 93       	push	r22
    111e:	7f 93       	push	r23
    1120:	8f 93       	push	r24
    1122:	9f 93       	push	r25
    1124:	af 93       	push	r26
    1126:	bf 93       	push	r27
    1128:	ef 93       	push	r30
    112a:	ff 93       	push	r31
	GIE_Disable();
    112c:	0e 94 c4 06 	call	0xd88	; 0xd88 <GIE_Disable>
	if(TX_InterruptHandler)
    1130:	e0 91 05 01 	lds	r30, 0x0105	; 0x800105 <TX_InterruptHandler>
    1134:	f0 91 06 01 	lds	r31, 0x0106	; 0x800106 <TX_InterruptHandler+0x1>
    1138:	30 97       	sbiw	r30, 0x00	; 0
    113a:	09 f0       	breq	.+2      	; 0x113e <__vector_15+0x34>
	{
		TX_InterruptHandler();
    113c:	09 95       	icall
	}
	GIE_Enable();
    113e:	0e 94 c0 06 	call	0xd80	; 0xd80 <GIE_Enable>
    1142:	ff 91       	pop	r31
    1144:	ef 91       	pop	r30
    1146:	bf 91       	pop	r27
    1148:	af 91       	pop	r26
    114a:	9f 91       	pop	r25
    114c:	8f 91       	pop	r24
    114e:	7f 91       	pop	r23
    1150:	6f 91       	pop	r22
    1152:	5f 91       	pop	r21
    1154:	4f 91       	pop	r20
    1156:	3f 91       	pop	r19
    1158:	2f 91       	pop	r18
    115a:	0f 90       	pop	r0
    115c:	0f be       	out	0x3f, r0	; 63
    115e:	0f 90       	pop	r0
    1160:	1f 90       	pop	r1
    1162:	18 95       	reti

00001164 <__divsf3>:
    1164:	0e 94 c6 08 	call	0x118c	; 0x118c <__divsf3x>
    1168:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__fp_round>
    116c:	0e 94 a0 09 	call	0x1340	; 0x1340 <__fp_pscB>
    1170:	58 f0       	brcs	.+22     	; 0x1188 <__divsf3+0x24>
    1172:	0e 94 99 09 	call	0x1332	; 0x1332 <__fp_pscA>
    1176:	40 f0       	brcs	.+16     	; 0x1188 <__divsf3+0x24>
    1178:	29 f4       	brne	.+10     	; 0x1184 <__divsf3+0x20>
    117a:	5f 3f       	cpi	r21, 0xFF	; 255
    117c:	29 f0       	breq	.+10     	; 0x1188 <__divsf3+0x24>
    117e:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__fp_inf>
    1182:	51 11       	cpse	r21, r1
    1184:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_szero>
    1188:	0c 94 96 09 	jmp	0x132c	; 0x132c <__fp_nan>

0000118c <__divsf3x>:
    118c:	0e 94 b8 09 	call	0x1370	; 0x1370 <__fp_split3>
    1190:	68 f3       	brcs	.-38     	; 0x116c <__divsf3+0x8>

00001192 <__divsf3_pse>:
    1192:	99 23       	and	r25, r25
    1194:	b1 f3       	breq	.-20     	; 0x1182 <__divsf3+0x1e>
    1196:	55 23       	and	r21, r21
    1198:	91 f3       	breq	.-28     	; 0x117e <__divsf3+0x1a>
    119a:	95 1b       	sub	r25, r21
    119c:	55 0b       	sbc	r21, r21
    119e:	bb 27       	eor	r27, r27
    11a0:	aa 27       	eor	r26, r26
    11a2:	62 17       	cp	r22, r18
    11a4:	73 07       	cpc	r23, r19
    11a6:	84 07       	cpc	r24, r20
    11a8:	38 f0       	brcs	.+14     	; 0x11b8 <__divsf3_pse+0x26>
    11aa:	9f 5f       	subi	r25, 0xFF	; 255
    11ac:	5f 4f       	sbci	r21, 0xFF	; 255
    11ae:	22 0f       	add	r18, r18
    11b0:	33 1f       	adc	r19, r19
    11b2:	44 1f       	adc	r20, r20
    11b4:	aa 1f       	adc	r26, r26
    11b6:	a9 f3       	breq	.-22     	; 0x11a2 <__divsf3_pse+0x10>
    11b8:	35 d0       	rcall	.+106    	; 0x1224 <__divsf3_pse+0x92>
    11ba:	0e 2e       	mov	r0, r30
    11bc:	3a f0       	brmi	.+14     	; 0x11cc <__divsf3_pse+0x3a>
    11be:	e0 e8       	ldi	r30, 0x80	; 128
    11c0:	32 d0       	rcall	.+100    	; 0x1226 <__divsf3_pse+0x94>
    11c2:	91 50       	subi	r25, 0x01	; 1
    11c4:	50 40       	sbci	r21, 0x00	; 0
    11c6:	e6 95       	lsr	r30
    11c8:	00 1c       	adc	r0, r0
    11ca:	ca f7       	brpl	.-14     	; 0x11be <__divsf3_pse+0x2c>
    11cc:	2b d0       	rcall	.+86     	; 0x1224 <__divsf3_pse+0x92>
    11ce:	fe 2f       	mov	r31, r30
    11d0:	29 d0       	rcall	.+82     	; 0x1224 <__divsf3_pse+0x92>
    11d2:	66 0f       	add	r22, r22
    11d4:	77 1f       	adc	r23, r23
    11d6:	88 1f       	adc	r24, r24
    11d8:	bb 1f       	adc	r27, r27
    11da:	26 17       	cp	r18, r22
    11dc:	37 07       	cpc	r19, r23
    11de:	48 07       	cpc	r20, r24
    11e0:	ab 07       	cpc	r26, r27
    11e2:	b0 e8       	ldi	r27, 0x80	; 128
    11e4:	09 f0       	breq	.+2      	; 0x11e8 <__divsf3_pse+0x56>
    11e6:	bb 0b       	sbc	r27, r27
    11e8:	80 2d       	mov	r24, r0
    11ea:	bf 01       	movw	r22, r30
    11ec:	ff 27       	eor	r31, r31
    11ee:	93 58       	subi	r25, 0x83	; 131
    11f0:	5f 4f       	sbci	r21, 0xFF	; 255
    11f2:	3a f0       	brmi	.+14     	; 0x1202 <__divsf3_pse+0x70>
    11f4:	9e 3f       	cpi	r25, 0xFE	; 254
    11f6:	51 05       	cpc	r21, r1
    11f8:	78 f0       	brcs	.+30     	; 0x1218 <__divsf3_pse+0x86>
    11fa:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__fp_inf>
    11fe:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_szero>
    1202:	5f 3f       	cpi	r21, 0xFF	; 255
    1204:	e4 f3       	brlt	.-8      	; 0x11fe <__divsf3_pse+0x6c>
    1206:	98 3e       	cpi	r25, 0xE8	; 232
    1208:	d4 f3       	brlt	.-12     	; 0x11fe <__divsf3_pse+0x6c>
    120a:	86 95       	lsr	r24
    120c:	77 95       	ror	r23
    120e:	67 95       	ror	r22
    1210:	b7 95       	ror	r27
    1212:	f7 95       	ror	r31
    1214:	9f 5f       	subi	r25, 0xFF	; 255
    1216:	c9 f7       	brne	.-14     	; 0x120a <__divsf3_pse+0x78>
    1218:	88 0f       	add	r24, r24
    121a:	91 1d       	adc	r25, r1
    121c:	96 95       	lsr	r25
    121e:	87 95       	ror	r24
    1220:	97 f9       	bld	r25, 7
    1222:	08 95       	ret
    1224:	e1 e0       	ldi	r30, 0x01	; 1
    1226:	66 0f       	add	r22, r22
    1228:	77 1f       	adc	r23, r23
    122a:	88 1f       	adc	r24, r24
    122c:	bb 1f       	adc	r27, r27
    122e:	62 17       	cp	r22, r18
    1230:	73 07       	cpc	r23, r19
    1232:	84 07       	cpc	r24, r20
    1234:	ba 07       	cpc	r27, r26
    1236:	20 f0       	brcs	.+8      	; 0x1240 <__divsf3_pse+0xae>
    1238:	62 1b       	sub	r22, r18
    123a:	73 0b       	sbc	r23, r19
    123c:	84 0b       	sbc	r24, r20
    123e:	ba 0b       	sbc	r27, r26
    1240:	ee 1f       	adc	r30, r30
    1242:	88 f7       	brcc	.-30     	; 0x1226 <__divsf3_pse+0x94>
    1244:	e0 95       	com	r30
    1246:	08 95       	ret

00001248 <__fixunssfsi>:
    1248:	0e 94 c0 09 	call	0x1380	; 0x1380 <__fp_splitA>
    124c:	88 f0       	brcs	.+34     	; 0x1270 <__fixunssfsi+0x28>
    124e:	9f 57       	subi	r25, 0x7F	; 127
    1250:	98 f0       	brcs	.+38     	; 0x1278 <__fixunssfsi+0x30>
    1252:	b9 2f       	mov	r27, r25
    1254:	99 27       	eor	r25, r25
    1256:	b7 51       	subi	r27, 0x17	; 23
    1258:	b0 f0       	brcs	.+44     	; 0x1286 <__fixunssfsi+0x3e>
    125a:	e1 f0       	breq	.+56     	; 0x1294 <__fixunssfsi+0x4c>
    125c:	66 0f       	add	r22, r22
    125e:	77 1f       	adc	r23, r23
    1260:	88 1f       	adc	r24, r24
    1262:	99 1f       	adc	r25, r25
    1264:	1a f0       	brmi	.+6      	; 0x126c <__fixunssfsi+0x24>
    1266:	ba 95       	dec	r27
    1268:	c9 f7       	brne	.-14     	; 0x125c <__fixunssfsi+0x14>
    126a:	14 c0       	rjmp	.+40     	; 0x1294 <__fixunssfsi+0x4c>
    126c:	b1 30       	cpi	r27, 0x01	; 1
    126e:	91 f0       	breq	.+36     	; 0x1294 <__fixunssfsi+0x4c>
    1270:	0e 94 da 09 	call	0x13b4	; 0x13b4 <__fp_zero>
    1274:	b1 e0       	ldi	r27, 0x01	; 1
    1276:	08 95       	ret
    1278:	0c 94 da 09 	jmp	0x13b4	; 0x13b4 <__fp_zero>
    127c:	67 2f       	mov	r22, r23
    127e:	78 2f       	mov	r23, r24
    1280:	88 27       	eor	r24, r24
    1282:	b8 5f       	subi	r27, 0xF8	; 248
    1284:	39 f0       	breq	.+14     	; 0x1294 <__fixunssfsi+0x4c>
    1286:	b9 3f       	cpi	r27, 0xF9	; 249
    1288:	cc f3       	brlt	.-14     	; 0x127c <__fixunssfsi+0x34>
    128a:	86 95       	lsr	r24
    128c:	77 95       	ror	r23
    128e:	67 95       	ror	r22
    1290:	b3 95       	inc	r27
    1292:	d9 f7       	brne	.-10     	; 0x128a <__fixunssfsi+0x42>
    1294:	3e f4       	brtc	.+14     	; 0x12a4 <__fixunssfsi+0x5c>
    1296:	90 95       	com	r25
    1298:	80 95       	com	r24
    129a:	70 95       	com	r23
    129c:	61 95       	neg	r22
    129e:	7f 4f       	sbci	r23, 0xFF	; 255
    12a0:	8f 4f       	sbci	r24, 0xFF	; 255
    12a2:	9f 4f       	sbci	r25, 0xFF	; 255
    12a4:	08 95       	ret

000012a6 <__floatunsisf>:
    12a6:	e8 94       	clt
    12a8:	09 c0       	rjmp	.+18     	; 0x12bc <__floatsisf+0x12>

000012aa <__floatsisf>:
    12aa:	97 fb       	bst	r25, 7
    12ac:	3e f4       	brtc	.+14     	; 0x12bc <__floatsisf+0x12>
    12ae:	90 95       	com	r25
    12b0:	80 95       	com	r24
    12b2:	70 95       	com	r23
    12b4:	61 95       	neg	r22
    12b6:	7f 4f       	sbci	r23, 0xFF	; 255
    12b8:	8f 4f       	sbci	r24, 0xFF	; 255
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	99 23       	and	r25, r25
    12be:	a9 f0       	breq	.+42     	; 0x12ea <__floatsisf+0x40>
    12c0:	f9 2f       	mov	r31, r25
    12c2:	96 e9       	ldi	r25, 0x96	; 150
    12c4:	bb 27       	eor	r27, r27
    12c6:	93 95       	inc	r25
    12c8:	f6 95       	lsr	r31
    12ca:	87 95       	ror	r24
    12cc:	77 95       	ror	r23
    12ce:	67 95       	ror	r22
    12d0:	b7 95       	ror	r27
    12d2:	f1 11       	cpse	r31, r1
    12d4:	f8 cf       	rjmp	.-16     	; 0x12c6 <__floatsisf+0x1c>
    12d6:	fa f4       	brpl	.+62     	; 0x1316 <__floatsisf+0x6c>
    12d8:	bb 0f       	add	r27, r27
    12da:	11 f4       	brne	.+4      	; 0x12e0 <__floatsisf+0x36>
    12dc:	60 ff       	sbrs	r22, 0
    12de:	1b c0       	rjmp	.+54     	; 0x1316 <__floatsisf+0x6c>
    12e0:	6f 5f       	subi	r22, 0xFF	; 255
    12e2:	7f 4f       	sbci	r23, 0xFF	; 255
    12e4:	8f 4f       	sbci	r24, 0xFF	; 255
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	16 c0       	rjmp	.+44     	; 0x1316 <__floatsisf+0x6c>
    12ea:	88 23       	and	r24, r24
    12ec:	11 f0       	breq	.+4      	; 0x12f2 <__floatsisf+0x48>
    12ee:	96 e9       	ldi	r25, 0x96	; 150
    12f0:	11 c0       	rjmp	.+34     	; 0x1314 <__floatsisf+0x6a>
    12f2:	77 23       	and	r23, r23
    12f4:	21 f0       	breq	.+8      	; 0x12fe <__floatsisf+0x54>
    12f6:	9e e8       	ldi	r25, 0x8E	; 142
    12f8:	87 2f       	mov	r24, r23
    12fa:	76 2f       	mov	r23, r22
    12fc:	05 c0       	rjmp	.+10     	; 0x1308 <__floatsisf+0x5e>
    12fe:	66 23       	and	r22, r22
    1300:	71 f0       	breq	.+28     	; 0x131e <__floatsisf+0x74>
    1302:	96 e8       	ldi	r25, 0x86	; 134
    1304:	86 2f       	mov	r24, r22
    1306:	70 e0       	ldi	r23, 0x00	; 0
    1308:	60 e0       	ldi	r22, 0x00	; 0
    130a:	2a f0       	brmi	.+10     	; 0x1316 <__floatsisf+0x6c>
    130c:	9a 95       	dec	r25
    130e:	66 0f       	add	r22, r22
    1310:	77 1f       	adc	r23, r23
    1312:	88 1f       	adc	r24, r24
    1314:	da f7       	brpl	.-10     	; 0x130c <__floatsisf+0x62>
    1316:	88 0f       	add	r24, r24
    1318:	96 95       	lsr	r25
    131a:	87 95       	ror	r24
    131c:	97 f9       	bld	r25, 7
    131e:	08 95       	ret

00001320 <__fp_inf>:
    1320:	97 f9       	bld	r25, 7
    1322:	9f 67       	ori	r25, 0x7F	; 127
    1324:	80 e8       	ldi	r24, 0x80	; 128
    1326:	70 e0       	ldi	r23, 0x00	; 0
    1328:	60 e0       	ldi	r22, 0x00	; 0
    132a:	08 95       	ret

0000132c <__fp_nan>:
    132c:	9f ef       	ldi	r25, 0xFF	; 255
    132e:	80 ec       	ldi	r24, 0xC0	; 192
    1330:	08 95       	ret

00001332 <__fp_pscA>:
    1332:	00 24       	eor	r0, r0
    1334:	0a 94       	dec	r0
    1336:	16 16       	cp	r1, r22
    1338:	17 06       	cpc	r1, r23
    133a:	18 06       	cpc	r1, r24
    133c:	09 06       	cpc	r0, r25
    133e:	08 95       	ret

00001340 <__fp_pscB>:
    1340:	00 24       	eor	r0, r0
    1342:	0a 94       	dec	r0
    1344:	12 16       	cp	r1, r18
    1346:	13 06       	cpc	r1, r19
    1348:	14 06       	cpc	r1, r20
    134a:	05 06       	cpc	r0, r21
    134c:	08 95       	ret

0000134e <__fp_round>:
    134e:	09 2e       	mov	r0, r25
    1350:	03 94       	inc	r0
    1352:	00 0c       	add	r0, r0
    1354:	11 f4       	brne	.+4      	; 0x135a <__fp_round+0xc>
    1356:	88 23       	and	r24, r24
    1358:	52 f0       	brmi	.+20     	; 0x136e <__fp_round+0x20>
    135a:	bb 0f       	add	r27, r27
    135c:	40 f4       	brcc	.+16     	; 0x136e <__fp_round+0x20>
    135e:	bf 2b       	or	r27, r31
    1360:	11 f4       	brne	.+4      	; 0x1366 <__fp_round+0x18>
    1362:	60 ff       	sbrs	r22, 0
    1364:	04 c0       	rjmp	.+8      	; 0x136e <__fp_round+0x20>
    1366:	6f 5f       	subi	r22, 0xFF	; 255
    1368:	7f 4f       	sbci	r23, 0xFF	; 255
    136a:	8f 4f       	sbci	r24, 0xFF	; 255
    136c:	9f 4f       	sbci	r25, 0xFF	; 255
    136e:	08 95       	ret

00001370 <__fp_split3>:
    1370:	57 fd       	sbrc	r21, 7
    1372:	90 58       	subi	r25, 0x80	; 128
    1374:	44 0f       	add	r20, r20
    1376:	55 1f       	adc	r21, r21
    1378:	59 f0       	breq	.+22     	; 0x1390 <__fp_splitA+0x10>
    137a:	5f 3f       	cpi	r21, 0xFF	; 255
    137c:	71 f0       	breq	.+28     	; 0x139a <__fp_splitA+0x1a>
    137e:	47 95       	ror	r20

00001380 <__fp_splitA>:
    1380:	88 0f       	add	r24, r24
    1382:	97 fb       	bst	r25, 7
    1384:	99 1f       	adc	r25, r25
    1386:	61 f0       	breq	.+24     	; 0x13a0 <__fp_splitA+0x20>
    1388:	9f 3f       	cpi	r25, 0xFF	; 255
    138a:	79 f0       	breq	.+30     	; 0x13aa <__fp_splitA+0x2a>
    138c:	87 95       	ror	r24
    138e:	08 95       	ret
    1390:	12 16       	cp	r1, r18
    1392:	13 06       	cpc	r1, r19
    1394:	14 06       	cpc	r1, r20
    1396:	55 1f       	adc	r21, r21
    1398:	f2 cf       	rjmp	.-28     	; 0x137e <__fp_split3+0xe>
    139a:	46 95       	lsr	r20
    139c:	f1 df       	rcall	.-30     	; 0x1380 <__fp_splitA>
    139e:	08 c0       	rjmp	.+16     	; 0x13b0 <__fp_splitA+0x30>
    13a0:	16 16       	cp	r1, r22
    13a2:	17 06       	cpc	r1, r23
    13a4:	18 06       	cpc	r1, r24
    13a6:	99 1f       	adc	r25, r25
    13a8:	f1 cf       	rjmp	.-30     	; 0x138c <__fp_splitA+0xc>
    13aa:	86 95       	lsr	r24
    13ac:	71 05       	cpc	r23, r1
    13ae:	61 05       	cpc	r22, r1
    13b0:	08 94       	sec
    13b2:	08 95       	ret

000013b4 <__fp_zero>:
    13b4:	e8 94       	clt

000013b6 <__fp_szero>:
    13b6:	bb 27       	eor	r27, r27
    13b8:	66 27       	eor	r22, r22
    13ba:	77 27       	eor	r23, r23
    13bc:	cb 01       	movw	r24, r22
    13be:	97 f9       	bld	r25, 7
    13c0:	08 95       	ret

000013c2 <__mulsf3>:
    13c2:	0e 94 f4 09 	call	0x13e8	; 0x13e8 <__mulsf3x>
    13c6:	0c 94 a7 09 	jmp	0x134e	; 0x134e <__fp_round>
    13ca:	0e 94 99 09 	call	0x1332	; 0x1332 <__fp_pscA>
    13ce:	38 f0       	brcs	.+14     	; 0x13de <__mulsf3+0x1c>
    13d0:	0e 94 a0 09 	call	0x1340	; 0x1340 <__fp_pscB>
    13d4:	20 f0       	brcs	.+8      	; 0x13de <__mulsf3+0x1c>
    13d6:	95 23       	and	r25, r21
    13d8:	11 f0       	breq	.+4      	; 0x13de <__mulsf3+0x1c>
    13da:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__fp_inf>
    13de:	0c 94 96 09 	jmp	0x132c	; 0x132c <__fp_nan>
    13e2:	11 24       	eor	r1, r1
    13e4:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_szero>

000013e8 <__mulsf3x>:
    13e8:	0e 94 b8 09 	call	0x1370	; 0x1370 <__fp_split3>
    13ec:	70 f3       	brcs	.-36     	; 0x13ca <__mulsf3+0x8>

000013ee <__mulsf3_pse>:
    13ee:	95 9f       	mul	r25, r21
    13f0:	c1 f3       	breq	.-16     	; 0x13e2 <__mulsf3+0x20>
    13f2:	95 0f       	add	r25, r21
    13f4:	50 e0       	ldi	r21, 0x00	; 0
    13f6:	55 1f       	adc	r21, r21
    13f8:	62 9f       	mul	r22, r18
    13fa:	f0 01       	movw	r30, r0
    13fc:	72 9f       	mul	r23, r18
    13fe:	bb 27       	eor	r27, r27
    1400:	f0 0d       	add	r31, r0
    1402:	b1 1d       	adc	r27, r1
    1404:	63 9f       	mul	r22, r19
    1406:	aa 27       	eor	r26, r26
    1408:	f0 0d       	add	r31, r0
    140a:	b1 1d       	adc	r27, r1
    140c:	aa 1f       	adc	r26, r26
    140e:	64 9f       	mul	r22, r20
    1410:	66 27       	eor	r22, r22
    1412:	b0 0d       	add	r27, r0
    1414:	a1 1d       	adc	r26, r1
    1416:	66 1f       	adc	r22, r22
    1418:	82 9f       	mul	r24, r18
    141a:	22 27       	eor	r18, r18
    141c:	b0 0d       	add	r27, r0
    141e:	a1 1d       	adc	r26, r1
    1420:	62 1f       	adc	r22, r18
    1422:	73 9f       	mul	r23, r19
    1424:	b0 0d       	add	r27, r0
    1426:	a1 1d       	adc	r26, r1
    1428:	62 1f       	adc	r22, r18
    142a:	83 9f       	mul	r24, r19
    142c:	a0 0d       	add	r26, r0
    142e:	61 1d       	adc	r22, r1
    1430:	22 1f       	adc	r18, r18
    1432:	74 9f       	mul	r23, r20
    1434:	33 27       	eor	r19, r19
    1436:	a0 0d       	add	r26, r0
    1438:	61 1d       	adc	r22, r1
    143a:	23 1f       	adc	r18, r19
    143c:	84 9f       	mul	r24, r20
    143e:	60 0d       	add	r22, r0
    1440:	21 1d       	adc	r18, r1
    1442:	82 2f       	mov	r24, r18
    1444:	76 2f       	mov	r23, r22
    1446:	6a 2f       	mov	r22, r26
    1448:	11 24       	eor	r1, r1
    144a:	9f 57       	subi	r25, 0x7F	; 127
    144c:	50 40       	sbci	r21, 0x00	; 0
    144e:	9a f0       	brmi	.+38     	; 0x1476 <__mulsf3_pse+0x88>
    1450:	f1 f0       	breq	.+60     	; 0x148e <__mulsf3_pse+0xa0>
    1452:	88 23       	and	r24, r24
    1454:	4a f0       	brmi	.+18     	; 0x1468 <__mulsf3_pse+0x7a>
    1456:	ee 0f       	add	r30, r30
    1458:	ff 1f       	adc	r31, r31
    145a:	bb 1f       	adc	r27, r27
    145c:	66 1f       	adc	r22, r22
    145e:	77 1f       	adc	r23, r23
    1460:	88 1f       	adc	r24, r24
    1462:	91 50       	subi	r25, 0x01	; 1
    1464:	50 40       	sbci	r21, 0x00	; 0
    1466:	a9 f7       	brne	.-22     	; 0x1452 <__mulsf3_pse+0x64>
    1468:	9e 3f       	cpi	r25, 0xFE	; 254
    146a:	51 05       	cpc	r21, r1
    146c:	80 f0       	brcs	.+32     	; 0x148e <__mulsf3_pse+0xa0>
    146e:	0c 94 90 09 	jmp	0x1320	; 0x1320 <__fp_inf>
    1472:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_szero>
    1476:	5f 3f       	cpi	r21, 0xFF	; 255
    1478:	e4 f3       	brlt	.-8      	; 0x1472 <__mulsf3_pse+0x84>
    147a:	98 3e       	cpi	r25, 0xE8	; 232
    147c:	d4 f3       	brlt	.-12     	; 0x1472 <__mulsf3_pse+0x84>
    147e:	86 95       	lsr	r24
    1480:	77 95       	ror	r23
    1482:	67 95       	ror	r22
    1484:	b7 95       	ror	r27
    1486:	f7 95       	ror	r31
    1488:	e7 95       	ror	r30
    148a:	9f 5f       	subi	r25, 0xFF	; 255
    148c:	c1 f7       	brne	.-16     	; 0x147e <__mulsf3_pse+0x90>
    148e:	fe 2b       	or	r31, r30
    1490:	88 0f       	add	r24, r24
    1492:	91 1d       	adc	r25, r1
    1494:	96 95       	lsr	r25
    1496:	87 95       	ror	r24
    1498:	97 f9       	bld	r25, 7
    149a:	08 95       	ret

0000149c <__umoddi3>:
    149c:	68 94       	set
    149e:	01 c0       	rjmp	.+2      	; 0x14a2 <__udivdi3_umoddi3>

000014a0 <__udivdi3>:
    14a0:	e8 94       	clt

000014a2 <__udivdi3_umoddi3>:
    14a2:	8f 92       	push	r8
    14a4:	9f 92       	push	r9
    14a6:	cf 93       	push	r28
    14a8:	df 93       	push	r29
    14aa:	0e 94 5c 0a 	call	0x14b8	; 0x14b8 <__udivmod64>
    14ae:	df 91       	pop	r29
    14b0:	cf 91       	pop	r28
    14b2:	9f 90       	pop	r9
    14b4:	8f 90       	pop	r8
    14b6:	08 95       	ret

000014b8 <__udivmod64>:
    14b8:	88 24       	eor	r8, r8
    14ba:	99 24       	eor	r9, r9
    14bc:	f4 01       	movw	r30, r8
    14be:	e4 01       	movw	r28, r8
    14c0:	b0 e4       	ldi	r27, 0x40	; 64
    14c2:	9f 93       	push	r25
    14c4:	aa 27       	eor	r26, r26
    14c6:	9a 15       	cp	r25, r10
    14c8:	8b 04       	cpc	r8, r11
    14ca:	9c 04       	cpc	r9, r12
    14cc:	ed 05       	cpc	r30, r13
    14ce:	fe 05       	cpc	r31, r14
    14d0:	cf 05       	cpc	r28, r15
    14d2:	d0 07       	cpc	r29, r16
    14d4:	a1 07       	cpc	r26, r17
    14d6:	98 f4       	brcc	.+38     	; 0x14fe <__udivmod64+0x46>
    14d8:	ad 2f       	mov	r26, r29
    14da:	dc 2f       	mov	r29, r28
    14dc:	cf 2f       	mov	r28, r31
    14de:	fe 2f       	mov	r31, r30
    14e0:	e9 2d       	mov	r30, r9
    14e2:	98 2c       	mov	r9, r8
    14e4:	89 2e       	mov	r8, r25
    14e6:	98 2f       	mov	r25, r24
    14e8:	87 2f       	mov	r24, r23
    14ea:	76 2f       	mov	r23, r22
    14ec:	65 2f       	mov	r22, r21
    14ee:	54 2f       	mov	r21, r20
    14f0:	43 2f       	mov	r20, r19
    14f2:	32 2f       	mov	r19, r18
    14f4:	22 27       	eor	r18, r18
    14f6:	b8 50       	subi	r27, 0x08	; 8
    14f8:	31 f7       	brne	.-52     	; 0x14c6 <__udivmod64+0xe>
    14fa:	bf 91       	pop	r27
    14fc:	27 c0       	rjmp	.+78     	; 0x154c <__udivmod64+0x94>
    14fe:	1b 2e       	mov	r1, r27
    1500:	bf 91       	pop	r27
    1502:	bb 27       	eor	r27, r27
    1504:	22 0f       	add	r18, r18
    1506:	33 1f       	adc	r19, r19
    1508:	44 1f       	adc	r20, r20
    150a:	55 1f       	adc	r21, r21
    150c:	66 1f       	adc	r22, r22
    150e:	77 1f       	adc	r23, r23
    1510:	88 1f       	adc	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	88 1c       	adc	r8, r8
    1516:	99 1c       	adc	r9, r9
    1518:	ee 1f       	adc	r30, r30
    151a:	ff 1f       	adc	r31, r31
    151c:	cc 1f       	adc	r28, r28
    151e:	dd 1f       	adc	r29, r29
    1520:	aa 1f       	adc	r26, r26
    1522:	bb 1f       	adc	r27, r27
    1524:	8a 14       	cp	r8, r10
    1526:	9b 04       	cpc	r9, r11
    1528:	ec 05       	cpc	r30, r12
    152a:	fd 05       	cpc	r31, r13
    152c:	ce 05       	cpc	r28, r14
    152e:	df 05       	cpc	r29, r15
    1530:	a0 07       	cpc	r26, r16
    1532:	b1 07       	cpc	r27, r17
    1534:	48 f0       	brcs	.+18     	; 0x1548 <__udivmod64+0x90>
    1536:	8a 18       	sub	r8, r10
    1538:	9b 08       	sbc	r9, r11
    153a:	ec 09       	sbc	r30, r12
    153c:	fd 09       	sbc	r31, r13
    153e:	ce 09       	sbc	r28, r14
    1540:	df 09       	sbc	r29, r15
    1542:	a0 0b       	sbc	r26, r16
    1544:	b1 0b       	sbc	r27, r17
    1546:	21 60       	ori	r18, 0x01	; 1
    1548:	1a 94       	dec	r1
    154a:	e1 f6       	brne	.-72     	; 0x1504 <__udivmod64+0x4c>
    154c:	2e f4       	brtc	.+10     	; 0x1558 <__udivmod64+0xa0>
    154e:	94 01       	movw	r18, r8
    1550:	af 01       	movw	r20, r30
    1552:	be 01       	movw	r22, r28
    1554:	cd 01       	movw	r24, r26
    1556:	00 0c       	add	r0, r0
    1558:	08 95       	ret

0000155a <__ashldi3>:
    155a:	0f 93       	push	r16
    155c:	08 30       	cpi	r16, 0x08	; 8
    155e:	90 f0       	brcs	.+36     	; 0x1584 <__ashldi3+0x2a>
    1560:	98 2f       	mov	r25, r24
    1562:	87 2f       	mov	r24, r23
    1564:	76 2f       	mov	r23, r22
    1566:	65 2f       	mov	r22, r21
    1568:	54 2f       	mov	r21, r20
    156a:	43 2f       	mov	r20, r19
    156c:	32 2f       	mov	r19, r18
    156e:	22 27       	eor	r18, r18
    1570:	08 50       	subi	r16, 0x08	; 8
    1572:	f4 cf       	rjmp	.-24     	; 0x155c <__ashldi3+0x2>
    1574:	22 0f       	add	r18, r18
    1576:	33 1f       	adc	r19, r19
    1578:	44 1f       	adc	r20, r20
    157a:	55 1f       	adc	r21, r21
    157c:	66 1f       	adc	r22, r22
    157e:	77 1f       	adc	r23, r23
    1580:	88 1f       	adc	r24, r24
    1582:	99 1f       	adc	r25, r25
    1584:	0a 95       	dec	r16
    1586:	b2 f7       	brpl	.-20     	; 0x1574 <__ashldi3+0x1a>
    1588:	0f 91       	pop	r16
    158a:	08 95       	ret

0000158c <__adddi3_s8>:
    158c:	00 24       	eor	r0, r0
    158e:	a7 fd       	sbrc	r26, 7
    1590:	00 94       	com	r0
    1592:	2a 0f       	add	r18, r26
    1594:	30 1d       	adc	r19, r0
    1596:	40 1d       	adc	r20, r0
    1598:	50 1d       	adc	r21, r0
    159a:	60 1d       	adc	r22, r0
    159c:	70 1d       	adc	r23, r0
    159e:	80 1d       	adc	r24, r0
    15a0:	90 1d       	adc	r25, r0
    15a2:	08 95       	ret

000015a4 <sprintf>:
    15a4:	ae e0       	ldi	r26, 0x0E	; 14
    15a6:	b0 e0       	ldi	r27, 0x00	; 0
    15a8:	e8 ed       	ldi	r30, 0xD8	; 216
    15aa:	fa e0       	ldi	r31, 0x0A	; 10
    15ac:	0c 94 93 0d 	jmp	0x1b26	; 0x1b26 <__prologue_saves__+0x1c>
    15b0:	0d 89       	ldd	r16, Y+21	; 0x15
    15b2:	1e 89       	ldd	r17, Y+22	; 0x16
    15b4:	86 e0       	ldi	r24, 0x06	; 6
    15b6:	8c 83       	std	Y+4, r24	; 0x04
    15b8:	1a 83       	std	Y+2, r17	; 0x02
    15ba:	09 83       	std	Y+1, r16	; 0x01
    15bc:	8f ef       	ldi	r24, 0xFF	; 255
    15be:	9f e7       	ldi	r25, 0x7F	; 127
    15c0:	9e 83       	std	Y+6, r25	; 0x06
    15c2:	8d 83       	std	Y+5, r24	; 0x05
    15c4:	ae 01       	movw	r20, r28
    15c6:	47 5e       	subi	r20, 0xE7	; 231
    15c8:	5f 4f       	sbci	r21, 0xFF	; 255
    15ca:	6f 89       	ldd	r22, Y+23	; 0x17
    15cc:	78 8d       	ldd	r23, Y+24	; 0x18
    15ce:	ce 01       	movw	r24, r28
    15d0:	01 96       	adiw	r24, 0x01	; 1
    15d2:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <vfprintf>
    15d6:	ef 81       	ldd	r30, Y+7	; 0x07
    15d8:	f8 85       	ldd	r31, Y+8	; 0x08
    15da:	e0 0f       	add	r30, r16
    15dc:	f1 1f       	adc	r31, r17
    15de:	10 82       	st	Z, r1
    15e0:	2e 96       	adiw	r28, 0x0e	; 14
    15e2:	e4 e0       	ldi	r30, 0x04	; 4
    15e4:	0c 94 af 0d 	jmp	0x1b5e	; 0x1b5e <__epilogue_restores__+0x1c>

000015e8 <vfprintf>:
    15e8:	ab e0       	ldi	r26, 0x0B	; 11
    15ea:	b0 e0       	ldi	r27, 0x00	; 0
    15ec:	ea ef       	ldi	r30, 0xFA	; 250
    15ee:	fa e0       	ldi	r31, 0x0A	; 10
    15f0:	0c 94 85 0d 	jmp	0x1b0a	; 0x1b0a <__prologue_saves__>
    15f4:	6c 01       	movw	r12, r24
    15f6:	7b 01       	movw	r14, r22
    15f8:	8a 01       	movw	r16, r20
    15fa:	fc 01       	movw	r30, r24
    15fc:	17 82       	std	Z+7, r1	; 0x07
    15fe:	16 82       	std	Z+6, r1	; 0x06
    1600:	83 81       	ldd	r24, Z+3	; 0x03
    1602:	81 ff       	sbrs	r24, 1
    1604:	cc c1       	rjmp	.+920    	; 0x199e <vfprintf+0x3b6>
    1606:	ce 01       	movw	r24, r28
    1608:	01 96       	adiw	r24, 0x01	; 1
    160a:	3c 01       	movw	r6, r24
    160c:	f6 01       	movw	r30, r12
    160e:	93 81       	ldd	r25, Z+3	; 0x03
    1610:	f7 01       	movw	r30, r14
    1612:	93 fd       	sbrc	r25, 3
    1614:	85 91       	lpm	r24, Z+
    1616:	93 ff       	sbrs	r25, 3
    1618:	81 91       	ld	r24, Z+
    161a:	7f 01       	movw	r14, r30
    161c:	88 23       	and	r24, r24
    161e:	09 f4       	brne	.+2      	; 0x1622 <vfprintf+0x3a>
    1620:	ba c1       	rjmp	.+884    	; 0x1996 <vfprintf+0x3ae>
    1622:	85 32       	cpi	r24, 0x25	; 37
    1624:	39 f4       	brne	.+14     	; 0x1634 <vfprintf+0x4c>
    1626:	93 fd       	sbrc	r25, 3
    1628:	85 91       	lpm	r24, Z+
    162a:	93 ff       	sbrs	r25, 3
    162c:	81 91       	ld	r24, Z+
    162e:	7f 01       	movw	r14, r30
    1630:	85 32       	cpi	r24, 0x25	; 37
    1632:	29 f4       	brne	.+10     	; 0x163e <vfprintf+0x56>
    1634:	b6 01       	movw	r22, r12
    1636:	90 e0       	ldi	r25, 0x00	; 0
    1638:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    163c:	e7 cf       	rjmp	.-50     	; 0x160c <vfprintf+0x24>
    163e:	91 2c       	mov	r9, r1
    1640:	21 2c       	mov	r2, r1
    1642:	31 2c       	mov	r3, r1
    1644:	ff e1       	ldi	r31, 0x1F	; 31
    1646:	f3 15       	cp	r31, r3
    1648:	d8 f0       	brcs	.+54     	; 0x1680 <vfprintf+0x98>
    164a:	8b 32       	cpi	r24, 0x2B	; 43
    164c:	79 f0       	breq	.+30     	; 0x166c <vfprintf+0x84>
    164e:	38 f4       	brcc	.+14     	; 0x165e <vfprintf+0x76>
    1650:	80 32       	cpi	r24, 0x20	; 32
    1652:	79 f0       	breq	.+30     	; 0x1672 <vfprintf+0x8a>
    1654:	83 32       	cpi	r24, 0x23	; 35
    1656:	a1 f4       	brne	.+40     	; 0x1680 <vfprintf+0x98>
    1658:	23 2d       	mov	r18, r3
    165a:	20 61       	ori	r18, 0x10	; 16
    165c:	1d c0       	rjmp	.+58     	; 0x1698 <vfprintf+0xb0>
    165e:	8d 32       	cpi	r24, 0x2D	; 45
    1660:	61 f0       	breq	.+24     	; 0x167a <vfprintf+0x92>
    1662:	80 33       	cpi	r24, 0x30	; 48
    1664:	69 f4       	brne	.+26     	; 0x1680 <vfprintf+0x98>
    1666:	23 2d       	mov	r18, r3
    1668:	21 60       	ori	r18, 0x01	; 1
    166a:	16 c0       	rjmp	.+44     	; 0x1698 <vfprintf+0xb0>
    166c:	83 2d       	mov	r24, r3
    166e:	82 60       	ori	r24, 0x02	; 2
    1670:	38 2e       	mov	r3, r24
    1672:	e3 2d       	mov	r30, r3
    1674:	e4 60       	ori	r30, 0x04	; 4
    1676:	3e 2e       	mov	r3, r30
    1678:	2a c0       	rjmp	.+84     	; 0x16ce <vfprintf+0xe6>
    167a:	f3 2d       	mov	r31, r3
    167c:	f8 60       	ori	r31, 0x08	; 8
    167e:	1d c0       	rjmp	.+58     	; 0x16ba <vfprintf+0xd2>
    1680:	37 fc       	sbrc	r3, 7
    1682:	2d c0       	rjmp	.+90     	; 0x16de <vfprintf+0xf6>
    1684:	20 ed       	ldi	r18, 0xD0	; 208
    1686:	28 0f       	add	r18, r24
    1688:	2a 30       	cpi	r18, 0x0A	; 10
    168a:	40 f0       	brcs	.+16     	; 0x169c <vfprintf+0xb4>
    168c:	8e 32       	cpi	r24, 0x2E	; 46
    168e:	b9 f4       	brne	.+46     	; 0x16be <vfprintf+0xd6>
    1690:	36 fc       	sbrc	r3, 6
    1692:	81 c1       	rjmp	.+770    	; 0x1996 <vfprintf+0x3ae>
    1694:	23 2d       	mov	r18, r3
    1696:	20 64       	ori	r18, 0x40	; 64
    1698:	32 2e       	mov	r3, r18
    169a:	19 c0       	rjmp	.+50     	; 0x16ce <vfprintf+0xe6>
    169c:	36 fe       	sbrs	r3, 6
    169e:	06 c0       	rjmp	.+12     	; 0x16ac <vfprintf+0xc4>
    16a0:	8a e0       	ldi	r24, 0x0A	; 10
    16a2:	98 9e       	mul	r9, r24
    16a4:	20 0d       	add	r18, r0
    16a6:	11 24       	eor	r1, r1
    16a8:	92 2e       	mov	r9, r18
    16aa:	11 c0       	rjmp	.+34     	; 0x16ce <vfprintf+0xe6>
    16ac:	ea e0       	ldi	r30, 0x0A	; 10
    16ae:	2e 9e       	mul	r2, r30
    16b0:	20 0d       	add	r18, r0
    16b2:	11 24       	eor	r1, r1
    16b4:	22 2e       	mov	r2, r18
    16b6:	f3 2d       	mov	r31, r3
    16b8:	f0 62       	ori	r31, 0x20	; 32
    16ba:	3f 2e       	mov	r3, r31
    16bc:	08 c0       	rjmp	.+16     	; 0x16ce <vfprintf+0xe6>
    16be:	8c 36       	cpi	r24, 0x6C	; 108
    16c0:	21 f4       	brne	.+8      	; 0x16ca <vfprintf+0xe2>
    16c2:	83 2d       	mov	r24, r3
    16c4:	80 68       	ori	r24, 0x80	; 128
    16c6:	38 2e       	mov	r3, r24
    16c8:	02 c0       	rjmp	.+4      	; 0x16ce <vfprintf+0xe6>
    16ca:	88 36       	cpi	r24, 0x68	; 104
    16cc:	41 f4       	brne	.+16     	; 0x16de <vfprintf+0xf6>
    16ce:	f7 01       	movw	r30, r14
    16d0:	93 fd       	sbrc	r25, 3
    16d2:	85 91       	lpm	r24, Z+
    16d4:	93 ff       	sbrs	r25, 3
    16d6:	81 91       	ld	r24, Z+
    16d8:	7f 01       	movw	r14, r30
    16da:	81 11       	cpse	r24, r1
    16dc:	b3 cf       	rjmp	.-154    	; 0x1644 <vfprintf+0x5c>
    16de:	98 2f       	mov	r25, r24
    16e0:	9f 7d       	andi	r25, 0xDF	; 223
    16e2:	95 54       	subi	r25, 0x45	; 69
    16e4:	93 30       	cpi	r25, 0x03	; 3
    16e6:	28 f4       	brcc	.+10     	; 0x16f2 <vfprintf+0x10a>
    16e8:	0c 5f       	subi	r16, 0xFC	; 252
    16ea:	1f 4f       	sbci	r17, 0xFF	; 255
    16ec:	9f e3       	ldi	r25, 0x3F	; 63
    16ee:	99 83       	std	Y+1, r25	; 0x01
    16f0:	0d c0       	rjmp	.+26     	; 0x170c <vfprintf+0x124>
    16f2:	83 36       	cpi	r24, 0x63	; 99
    16f4:	31 f0       	breq	.+12     	; 0x1702 <vfprintf+0x11a>
    16f6:	83 37       	cpi	r24, 0x73	; 115
    16f8:	71 f0       	breq	.+28     	; 0x1716 <vfprintf+0x12e>
    16fa:	83 35       	cpi	r24, 0x53	; 83
    16fc:	09 f0       	breq	.+2      	; 0x1700 <vfprintf+0x118>
    16fe:	59 c0       	rjmp	.+178    	; 0x17b2 <vfprintf+0x1ca>
    1700:	21 c0       	rjmp	.+66     	; 0x1744 <vfprintf+0x15c>
    1702:	f8 01       	movw	r30, r16
    1704:	80 81       	ld	r24, Z
    1706:	89 83       	std	Y+1, r24	; 0x01
    1708:	0e 5f       	subi	r16, 0xFE	; 254
    170a:	1f 4f       	sbci	r17, 0xFF	; 255
    170c:	88 24       	eor	r8, r8
    170e:	83 94       	inc	r8
    1710:	91 2c       	mov	r9, r1
    1712:	53 01       	movw	r10, r6
    1714:	13 c0       	rjmp	.+38     	; 0x173c <vfprintf+0x154>
    1716:	28 01       	movw	r4, r16
    1718:	f2 e0       	ldi	r31, 0x02	; 2
    171a:	4f 0e       	add	r4, r31
    171c:	51 1c       	adc	r5, r1
    171e:	f8 01       	movw	r30, r16
    1720:	a0 80       	ld	r10, Z
    1722:	b1 80       	ldd	r11, Z+1	; 0x01
    1724:	36 fe       	sbrs	r3, 6
    1726:	03 c0       	rjmp	.+6      	; 0x172e <vfprintf+0x146>
    1728:	69 2d       	mov	r22, r9
    172a:	70 e0       	ldi	r23, 0x00	; 0
    172c:	02 c0       	rjmp	.+4      	; 0x1732 <vfprintf+0x14a>
    172e:	6f ef       	ldi	r22, 0xFF	; 255
    1730:	7f ef       	ldi	r23, 0xFF	; 255
    1732:	c5 01       	movw	r24, r10
    1734:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <strnlen>
    1738:	4c 01       	movw	r8, r24
    173a:	82 01       	movw	r16, r4
    173c:	f3 2d       	mov	r31, r3
    173e:	ff 77       	andi	r31, 0x7F	; 127
    1740:	3f 2e       	mov	r3, r31
    1742:	16 c0       	rjmp	.+44     	; 0x1770 <vfprintf+0x188>
    1744:	28 01       	movw	r4, r16
    1746:	22 e0       	ldi	r18, 0x02	; 2
    1748:	42 0e       	add	r4, r18
    174a:	51 1c       	adc	r5, r1
    174c:	f8 01       	movw	r30, r16
    174e:	a0 80       	ld	r10, Z
    1750:	b1 80       	ldd	r11, Z+1	; 0x01
    1752:	36 fe       	sbrs	r3, 6
    1754:	03 c0       	rjmp	.+6      	; 0x175c <vfprintf+0x174>
    1756:	69 2d       	mov	r22, r9
    1758:	70 e0       	ldi	r23, 0x00	; 0
    175a:	02 c0       	rjmp	.+4      	; 0x1760 <vfprintf+0x178>
    175c:	6f ef       	ldi	r22, 0xFF	; 255
    175e:	7f ef       	ldi	r23, 0xFF	; 255
    1760:	c5 01       	movw	r24, r10
    1762:	0e 94 d5 0c 	call	0x19aa	; 0x19aa <strnlen_P>
    1766:	4c 01       	movw	r8, r24
    1768:	f3 2d       	mov	r31, r3
    176a:	f0 68       	ori	r31, 0x80	; 128
    176c:	3f 2e       	mov	r3, r31
    176e:	82 01       	movw	r16, r4
    1770:	33 fc       	sbrc	r3, 3
    1772:	1b c0       	rjmp	.+54     	; 0x17aa <vfprintf+0x1c2>
    1774:	82 2d       	mov	r24, r2
    1776:	90 e0       	ldi	r25, 0x00	; 0
    1778:	88 16       	cp	r8, r24
    177a:	99 06       	cpc	r9, r25
    177c:	b0 f4       	brcc	.+44     	; 0x17aa <vfprintf+0x1c2>
    177e:	b6 01       	movw	r22, r12
    1780:	80 e2       	ldi	r24, 0x20	; 32
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    1788:	2a 94       	dec	r2
    178a:	f4 cf       	rjmp	.-24     	; 0x1774 <vfprintf+0x18c>
    178c:	f5 01       	movw	r30, r10
    178e:	37 fc       	sbrc	r3, 7
    1790:	85 91       	lpm	r24, Z+
    1792:	37 fe       	sbrs	r3, 7
    1794:	81 91       	ld	r24, Z+
    1796:	5f 01       	movw	r10, r30
    1798:	b6 01       	movw	r22, r12
    179a:	90 e0       	ldi	r25, 0x00	; 0
    179c:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    17a0:	21 10       	cpse	r2, r1
    17a2:	2a 94       	dec	r2
    17a4:	21 e0       	ldi	r18, 0x01	; 1
    17a6:	82 1a       	sub	r8, r18
    17a8:	91 08       	sbc	r9, r1
    17aa:	81 14       	cp	r8, r1
    17ac:	91 04       	cpc	r9, r1
    17ae:	71 f7       	brne	.-36     	; 0x178c <vfprintf+0x1a4>
    17b0:	e8 c0       	rjmp	.+464    	; 0x1982 <vfprintf+0x39a>
    17b2:	84 36       	cpi	r24, 0x64	; 100
    17b4:	11 f0       	breq	.+4      	; 0x17ba <vfprintf+0x1d2>
    17b6:	89 36       	cpi	r24, 0x69	; 105
    17b8:	41 f5       	brne	.+80     	; 0x180a <vfprintf+0x222>
    17ba:	f8 01       	movw	r30, r16
    17bc:	37 fe       	sbrs	r3, 7
    17be:	07 c0       	rjmp	.+14     	; 0x17ce <vfprintf+0x1e6>
    17c0:	60 81       	ld	r22, Z
    17c2:	71 81       	ldd	r23, Z+1	; 0x01
    17c4:	82 81       	ldd	r24, Z+2	; 0x02
    17c6:	93 81       	ldd	r25, Z+3	; 0x03
    17c8:	0c 5f       	subi	r16, 0xFC	; 252
    17ca:	1f 4f       	sbci	r17, 0xFF	; 255
    17cc:	08 c0       	rjmp	.+16     	; 0x17de <vfprintf+0x1f6>
    17ce:	60 81       	ld	r22, Z
    17d0:	71 81       	ldd	r23, Z+1	; 0x01
    17d2:	07 2e       	mov	r0, r23
    17d4:	00 0c       	add	r0, r0
    17d6:	88 0b       	sbc	r24, r24
    17d8:	99 0b       	sbc	r25, r25
    17da:	0e 5f       	subi	r16, 0xFE	; 254
    17dc:	1f 4f       	sbci	r17, 0xFF	; 255
    17de:	f3 2d       	mov	r31, r3
    17e0:	ff 76       	andi	r31, 0x6F	; 111
    17e2:	3f 2e       	mov	r3, r31
    17e4:	97 ff       	sbrs	r25, 7
    17e6:	09 c0       	rjmp	.+18     	; 0x17fa <vfprintf+0x212>
    17e8:	90 95       	com	r25
    17ea:	80 95       	com	r24
    17ec:	70 95       	com	r23
    17ee:	61 95       	neg	r22
    17f0:	7f 4f       	sbci	r23, 0xFF	; 255
    17f2:	8f 4f       	sbci	r24, 0xFF	; 255
    17f4:	9f 4f       	sbci	r25, 0xFF	; 255
    17f6:	f0 68       	ori	r31, 0x80	; 128
    17f8:	3f 2e       	mov	r3, r31
    17fa:	2a e0       	ldi	r18, 0x0A	; 10
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	a3 01       	movw	r20, r6
    1800:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__ultoa_invert>
    1804:	88 2e       	mov	r8, r24
    1806:	86 18       	sub	r8, r6
    1808:	45 c0       	rjmp	.+138    	; 0x1894 <vfprintf+0x2ac>
    180a:	85 37       	cpi	r24, 0x75	; 117
    180c:	31 f4       	brne	.+12     	; 0x181a <vfprintf+0x232>
    180e:	23 2d       	mov	r18, r3
    1810:	2f 7e       	andi	r18, 0xEF	; 239
    1812:	b2 2e       	mov	r11, r18
    1814:	2a e0       	ldi	r18, 0x0A	; 10
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	25 c0       	rjmp	.+74     	; 0x1864 <vfprintf+0x27c>
    181a:	93 2d       	mov	r25, r3
    181c:	99 7f       	andi	r25, 0xF9	; 249
    181e:	b9 2e       	mov	r11, r25
    1820:	8f 36       	cpi	r24, 0x6F	; 111
    1822:	c1 f0       	breq	.+48     	; 0x1854 <vfprintf+0x26c>
    1824:	18 f4       	brcc	.+6      	; 0x182c <vfprintf+0x244>
    1826:	88 35       	cpi	r24, 0x58	; 88
    1828:	79 f0       	breq	.+30     	; 0x1848 <vfprintf+0x260>
    182a:	b5 c0       	rjmp	.+362    	; 0x1996 <vfprintf+0x3ae>
    182c:	80 37       	cpi	r24, 0x70	; 112
    182e:	19 f0       	breq	.+6      	; 0x1836 <vfprintf+0x24e>
    1830:	88 37       	cpi	r24, 0x78	; 120
    1832:	21 f0       	breq	.+8      	; 0x183c <vfprintf+0x254>
    1834:	b0 c0       	rjmp	.+352    	; 0x1996 <vfprintf+0x3ae>
    1836:	e9 2f       	mov	r30, r25
    1838:	e0 61       	ori	r30, 0x10	; 16
    183a:	be 2e       	mov	r11, r30
    183c:	b4 fe       	sbrs	r11, 4
    183e:	0d c0       	rjmp	.+26     	; 0x185a <vfprintf+0x272>
    1840:	fb 2d       	mov	r31, r11
    1842:	f4 60       	ori	r31, 0x04	; 4
    1844:	bf 2e       	mov	r11, r31
    1846:	09 c0       	rjmp	.+18     	; 0x185a <vfprintf+0x272>
    1848:	34 fe       	sbrs	r3, 4
    184a:	0a c0       	rjmp	.+20     	; 0x1860 <vfprintf+0x278>
    184c:	29 2f       	mov	r18, r25
    184e:	26 60       	ori	r18, 0x06	; 6
    1850:	b2 2e       	mov	r11, r18
    1852:	06 c0       	rjmp	.+12     	; 0x1860 <vfprintf+0x278>
    1854:	28 e0       	ldi	r18, 0x08	; 8
    1856:	30 e0       	ldi	r19, 0x00	; 0
    1858:	05 c0       	rjmp	.+10     	; 0x1864 <vfprintf+0x27c>
    185a:	20 e1       	ldi	r18, 0x10	; 16
    185c:	30 e0       	ldi	r19, 0x00	; 0
    185e:	02 c0       	rjmp	.+4      	; 0x1864 <vfprintf+0x27c>
    1860:	20 e1       	ldi	r18, 0x10	; 16
    1862:	32 e0       	ldi	r19, 0x02	; 2
    1864:	f8 01       	movw	r30, r16
    1866:	b7 fe       	sbrs	r11, 7
    1868:	07 c0       	rjmp	.+14     	; 0x1878 <vfprintf+0x290>
    186a:	60 81       	ld	r22, Z
    186c:	71 81       	ldd	r23, Z+1	; 0x01
    186e:	82 81       	ldd	r24, Z+2	; 0x02
    1870:	93 81       	ldd	r25, Z+3	; 0x03
    1872:	0c 5f       	subi	r16, 0xFC	; 252
    1874:	1f 4f       	sbci	r17, 0xFF	; 255
    1876:	06 c0       	rjmp	.+12     	; 0x1884 <vfprintf+0x29c>
    1878:	60 81       	ld	r22, Z
    187a:	71 81       	ldd	r23, Z+1	; 0x01
    187c:	80 e0       	ldi	r24, 0x00	; 0
    187e:	90 e0       	ldi	r25, 0x00	; 0
    1880:	0e 5f       	subi	r16, 0xFE	; 254
    1882:	1f 4f       	sbci	r17, 0xFF	; 255
    1884:	a3 01       	movw	r20, r6
    1886:	0e 94 27 0d 	call	0x1a4e	; 0x1a4e <__ultoa_invert>
    188a:	88 2e       	mov	r8, r24
    188c:	86 18       	sub	r8, r6
    188e:	fb 2d       	mov	r31, r11
    1890:	ff 77       	andi	r31, 0x7F	; 127
    1892:	3f 2e       	mov	r3, r31
    1894:	36 fe       	sbrs	r3, 6
    1896:	0d c0       	rjmp	.+26     	; 0x18b2 <vfprintf+0x2ca>
    1898:	23 2d       	mov	r18, r3
    189a:	2e 7f       	andi	r18, 0xFE	; 254
    189c:	a2 2e       	mov	r10, r18
    189e:	89 14       	cp	r8, r9
    18a0:	58 f4       	brcc	.+22     	; 0x18b8 <vfprintf+0x2d0>
    18a2:	34 fe       	sbrs	r3, 4
    18a4:	0b c0       	rjmp	.+22     	; 0x18bc <vfprintf+0x2d4>
    18a6:	32 fc       	sbrc	r3, 2
    18a8:	09 c0       	rjmp	.+18     	; 0x18bc <vfprintf+0x2d4>
    18aa:	83 2d       	mov	r24, r3
    18ac:	8e 7e       	andi	r24, 0xEE	; 238
    18ae:	a8 2e       	mov	r10, r24
    18b0:	05 c0       	rjmp	.+10     	; 0x18bc <vfprintf+0x2d4>
    18b2:	b8 2c       	mov	r11, r8
    18b4:	a3 2c       	mov	r10, r3
    18b6:	03 c0       	rjmp	.+6      	; 0x18be <vfprintf+0x2d6>
    18b8:	b8 2c       	mov	r11, r8
    18ba:	01 c0       	rjmp	.+2      	; 0x18be <vfprintf+0x2d6>
    18bc:	b9 2c       	mov	r11, r9
    18be:	a4 fe       	sbrs	r10, 4
    18c0:	0f c0       	rjmp	.+30     	; 0x18e0 <vfprintf+0x2f8>
    18c2:	fe 01       	movw	r30, r28
    18c4:	e8 0d       	add	r30, r8
    18c6:	f1 1d       	adc	r31, r1
    18c8:	80 81       	ld	r24, Z
    18ca:	80 33       	cpi	r24, 0x30	; 48
    18cc:	21 f4       	brne	.+8      	; 0x18d6 <vfprintf+0x2ee>
    18ce:	9a 2d       	mov	r25, r10
    18d0:	99 7e       	andi	r25, 0xE9	; 233
    18d2:	a9 2e       	mov	r10, r25
    18d4:	09 c0       	rjmp	.+18     	; 0x18e8 <vfprintf+0x300>
    18d6:	a2 fe       	sbrs	r10, 2
    18d8:	06 c0       	rjmp	.+12     	; 0x18e6 <vfprintf+0x2fe>
    18da:	b3 94       	inc	r11
    18dc:	b3 94       	inc	r11
    18de:	04 c0       	rjmp	.+8      	; 0x18e8 <vfprintf+0x300>
    18e0:	8a 2d       	mov	r24, r10
    18e2:	86 78       	andi	r24, 0x86	; 134
    18e4:	09 f0       	breq	.+2      	; 0x18e8 <vfprintf+0x300>
    18e6:	b3 94       	inc	r11
    18e8:	a3 fc       	sbrc	r10, 3
    18ea:	11 c0       	rjmp	.+34     	; 0x190e <vfprintf+0x326>
    18ec:	a0 fe       	sbrs	r10, 0
    18ee:	06 c0       	rjmp	.+12     	; 0x18fc <vfprintf+0x314>
    18f0:	b2 14       	cp	r11, r2
    18f2:	88 f4       	brcc	.+34     	; 0x1916 <vfprintf+0x32e>
    18f4:	28 0c       	add	r2, r8
    18f6:	92 2c       	mov	r9, r2
    18f8:	9b 18       	sub	r9, r11
    18fa:	0e c0       	rjmp	.+28     	; 0x1918 <vfprintf+0x330>
    18fc:	b2 14       	cp	r11, r2
    18fe:	60 f4       	brcc	.+24     	; 0x1918 <vfprintf+0x330>
    1900:	b6 01       	movw	r22, r12
    1902:	80 e2       	ldi	r24, 0x20	; 32
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    190a:	b3 94       	inc	r11
    190c:	f7 cf       	rjmp	.-18     	; 0x18fc <vfprintf+0x314>
    190e:	b2 14       	cp	r11, r2
    1910:	18 f4       	brcc	.+6      	; 0x1918 <vfprintf+0x330>
    1912:	2b 18       	sub	r2, r11
    1914:	02 c0       	rjmp	.+4      	; 0x191a <vfprintf+0x332>
    1916:	98 2c       	mov	r9, r8
    1918:	21 2c       	mov	r2, r1
    191a:	a4 fe       	sbrs	r10, 4
    191c:	10 c0       	rjmp	.+32     	; 0x193e <vfprintf+0x356>
    191e:	b6 01       	movw	r22, r12
    1920:	80 e3       	ldi	r24, 0x30	; 48
    1922:	90 e0       	ldi	r25, 0x00	; 0
    1924:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    1928:	a2 fe       	sbrs	r10, 2
    192a:	17 c0       	rjmp	.+46     	; 0x195a <vfprintf+0x372>
    192c:	a1 fc       	sbrc	r10, 1
    192e:	03 c0       	rjmp	.+6      	; 0x1936 <vfprintf+0x34e>
    1930:	88 e7       	ldi	r24, 0x78	; 120
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	02 c0       	rjmp	.+4      	; 0x193a <vfprintf+0x352>
    1936:	88 e5       	ldi	r24, 0x58	; 88
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	b6 01       	movw	r22, r12
    193c:	0c c0       	rjmp	.+24     	; 0x1956 <vfprintf+0x36e>
    193e:	8a 2d       	mov	r24, r10
    1940:	86 78       	andi	r24, 0x86	; 134
    1942:	59 f0       	breq	.+22     	; 0x195a <vfprintf+0x372>
    1944:	a1 fe       	sbrs	r10, 1
    1946:	02 c0       	rjmp	.+4      	; 0x194c <vfprintf+0x364>
    1948:	8b e2       	ldi	r24, 0x2B	; 43
    194a:	01 c0       	rjmp	.+2      	; 0x194e <vfprintf+0x366>
    194c:	80 e2       	ldi	r24, 0x20	; 32
    194e:	a7 fc       	sbrc	r10, 7
    1950:	8d e2       	ldi	r24, 0x2D	; 45
    1952:	b6 01       	movw	r22, r12
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    195a:	89 14       	cp	r8, r9
    195c:	38 f4       	brcc	.+14     	; 0x196c <vfprintf+0x384>
    195e:	b6 01       	movw	r22, r12
    1960:	80 e3       	ldi	r24, 0x30	; 48
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    1968:	9a 94       	dec	r9
    196a:	f7 cf       	rjmp	.-18     	; 0x195a <vfprintf+0x372>
    196c:	8a 94       	dec	r8
    196e:	f3 01       	movw	r30, r6
    1970:	e8 0d       	add	r30, r8
    1972:	f1 1d       	adc	r31, r1
    1974:	80 81       	ld	r24, Z
    1976:	b6 01       	movw	r22, r12
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    197e:	81 10       	cpse	r8, r1
    1980:	f5 cf       	rjmp	.-22     	; 0x196c <vfprintf+0x384>
    1982:	22 20       	and	r2, r2
    1984:	09 f4       	brne	.+2      	; 0x1988 <vfprintf+0x3a0>
    1986:	42 ce       	rjmp	.-892    	; 0x160c <vfprintf+0x24>
    1988:	b6 01       	movw	r22, r12
    198a:	80 e2       	ldi	r24, 0x20	; 32
    198c:	90 e0       	ldi	r25, 0x00	; 0
    198e:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <fputc>
    1992:	2a 94       	dec	r2
    1994:	f6 cf       	rjmp	.-20     	; 0x1982 <vfprintf+0x39a>
    1996:	f6 01       	movw	r30, r12
    1998:	86 81       	ldd	r24, Z+6	; 0x06
    199a:	97 81       	ldd	r25, Z+7	; 0x07
    199c:	02 c0       	rjmp	.+4      	; 0x19a2 <vfprintf+0x3ba>
    199e:	8f ef       	ldi	r24, 0xFF	; 255
    19a0:	9f ef       	ldi	r25, 0xFF	; 255
    19a2:	2b 96       	adiw	r28, 0x0b	; 11
    19a4:	e2 e1       	ldi	r30, 0x12	; 18
    19a6:	0c 94 a1 0d 	jmp	0x1b42	; 0x1b42 <__epilogue_restores__>

000019aa <strnlen_P>:
    19aa:	fc 01       	movw	r30, r24
    19ac:	05 90       	lpm	r0, Z+
    19ae:	61 50       	subi	r22, 0x01	; 1
    19b0:	70 40       	sbci	r23, 0x00	; 0
    19b2:	01 10       	cpse	r0, r1
    19b4:	d8 f7       	brcc	.-10     	; 0x19ac <strnlen_P+0x2>
    19b6:	80 95       	com	r24
    19b8:	90 95       	com	r25
    19ba:	8e 0f       	add	r24, r30
    19bc:	9f 1f       	adc	r25, r31
    19be:	08 95       	ret

000019c0 <strnlen>:
    19c0:	fc 01       	movw	r30, r24
    19c2:	61 50       	subi	r22, 0x01	; 1
    19c4:	70 40       	sbci	r23, 0x00	; 0
    19c6:	01 90       	ld	r0, Z+
    19c8:	01 10       	cpse	r0, r1
    19ca:	d8 f7       	brcc	.-10     	; 0x19c2 <strnlen+0x2>
    19cc:	80 95       	com	r24
    19ce:	90 95       	com	r25
    19d0:	8e 0f       	add	r24, r30
    19d2:	9f 1f       	adc	r25, r31
    19d4:	08 95       	ret

000019d6 <fputc>:
    19d6:	0f 93       	push	r16
    19d8:	1f 93       	push	r17
    19da:	cf 93       	push	r28
    19dc:	df 93       	push	r29
    19de:	fb 01       	movw	r30, r22
    19e0:	23 81       	ldd	r18, Z+3	; 0x03
    19e2:	21 fd       	sbrc	r18, 1
    19e4:	03 c0       	rjmp	.+6      	; 0x19ec <fputc+0x16>
    19e6:	8f ef       	ldi	r24, 0xFF	; 255
    19e8:	9f ef       	ldi	r25, 0xFF	; 255
    19ea:	2c c0       	rjmp	.+88     	; 0x1a44 <fputc+0x6e>
    19ec:	22 ff       	sbrs	r18, 2
    19ee:	16 c0       	rjmp	.+44     	; 0x1a1c <fputc+0x46>
    19f0:	46 81       	ldd	r20, Z+6	; 0x06
    19f2:	57 81       	ldd	r21, Z+7	; 0x07
    19f4:	24 81       	ldd	r18, Z+4	; 0x04
    19f6:	35 81       	ldd	r19, Z+5	; 0x05
    19f8:	42 17       	cp	r20, r18
    19fa:	53 07       	cpc	r21, r19
    19fc:	44 f4       	brge	.+16     	; 0x1a0e <fputc+0x38>
    19fe:	a0 81       	ld	r26, Z
    1a00:	b1 81       	ldd	r27, Z+1	; 0x01
    1a02:	9d 01       	movw	r18, r26
    1a04:	2f 5f       	subi	r18, 0xFF	; 255
    1a06:	3f 4f       	sbci	r19, 0xFF	; 255
    1a08:	31 83       	std	Z+1, r19	; 0x01
    1a0a:	20 83       	st	Z, r18
    1a0c:	8c 93       	st	X, r24
    1a0e:	26 81       	ldd	r18, Z+6	; 0x06
    1a10:	37 81       	ldd	r19, Z+7	; 0x07
    1a12:	2f 5f       	subi	r18, 0xFF	; 255
    1a14:	3f 4f       	sbci	r19, 0xFF	; 255
    1a16:	37 83       	std	Z+7, r19	; 0x07
    1a18:	26 83       	std	Z+6, r18	; 0x06
    1a1a:	14 c0       	rjmp	.+40     	; 0x1a44 <fputc+0x6e>
    1a1c:	8b 01       	movw	r16, r22
    1a1e:	ec 01       	movw	r28, r24
    1a20:	fb 01       	movw	r30, r22
    1a22:	00 84       	ldd	r0, Z+8	; 0x08
    1a24:	f1 85       	ldd	r31, Z+9	; 0x09
    1a26:	e0 2d       	mov	r30, r0
    1a28:	09 95       	icall
    1a2a:	89 2b       	or	r24, r25
    1a2c:	e1 f6       	brne	.-72     	; 0x19e6 <fputc+0x10>
    1a2e:	d8 01       	movw	r26, r16
    1a30:	16 96       	adiw	r26, 0x06	; 6
    1a32:	8d 91       	ld	r24, X+
    1a34:	9c 91       	ld	r25, X
    1a36:	17 97       	sbiw	r26, 0x07	; 7
    1a38:	01 96       	adiw	r24, 0x01	; 1
    1a3a:	17 96       	adiw	r26, 0x07	; 7
    1a3c:	9c 93       	st	X, r25
    1a3e:	8e 93       	st	-X, r24
    1a40:	16 97       	sbiw	r26, 0x06	; 6
    1a42:	ce 01       	movw	r24, r28
    1a44:	df 91       	pop	r29
    1a46:	cf 91       	pop	r28
    1a48:	1f 91       	pop	r17
    1a4a:	0f 91       	pop	r16
    1a4c:	08 95       	ret

00001a4e <__ultoa_invert>:
    1a4e:	fa 01       	movw	r30, r20
    1a50:	aa 27       	eor	r26, r26
    1a52:	28 30       	cpi	r18, 0x08	; 8
    1a54:	51 f1       	breq	.+84     	; 0x1aaa <__ultoa_invert+0x5c>
    1a56:	20 31       	cpi	r18, 0x10	; 16
    1a58:	81 f1       	breq	.+96     	; 0x1aba <__ultoa_invert+0x6c>
    1a5a:	e8 94       	clt
    1a5c:	6f 93       	push	r22
    1a5e:	6e 7f       	andi	r22, 0xFE	; 254
    1a60:	6e 5f       	subi	r22, 0xFE	; 254
    1a62:	7f 4f       	sbci	r23, 0xFF	; 255
    1a64:	8f 4f       	sbci	r24, 0xFF	; 255
    1a66:	9f 4f       	sbci	r25, 0xFF	; 255
    1a68:	af 4f       	sbci	r26, 0xFF	; 255
    1a6a:	b1 e0       	ldi	r27, 0x01	; 1
    1a6c:	3e d0       	rcall	.+124    	; 0x1aea <__ultoa_invert+0x9c>
    1a6e:	b4 e0       	ldi	r27, 0x04	; 4
    1a70:	3c d0       	rcall	.+120    	; 0x1aea <__ultoa_invert+0x9c>
    1a72:	67 0f       	add	r22, r23
    1a74:	78 1f       	adc	r23, r24
    1a76:	89 1f       	adc	r24, r25
    1a78:	9a 1f       	adc	r25, r26
    1a7a:	a1 1d       	adc	r26, r1
    1a7c:	68 0f       	add	r22, r24
    1a7e:	79 1f       	adc	r23, r25
    1a80:	8a 1f       	adc	r24, r26
    1a82:	91 1d       	adc	r25, r1
    1a84:	a1 1d       	adc	r26, r1
    1a86:	6a 0f       	add	r22, r26
    1a88:	71 1d       	adc	r23, r1
    1a8a:	81 1d       	adc	r24, r1
    1a8c:	91 1d       	adc	r25, r1
    1a8e:	a1 1d       	adc	r26, r1
    1a90:	20 d0       	rcall	.+64     	; 0x1ad2 <__ultoa_invert+0x84>
    1a92:	09 f4       	brne	.+2      	; 0x1a96 <__ultoa_invert+0x48>
    1a94:	68 94       	set
    1a96:	3f 91       	pop	r19
    1a98:	2a e0       	ldi	r18, 0x0A	; 10
    1a9a:	26 9f       	mul	r18, r22
    1a9c:	11 24       	eor	r1, r1
    1a9e:	30 19       	sub	r19, r0
    1aa0:	30 5d       	subi	r19, 0xD0	; 208
    1aa2:	31 93       	st	Z+, r19
    1aa4:	de f6       	brtc	.-74     	; 0x1a5c <__ultoa_invert+0xe>
    1aa6:	cf 01       	movw	r24, r30
    1aa8:	08 95       	ret
    1aaa:	46 2f       	mov	r20, r22
    1aac:	47 70       	andi	r20, 0x07	; 7
    1aae:	40 5d       	subi	r20, 0xD0	; 208
    1ab0:	41 93       	st	Z+, r20
    1ab2:	b3 e0       	ldi	r27, 0x03	; 3
    1ab4:	0f d0       	rcall	.+30     	; 0x1ad4 <__ultoa_invert+0x86>
    1ab6:	c9 f7       	brne	.-14     	; 0x1aaa <__ultoa_invert+0x5c>
    1ab8:	f6 cf       	rjmp	.-20     	; 0x1aa6 <__ultoa_invert+0x58>
    1aba:	46 2f       	mov	r20, r22
    1abc:	4f 70       	andi	r20, 0x0F	; 15
    1abe:	40 5d       	subi	r20, 0xD0	; 208
    1ac0:	4a 33       	cpi	r20, 0x3A	; 58
    1ac2:	18 f0       	brcs	.+6      	; 0x1aca <__ultoa_invert+0x7c>
    1ac4:	49 5d       	subi	r20, 0xD9	; 217
    1ac6:	31 fd       	sbrc	r19, 1
    1ac8:	40 52       	subi	r20, 0x20	; 32
    1aca:	41 93       	st	Z+, r20
    1acc:	02 d0       	rcall	.+4      	; 0x1ad2 <__ultoa_invert+0x84>
    1ace:	a9 f7       	brne	.-22     	; 0x1aba <__ultoa_invert+0x6c>
    1ad0:	ea cf       	rjmp	.-44     	; 0x1aa6 <__ultoa_invert+0x58>
    1ad2:	b4 e0       	ldi	r27, 0x04	; 4
    1ad4:	a6 95       	lsr	r26
    1ad6:	97 95       	ror	r25
    1ad8:	87 95       	ror	r24
    1ada:	77 95       	ror	r23
    1adc:	67 95       	ror	r22
    1ade:	ba 95       	dec	r27
    1ae0:	c9 f7       	brne	.-14     	; 0x1ad4 <__ultoa_invert+0x86>
    1ae2:	00 97       	sbiw	r24, 0x00	; 0
    1ae4:	61 05       	cpc	r22, r1
    1ae6:	71 05       	cpc	r23, r1
    1ae8:	08 95       	ret
    1aea:	9b 01       	movw	r18, r22
    1aec:	ac 01       	movw	r20, r24
    1aee:	0a 2e       	mov	r0, r26
    1af0:	06 94       	lsr	r0
    1af2:	57 95       	ror	r21
    1af4:	47 95       	ror	r20
    1af6:	37 95       	ror	r19
    1af8:	27 95       	ror	r18
    1afa:	ba 95       	dec	r27
    1afc:	c9 f7       	brne	.-14     	; 0x1af0 <__ultoa_invert+0xa2>
    1afe:	62 0f       	add	r22, r18
    1b00:	73 1f       	adc	r23, r19
    1b02:	84 1f       	adc	r24, r20
    1b04:	95 1f       	adc	r25, r21
    1b06:	a0 1d       	adc	r26, r0
    1b08:	08 95       	ret

00001b0a <__prologue_saves__>:
    1b0a:	2f 92       	push	r2
    1b0c:	3f 92       	push	r3
    1b0e:	4f 92       	push	r4
    1b10:	5f 92       	push	r5
    1b12:	6f 92       	push	r6
    1b14:	7f 92       	push	r7
    1b16:	8f 92       	push	r8
    1b18:	9f 92       	push	r9
    1b1a:	af 92       	push	r10
    1b1c:	bf 92       	push	r11
    1b1e:	cf 92       	push	r12
    1b20:	df 92       	push	r13
    1b22:	ef 92       	push	r14
    1b24:	ff 92       	push	r15
    1b26:	0f 93       	push	r16
    1b28:	1f 93       	push	r17
    1b2a:	cf 93       	push	r28
    1b2c:	df 93       	push	r29
    1b2e:	cd b7       	in	r28, 0x3d	; 61
    1b30:	de b7       	in	r29, 0x3e	; 62
    1b32:	ca 1b       	sub	r28, r26
    1b34:	db 0b       	sbc	r29, r27
    1b36:	0f b6       	in	r0, 0x3f	; 63
    1b38:	f8 94       	cli
    1b3a:	de bf       	out	0x3e, r29	; 62
    1b3c:	0f be       	out	0x3f, r0	; 63
    1b3e:	cd bf       	out	0x3d, r28	; 61
    1b40:	09 94       	ijmp

00001b42 <__epilogue_restores__>:
    1b42:	2a 88       	ldd	r2, Y+18	; 0x12
    1b44:	39 88       	ldd	r3, Y+17	; 0x11
    1b46:	48 88       	ldd	r4, Y+16	; 0x10
    1b48:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b4a:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b4c:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b4e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b50:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b52:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b54:	b9 84       	ldd	r11, Y+9	; 0x09
    1b56:	c8 84       	ldd	r12, Y+8	; 0x08
    1b58:	df 80       	ldd	r13, Y+7	; 0x07
    1b5a:	ee 80       	ldd	r14, Y+6	; 0x06
    1b5c:	fd 80       	ldd	r15, Y+5	; 0x05
    1b5e:	0c 81       	ldd	r16, Y+4	; 0x04
    1b60:	1b 81       	ldd	r17, Y+3	; 0x03
    1b62:	aa 81       	ldd	r26, Y+2	; 0x02
    1b64:	b9 81       	ldd	r27, Y+1	; 0x01
    1b66:	ce 0f       	add	r28, r30
    1b68:	d1 1d       	adc	r29, r1
    1b6a:	0f b6       	in	r0, 0x3f	; 63
    1b6c:	f8 94       	cli
    1b6e:	de bf       	out	0x3e, r29	; 62
    1b70:	0f be       	out	0x3f, r0	; 63
    1b72:	cd bf       	out	0x3d, r28	; 61
    1b74:	ed 01       	movw	r28, r26
    1b76:	08 95       	ret

00001b78 <_exit>:
    1b78:	f8 94       	cli

00001b7a <__stop_program>:
    1b7a:	ff cf       	rjmp	.-2      	; 0x1b7a <__stop_program>
