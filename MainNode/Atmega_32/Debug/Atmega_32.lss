
Atmega_32.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001692  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006c  00800060  00001692  00001726  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  008000cc  008000cc  00001792  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001792  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000017f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  0000182c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000028d1  00000000  00000000  00001ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d7e  00000000  00000000  000043b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015a5  00000000  00000000  00005133  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000076c  00000000  00000000  000066d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000be0  00000000  00000000  00006e44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001798  00000000  00000000  00007a24  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000238  00000000  00000000  000091bc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__vector_1>
       8:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__vector_2>
       c:	0c 94 ac 05 	jmp	0xb58	; 0xb58 <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 77 06 	jmp	0xcee	; 0xcee <__vector_10>
      2c:	0c 94 6d 06 	jmp	0xcda	; 0xcda <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e9       	ldi	r30, 0x92	; 146
      68:	f6 e1       	ldi	r31, 0x16	; 22
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ac 3c       	cpi	r26, 0xCC	; 204
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ac ec       	ldi	r26, 0xCC	; 204
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 3e       	cpi	r26, 0xE6	; 230
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 cc 02 	call	0x598	; 0x598 <main>
      8a:	0c 94 47 0b 	jmp	0x168e	; 0x168e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcd_send_pulse_enable>:
}

void lcd_convert_u8_to_str (u8  value , u8* str){
	memset(str,'\0',4);
	sprintf((s8*)str,"%d",value);
	return;
      92:	41 e0       	ldi	r20, 0x01	; 1
      94:	62 e0       	ldi	r22, 0x02	; 2
      96:	80 e0       	ldi	r24, 0x00	; 0
      98:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
      9c:	40 e0       	ldi	r20, 0x00	; 0
      9e:	62 e0       	ldi	r22, 0x02	; 2
      a0:	80 e0       	ldi	r24, 0x00	; 0
      a2:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
      a6:	08 95       	ret

000000a8 <lcd_void_init_pins>:
      a8:	41 e0       	ldi	r20, 0x01	; 1
      aa:	63 e0       	ldi	r22, 0x03	; 3
      ac:	80 e0       	ldi	r24, 0x00	; 0
      ae:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
      b2:	41 e0       	ldi	r20, 0x01	; 1
      b4:	62 e0       	ldi	r22, 0x02	; 2
      b6:	80 e0       	ldi	r24, 0x00	; 0
      b8:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
      bc:	41 e0       	ldi	r20, 0x01	; 1
      be:	64 e0       	ldi	r22, 0x04	; 4
      c0:	81 e0       	ldi	r24, 0x01	; 1
      c2:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
      c6:	41 e0       	ldi	r20, 0x01	; 1
      c8:	62 e0       	ldi	r22, 0x02	; 2
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
      d0:	41 e0       	ldi	r20, 0x01	; 1
      d2:	61 e0       	ldi	r22, 0x01	; 1
      d4:	81 e0       	ldi	r24, 0x01	; 1
      d6:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
      da:	41 e0       	ldi	r20, 0x01	; 1
      dc:	60 e0       	ldi	r22, 0x00	; 0
      de:	81 e0       	ldi	r24, 0x01	; 1
      e0:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
      e4:	40 e0       	ldi	r20, 0x00	; 0
      e6:	63 e0       	ldi	r22, 0x03	; 3
      e8:	80 e0       	ldi	r24, 0x00	; 0
      ea:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
      ee:	40 e0       	ldi	r20, 0x00	; 0
      f0:	62 e0       	ldi	r22, 0x02	; 2
      f2:	80 e0       	ldi	r24, 0x00	; 0
      f4:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
      f8:	40 e0       	ldi	r20, 0x00	; 0
      fa:	64 e0       	ldi	r22, 0x04	; 4
      fc:	81 e0       	ldi	r24, 0x01	; 1
      fe:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     102:	40 e0       	ldi	r20, 0x00	; 0
     104:	62 e0       	ldi	r22, 0x02	; 2
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     10c:	40 e0       	ldi	r20, 0x00	; 0
     10e:	61 e0       	ldi	r22, 0x01	; 1
     110:	81 e0       	ldi	r24, 0x01	; 1
     112:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     116:	40 e0       	ldi	r20, 0x00	; 0
     118:	60 e0       	ldi	r22, 0x00	; 0
     11a:	81 e0       	ldi	r24, 0x01	; 1
     11c:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     120:	08 95       	ret

00000122 <lcd_send_command>:
     122:	1f 93       	push	r17
     124:	cf 93       	push	r28
     126:	df 93       	push	r29
     128:	1f 92       	push	r1
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	18 2f       	mov	r17, r24
     130:	19 82       	std	Y+1, r1	; 0x01
     132:	ce 01       	movw	r24, r28
     134:	01 96       	adiw	r24, 0x01	; 1
     136:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <GIE_GetValue>
     13a:	0e 94 dd 05 	call	0xbba	; 0xbba <GIE_Disable>
     13e:	40 e0       	ldi	r20, 0x00	; 0
     140:	63 e0       	ldi	r22, 0x03	; 3
     142:	80 e0       	ldi	r24, 0x00	; 0
     144:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     148:	41 2f       	mov	r20, r17
     14a:	44 1f       	adc	r20, r20
     14c:	44 27       	eor	r20, r20
     14e:	44 1f       	adc	r20, r20
     150:	64 e0       	ldi	r22, 0x04	; 4
     152:	81 e0       	ldi	r24, 0x01	; 1
     154:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     158:	16 fb       	bst	r17, 6
     15a:	44 27       	eor	r20, r20
     15c:	40 f9       	bld	r20, 0
     15e:	62 e0       	ldi	r22, 0x02	; 2
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     166:	15 fb       	bst	r17, 5
     168:	44 27       	eor	r20, r20
     16a:	40 f9       	bld	r20, 0
     16c:	61 e0       	ldi	r22, 0x01	; 1
     16e:	81 e0       	ldi	r24, 0x01	; 1
     170:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     174:	14 fb       	bst	r17, 4
     176:	44 27       	eor	r20, r20
     178:	40 f9       	bld	r20, 0
     17a:	60 e0       	ldi	r22, 0x00	; 0
     17c:	81 e0       	ldi	r24, 0x01	; 1
     17e:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     182:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     186:	8f eb       	ldi	r24, 0xBF	; 191
     188:	97 e1       	ldi	r25, 0x17	; 23
     18a:	01 97       	sbiw	r24, 0x01	; 1
     18c:	f1 f7       	brne	.-4      	; 0x18a <lcd_send_command+0x68>
     18e:	00 c0       	rjmp	.+0      	; 0x190 <lcd_send_command+0x6e>
     190:	00 00       	nop
     192:	13 fb       	bst	r17, 3
     194:	44 27       	eor	r20, r20
     196:	40 f9       	bld	r20, 0
     198:	64 e0       	ldi	r22, 0x04	; 4
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     1a0:	12 fb       	bst	r17, 2
     1a2:	44 27       	eor	r20, r20
     1a4:	40 f9       	bld	r20, 0
     1a6:	62 e0       	ldi	r22, 0x02	; 2
     1a8:	81 e0       	ldi	r24, 0x01	; 1
     1aa:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     1ae:	11 fb       	bst	r17, 1
     1b0:	44 27       	eor	r20, r20
     1b2:	40 f9       	bld	r20, 0
     1b4:	61 e0       	ldi	r22, 0x01	; 1
     1b6:	81 e0       	ldi	r24, 0x01	; 1
     1b8:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     1bc:	41 2f       	mov	r20, r17
     1be:	41 70       	andi	r20, 0x01	; 1
     1c0:	60 e0       	ldi	r22, 0x00	; 0
     1c2:	81 e0       	ldi	r24, 0x01	; 1
     1c4:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     1c8:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     1cc:	8f eb       	ldi	r24, 0xBF	; 191
     1ce:	97 e1       	ldi	r25, 0x17	; 23
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <lcd_send_command+0xae>
     1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <lcd_send_command+0xb4>
     1d6:	00 00       	nop
     1d8:	89 81       	ldd	r24, Y+1	; 0x01
     1da:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <GIE_SetValue>
     1de:	0f 90       	pop	r0
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	1f 91       	pop	r17
     1e6:	08 95       	ret

000001e8 <lcd_send_char>:
     1e8:	cf 93       	push	r28
     1ea:	c8 2f       	mov	r28, r24
     1ec:	41 e0       	ldi	r20, 0x01	; 1
     1ee:	63 e0       	ldi	r22, 0x03	; 3
     1f0:	80 e0       	ldi	r24, 0x00	; 0
     1f2:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     1f6:	4c 2f       	mov	r20, r28
     1f8:	44 1f       	adc	r20, r20
     1fa:	44 27       	eor	r20, r20
     1fc:	44 1f       	adc	r20, r20
     1fe:	64 e0       	ldi	r22, 0x04	; 4
     200:	81 e0       	ldi	r24, 0x01	; 1
     202:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     206:	c6 fb       	bst	r28, 6
     208:	44 27       	eor	r20, r20
     20a:	40 f9       	bld	r20, 0
     20c:	62 e0       	ldi	r22, 0x02	; 2
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     214:	c5 fb       	bst	r28, 5
     216:	44 27       	eor	r20, r20
     218:	40 f9       	bld	r20, 0
     21a:	61 e0       	ldi	r22, 0x01	; 1
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     222:	c4 fb       	bst	r28, 4
     224:	44 27       	eor	r20, r20
     226:	40 f9       	bld	r20, 0
     228:	60 e0       	ldi	r22, 0x00	; 0
     22a:	81 e0       	ldi	r24, 0x01	; 1
     22c:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     230:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     234:	c3 fb       	bst	r28, 3
     236:	44 27       	eor	r20, r20
     238:	40 f9       	bld	r20, 0
     23a:	64 e0       	ldi	r22, 0x04	; 4
     23c:	81 e0       	ldi	r24, 0x01	; 1
     23e:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     242:	c2 fb       	bst	r28, 2
     244:	44 27       	eor	r20, r20
     246:	40 f9       	bld	r20, 0
     248:	62 e0       	ldi	r22, 0x02	; 2
     24a:	81 e0       	ldi	r24, 0x01	; 1
     24c:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     250:	c1 fb       	bst	r28, 1
     252:	44 27       	eor	r20, r20
     254:	40 f9       	bld	r20, 0
     256:	61 e0       	ldi	r22, 0x01	; 1
     258:	81 e0       	ldi	r24, 0x01	; 1
     25a:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     25e:	4c 2f       	mov	r20, r28
     260:	41 70       	andi	r20, 0x01	; 1
     262:	60 e0       	ldi	r22, 0x00	; 0
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     26a:	0e 94 49 00 	call	0x92	; 0x92 <lcd_send_pulse_enable>
     26e:	87 ec       	ldi	r24, 0xC7	; 199
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	01 97       	sbiw	r24, 0x01	; 1
     274:	f1 f7       	brne	.-4      	; 0x272 <lcd_send_char+0x8a>
     276:	00 c0       	rjmp	.+0      	; 0x278 <lcd_send_char+0x90>
     278:	00 00       	nop
     27a:	cf 91       	pop	r28
     27c:	08 95       	ret

0000027e <lcd_send_string_pos>:
     27e:	ef 92       	push	r14
     280:	ff 92       	push	r15
     282:	0f 93       	push	r16
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	1f 92       	push	r1
     28c:	cd b7       	in	r28, 0x3d	; 61
     28e:	de b7       	in	r29, 0x3e	; 62
     290:	8c 01       	movw	r16, r24
     292:	f6 2e       	mov	r15, r22
     294:	e4 2e       	mov	r14, r20
     296:	19 82       	std	Y+1, r1	; 0x01
     298:	ce 01       	movw	r24, r28
     29a:	01 96       	adiw	r24, 0x01	; 1
     29c:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <GIE_GetValue>
     2a0:	0e 94 dd 05 	call	0xbba	; 0xbba <GIE_Disable>
     2a4:	82 e0       	ldi	r24, 0x02	; 2
     2a6:	f8 16       	cp	r15, r24
     2a8:	91 f0       	breq	.+36     	; 0x2ce <lcd_send_string_pos+0x50>
     2aa:	8f 15       	cp	r24, r15
     2ac:	20 f0       	brcs	.+8      	; 0x2b6 <lcd_send_string_pos+0x38>
     2ae:	e1 e0       	ldi	r30, 0x01	; 1
     2b0:	fe 16       	cp	r15, r30
     2b2:	41 f0       	breq	.+16     	; 0x2c4 <lcd_send_string_pos+0x46>
     2b4:	1f c0       	rjmp	.+62     	; 0x2f4 <lcd_send_string_pos+0x76>
     2b6:	f3 e0       	ldi	r31, 0x03	; 3
     2b8:	ff 16       	cp	r15, r31
     2ba:	71 f0       	breq	.+28     	; 0x2d8 <lcd_send_string_pos+0x5a>
     2bc:	84 e0       	ldi	r24, 0x04	; 4
     2be:	f8 16       	cp	r15, r24
     2c0:	81 f0       	breq	.+32     	; 0x2e2 <lcd_send_string_pos+0x64>
     2c2:	18 c0       	rjmp	.+48     	; 0x2f4 <lcd_send_string_pos+0x76>
     2c4:	8f e7       	ldi	r24, 0x7F	; 127
     2c6:	8e 0d       	add	r24, r14
     2c8:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2cc:	13 c0       	rjmp	.+38     	; 0x2f4 <lcd_send_string_pos+0x76>
     2ce:	8f eb       	ldi	r24, 0xBF	; 191
     2d0:	8e 0d       	add	r24, r14
     2d2:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2d6:	0e c0       	rjmp	.+28     	; 0x2f4 <lcd_send_string_pos+0x76>
     2d8:	83 e9       	ldi	r24, 0x93	; 147
     2da:	8e 0d       	add	r24, r14
     2dc:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2e0:	09 c0       	rjmp	.+18     	; 0x2f4 <lcd_send_string_pos+0x76>
     2e2:	83 ed       	ldi	r24, 0xD3	; 211
     2e4:	8e 0d       	add	r24, r14
     2e6:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     2ea:	04 c0       	rjmp	.+8      	; 0x2f4 <lcd_send_string_pos+0x76>
     2ec:	0f 5f       	subi	r16, 0xFF	; 255
     2ee:	1f 4f       	sbci	r17, 0xFF	; 255
     2f0:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <lcd_send_char>
     2f4:	f8 01       	movw	r30, r16
     2f6:	80 81       	ld	r24, Z
     2f8:	81 11       	cpse	r24, r1
     2fa:	f8 cf       	rjmp	.-16     	; 0x2ec <lcd_send_string_pos+0x6e>
     2fc:	89 81       	ldd	r24, Y+1	; 0x01
     2fe:	0e 94 e8 05 	call	0xbd0	; 0xbd0 <GIE_SetValue>
     302:	0f 90       	pop	r0
     304:	df 91       	pop	r29
     306:	cf 91       	pop	r28
     308:	1f 91       	pop	r17
     30a:	0f 91       	pop	r16
     30c:	ff 90       	pop	r15
     30e:	ef 90       	pop	r14
     310:	08 95       	ret

00000312 <lcd_init_4bit>:
     312:	0e 94 54 00 	call	0xa8	; 0xa8 <lcd_void_init_pins>
     316:	2f ef       	ldi	r18, 0xFF	; 255
     318:	89 ef       	ldi	r24, 0xF9	; 249
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	21 50       	subi	r18, 0x01	; 1
     31e:	80 40       	sbci	r24, 0x00	; 0
     320:	90 40       	sbci	r25, 0x00	; 0
     322:	e1 f7       	brne	.-8      	; 0x31c <lcd_init_4bit+0xa>
     324:	00 c0       	rjmp	.+0      	; 0x326 <lcd_init_4bit+0x14>
     326:	00 00       	nop
     328:	88 e3       	ldi	r24, 0x38	; 56
     32a:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     32e:	8f e1       	ldi	r24, 0x1F	; 31
     330:	9e e4       	ldi	r25, 0x4E	; 78
     332:	01 97       	sbiw	r24, 0x01	; 1
     334:	f1 f7       	brne	.-4      	; 0x332 <lcd_init_4bit+0x20>
     336:	00 c0       	rjmp	.+0      	; 0x338 <lcd_init_4bit+0x26>
     338:	00 00       	nop
     33a:	88 e3       	ldi	r24, 0x38	; 56
     33c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     340:	87 e5       	ldi	r24, 0x57	; 87
     342:	92 e0       	ldi	r25, 0x02	; 2
     344:	01 97       	sbiw	r24, 0x01	; 1
     346:	f1 f7       	brne	.-4      	; 0x344 <lcd_init_4bit+0x32>
     348:	00 c0       	rjmp	.+0      	; 0x34a <lcd_init_4bit+0x38>
     34a:	00 00       	nop
     34c:	88 e3       	ldi	r24, 0x38	; 56
     34e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     352:	81 e0       	ldi	r24, 0x01	; 1
     354:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     358:	82 e0       	ldi	r24, 0x02	; 2
     35a:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     35e:	86 e0       	ldi	r24, 0x06	; 6
     360:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     364:	8c e0       	ldi	r24, 0x0C	; 12
     366:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     36a:	88 e2       	ldi	r24, 0x28	; 40
     36c:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     370:	80 e8       	ldi	r24, 0x80	; 128
     372:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     37c:	8c e0       	ldi	r24, 0x0C	; 12
     37e:	0e 94 91 00 	call	0x122	; 0x122 <lcd_send_command>
     382:	08 95       	ret

00000384 <lcd_convert_u16_to_str>:
}

void lcd_convert_u16_to_str(u16 value , u8* str){
	memset(str,'\0',6);
     384:	e6 2f       	mov	r30, r22
     386:	f7 2f       	mov	r31, r23
     388:	26 e0       	ldi	r18, 0x06	; 6
     38a:	df 01       	movw	r26, r30
     38c:	1d 92       	st	X+, r1
     38e:	2a 95       	dec	r18
     390:	e9 f7       	brne	.-6      	; 0x38c <lcd_convert_u16_to_str+0x8>
	sprintf((s8*)str,"%d",value);
     392:	9f 93       	push	r25
     394:	8f 93       	push	r24
     396:	83 ec       	ldi	r24, 0xC3	; 195
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	9f 93       	push	r25
     39c:	8f 93       	push	r24
     39e:	7f 93       	push	r23
     3a0:	6f 93       	push	r22
     3a2:	0e 94 5d 08 	call	0x10ba	; 0x10ba <sprintf>
	return;
     3a6:	0f 90       	pop	r0
     3a8:	0f 90       	pop	r0
     3aa:	0f 90       	pop	r0
     3ac:	0f 90       	pop	r0
     3ae:	0f 90       	pop	r0
     3b0:	0f 90       	pop	r0
     3b2:	08 95       	ret

000003b4 <LED_init>:
}
void LED_turn_off(u8 portID, u8 pinID){
	DIO_void_SetPinValue	  (portID,pinID, LOGIC_LOW);
}
void LED_toggle  (u8 portID, u8 pinID){
	DIO_void_togglePinValue  (portID, pinID);
     3b4:	cf 93       	push	r28
     3b6:	df 93       	push	r29
     3b8:	c8 2f       	mov	r28, r24
     3ba:	d6 2f       	mov	r29, r22
     3bc:	41 e0       	ldi	r20, 0x01	; 1
     3be:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
     3c2:	40 e0       	ldi	r20, 0x00	; 0
     3c4:	6d 2f       	mov	r22, r29
     3c6:	8c 2f       	mov	r24, r28
     3c8:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     3cc:	df 91       	pop	r29
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <LED_turn_on>:
     3d2:	41 e0       	ldi	r20, 0x01	; 1
     3d4:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     3d8:	08 95       	ret

000003da <LED_turn_off>:
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     3e0:	08 95       	ret

000003e2 <BUZZER_init>:
}
void BUZZER_init	 (void){
	DIO_void_SetPinDirection (BUZZER_PORT, BUZZER_PIN, DIO_DIRECTION_OUTPUT);
     3e2:	41 e0       	ldi	r20, 0x01	; 1
     3e4:	66 e0       	ldi	r22, 0x06	; 6
     3e6:	82 e0       	ldi	r24, 0x02	; 2
     3e8:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
	DIO_void_SetPinValue	  (BUZZER_PORT,BUZZER_PIN, LOGIC_LOW);
     3ec:	40 e0       	ldi	r20, 0x00	; 0
     3ee:	66 e0       	ldi	r22, 0x06	; 6
     3f0:	82 e0       	ldi	r24, 0x02	; 2
     3f2:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     3f6:	08 95       	ret

000003f8 <BUZZER_turn_on>:
}

void BUZZER_turn_on (void){
	DIO_void_SetPinValue	  (BUZZER_PORT,BUZZER_PIN, LOGIC_HIGH);
     3f8:	41 e0       	ldi	r20, 0x01	; 1
     3fa:	66 e0       	ldi	r22, 0x06	; 6
     3fc:	82 e0       	ldi	r24, 0x02	; 2
     3fe:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     402:	08 95       	ret

00000404 <BUZZER_turn_off>:
}
void BUZZER_turn_off (void){
	DIO_void_SetPinValue	  (BUZZER_PORT,BUZZER_PIN, LOGIC_LOW);
     404:	40 e0       	ldi	r20, 0x00	; 0
     406:	66 e0       	ldi	r22, 0x06	; 6
     408:	82 e0       	ldi	r24, 0x02	; 2
     40a:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     40e:	08 95       	ret

00000410 <FLAME_INT_EXT_InterruptHandler>:
		GasSensor_PollerHandler();
	}
}

void FLAME_INT_EXT_InterruptHandler(void){
	lcd_send_string_pos(flame_detected,2,1);
     410:	41 e0       	ldi	r20, 0x01	; 1
     412:	62 e0       	ldi	r22, 0x02	; 2
     414:	8f e6       	ldi	r24, 0x6F	; 111
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_send_string_pos>
	ADC_Auto_Trigger_Read(&Temp_ADC_val);
     41c:	84 ed       	ldi	r24, 0xD4	; 212
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	0e 94 8f 03 	call	0x71e	; 0x71e <ADC_Auto_Trigger_Read>
	Temp_ADC_val = Temp_ADC_val * 5000.0f / 10230;
     424:	60 91 d4 00 	lds	r22, 0x00D4	; 0x8000d4 <Temp_ADC_val>
     428:	70 91 d5 00 	lds	r23, 0x00D5	; 0x8000d5 <Temp_ADC_val+0x1>
     42c:	80 e0       	ldi	r24, 0x00	; 0
     42e:	90 e0       	ldi	r25, 0x00	; 0
     430:	0e 94 56 07 	call	0xeac	; 0xeac <__floatunsisf>
     434:	20 e0       	ldi	r18, 0x00	; 0
     436:	30 e4       	ldi	r19, 0x40	; 64
     438:	4c e9       	ldi	r20, 0x9C	; 156
     43a:	55 e4       	ldi	r21, 0x45	; 69
     43c:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	38 ed       	ldi	r19, 0xD8	; 216
     444:	4f e1       	ldi	r20, 0x1F	; 31
     446:	56 e4       	ldi	r21, 0x46	; 70
     448:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__divsf3>
     44c:	0e 94 27 07 	call	0xe4e	; 0xe4e <__fixunssfsi>
     450:	70 93 d5 00 	sts	0x00D5, r23	; 0x8000d5 <Temp_ADC_val+0x1>
     454:	60 93 d4 00 	sts	0x00D4, r22	; 0x8000d4 <Temp_ADC_val>
	lcd_convert_u16_to_str(Temp_ADC_val,temp_reading);
     458:	80 91 d4 00 	lds	r24, 0x00D4	; 0x8000d4 <Temp_ADC_val>
     45c:	90 91 d5 00 	lds	r25, 0x00D5	; 0x8000d5 <Temp_ADC_val+0x1>
     460:	60 ee       	ldi	r22, 0xE0	; 224
     462:	70 e0       	ldi	r23, 0x00	; 0
     464:	0e 94 c2 01 	call	0x384	; 0x384 <lcd_convert_u16_to_str>
	lcd_send_string_pos(temp_std,4,1);
     468:	41 e0       	ldi	r20, 0x01	; 1
     46a:	64 e0       	ldi	r22, 0x04	; 4
     46c:	80 e6       	ldi	r24, 0x60	; 96
     46e:	90 e0       	ldi	r25, 0x00	; 0
     470:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_send_string_pos>
	IsModeNormal = 1;
     474:	81 e0       	ldi	r24, 0x01	; 1
     476:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
     47a:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__data_end+0x1>
     47e:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <__data_end+0x2>
     482:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <__data_end+0x3>
     486:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <__data_end+0x4>
     48a:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <__data_end+0x5>
     48e:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <__data_end+0x6>
     492:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <__data_end+0x7>
	BUZZER_turn_on();
     496:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <BUZZER_turn_on>
	LED_turn_on(LED_RED_PORT,LED_RED_PIN);
     49a:	67 e0       	ldi	r22, 0x07	; 7
     49c:	81 e0       	ldi	r24, 0x01	; 1
     49e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <LED_turn_on>
	LED_turn_off(LED_GREEN_PORT,LED_GREEN_PIN);
     4a2:	64 e0       	ldi	r22, 0x04	; 4
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	0e 94 ed 01 	call	0x3da	; 0x3da <LED_turn_off>
	lcd_send_string_pos(temp_reading,4,16);
     4aa:	40 e1       	ldi	r20, 0x10	; 16
     4ac:	64 e0       	ldi	r22, 0x04	; 4
     4ae:	80 ee       	ldi	r24, 0xE0	; 224
     4b0:	90 e0       	ldi	r25, 0x00	; 0
     4b2:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_send_string_pos>
     4b6:	08 95       	ret

000004b8 <GasSensor_Init>:
	}
	return 0;
}

void GasSensor_Init(void){
	DIO_void_SetPinDirection(GAS_SENSOR_PORT,GAS_SENSOR_PIN, DIO_DIRECTION_INPUT);
     4b8:	40 e0       	ldi	r20, 0x00	; 0
     4ba:	67 e0       	ldi	r22, 0x07	; 7
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
	DIO_void_SetPinValue	(GAS_SENSOR_PORT,GAS_SENSOR_PIN, LOGIC_HIGH			);
     4c2:	41 e0       	ldi	r20, 0x01	; 1
     4c4:	67 e0       	ldi	r22, 0x07	; 7
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
     4cc:	08 95       	ret

000004ce <APP_Init>:
	lcd_send_string_pos(temp_reading,4,16);
	
}

void APP_Init(void){
	LED_init(LED_RED_PORT ,LED_RED_PIN );
     4ce:	67 e0       	ldi	r22, 0x07	; 7
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LED_init>
	LED_init(LED_YELLOW_PORT ,LED_YELLOW_PIN );
     4d6:	66 e0       	ldi	r22, 0x06	; 6
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LED_init>
	LED_init(LED_GREEN_PORT ,LED_GREEN_PIN );
     4de:	64 e0       	ldi	r22, 0x04	; 4
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	0e 94 da 01 	call	0x3b4	; 0x3b4 <LED_init>
	BUZZER_init();
     4e6:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <BUZZER_init>
	GasSensor_Init();
     4ea:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <GasSensor_Init>
	lcd_init_4bit();
     4ee:	0e 94 89 01 	call	0x312	; 0x312 <lcd_init_4bit>
	ext_init(FLAME_EXT_INT_0,FLAME_INT_EXT_InterruptHandler,EXT_INT_ON_FALLING_EDGE);
     4f2:	42 e0       	ldi	r20, 0x02	; 2
     4f4:	68 e0       	ldi	r22, 0x08	; 8
     4f6:	72 e0       	ldi	r23, 0x02	; 2
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	0e 94 c5 04 	call	0x98a	; 0x98a <ext_init>
	ADC_Auto_Trigger_Init(TEMP_CHANNEL);
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	0e 94 5e 03 	call	0x6bc	; 0x6bc <ADC_Auto_Trigger_Init>
	TMR0_Init();
     504:	0e 94 5e 06 	call	0xcbc	; 0xcbc <TMR0_Init>
	GIE_Enable();
     508:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <GIE_Enable>
     50c:	08 95       	ret

0000050e <IsAnySensorActive>:
}

u8 IsAnySensorActive(void){
	if(
		0 == DIO_void_GetBitValue(INT0_PORT		 ,INT0_PIN		)
     50e:	62 e0       	ldi	r22, 0x02	; 2
     510:	83 e0       	ldi	r24, 0x03	; 3
     512:	0e 94 82 04 	call	0x904	; 0x904 <DIO_void_GetBitValue>
	TMR0_Init();
	GIE_Enable();
}

u8 IsAnySensorActive(void){
	if(
     516:	88 23       	and	r24, r24
     518:	41 f0       	breq	.+16     	; 0x52a <IsAnySensorActive+0x1c>
		0 == DIO_void_GetBitValue(INT0_PORT		 ,INT0_PIN		)
	||	0 == DIO_void_GetBitValue(GAS_SENSOR_PORT,GAS_SENSOR_PIN)){
     51a:	67 e0       	ldi	r22, 0x07	; 7
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	0e 94 82 04 	call	0x904	; 0x904 <DIO_void_GetBitValue>
     522:	88 23       	and	r24, r24
     524:	21 f0       	breq	.+8      	; 0x52e <IsAnySensorActive+0x20>
		return 1;
	}
	else{
		return 0;
     526:	80 e0       	ldi	r24, 0x00	; 0
     528:	08 95       	ret

u8 IsAnySensorActive(void){
	if(
		0 == DIO_void_GetBitValue(INT0_PORT		 ,INT0_PIN		)
	||	0 == DIO_void_GetBitValue(GAS_SENSOR_PORT,GAS_SENSOR_PIN)){
		return 1;
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	08 95       	ret
     52e:	81 e0       	ldi	r24, 0x01	; 1
	}
	else{
		return 0;
	}
}
     530:	08 95       	ret

00000532 <FanLowSpeed>:

void FanLowSpeed (void){
	TMR0_Set_OCR0_Value(50);
     532:	82 e3       	ldi	r24, 0x32	; 50
     534:	0e 94 b3 06 	call	0xd66	; 0xd66 <TMR0_Set_OCR0_Value>
     538:	08 95       	ret

0000053a <FanHighSpeed>:
}

void FanHighSpeed (void){
	TMR0_Set_OCR0_Value(250);
     53a:	8a ef       	ldi	r24, 0xFA	; 250
     53c:	0e 94 b3 06 	call	0xd66	; 0xd66 <TMR0_Set_OCR0_Value>
     540:	08 95       	ret

00000542 <GasSensor_PollerHandler>:
	DIO_void_SetPinDirection(GAS_SENSOR_PORT,GAS_SENSOR_PIN, DIO_DIRECTION_INPUT);
	DIO_void_SetPinValue	(GAS_SENSOR_PORT,GAS_SENSOR_PIN, LOGIC_HIGH			);
}

void GasSensor_PollerHandler(void){
	IsModeNormal = 1;
     542:	81 e0       	ldi	r24, 0x01	; 1
     544:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__data_end>
     548:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__data_end+0x1>
     54c:	10 92 ce 00 	sts	0x00CE, r1	; 0x8000ce <__data_end+0x2>
     550:	10 92 cf 00 	sts	0x00CF, r1	; 0x8000cf <__data_end+0x3>
     554:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <__data_end+0x4>
     558:	10 92 d1 00 	sts	0x00D1, r1	; 0x8000d1 <__data_end+0x5>
     55c:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <__data_end+0x6>
     560:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <__data_end+0x7>
	lcd_send_string_pos(gas_detected,1,1);
     564:	41 e0       	ldi	r20, 0x01	; 1
     566:	61 e0       	ldi	r22, 0x01	; 1
     568:	89 e9       	ldi	r24, 0x99	; 153
     56a:	90 e0       	ldi	r25, 0x00	; 0
     56c:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_send_string_pos>
	LED_turn_on(LED_YELLOW_PORT,LED_YELLOW_PIN);
     570:	66 e0       	ldi	r22, 0x06	; 6
     572:	80 e0       	ldi	r24, 0x00	; 0
     574:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <LED_turn_on>
	LED_turn_off(LED_GREEN_PORT,LED_GREEN_PIN);
     578:	64 e0       	ldi	r22, 0x04	; 4
     57a:	80 e0       	ldi	r24, 0x00	; 0
     57c:	0e 94 ed 01 	call	0x3da	; 0x3da <LED_turn_off>
	FanHighSpeed();
     580:	0e 94 9d 02 	call	0x53a	; 0x53a <FanHighSpeed>
     584:	08 95       	ret

00000586 <GasSensor_Poll>:
}

void GasSensor_Poll(void){
	if(0 == DIO_void_GetBitValue(GAS_SENSOR_PORT, GAS_SENSOR_PIN)){
     586:	67 e0       	ldi	r22, 0x07	; 7
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	0e 94 82 04 	call	0x904	; 0x904 <DIO_void_GetBitValue>
     58e:	81 11       	cpse	r24, r1
     590:	02 c0       	rjmp	.+4      	; 0x596 <GasSensor_Poll+0x10>
		GasSensor_PollerHandler();
     592:	0e 94 a1 02 	call	0x542	; 0x542 <GasSensor_PollerHandler>
     596:	08 95       	ret

00000598 <main>:
void FanHighSpeed (void);
/****************MAIN FUNCTION*********************/

int main(void){
	
	APP_Init();
     598:	0e 94 67 02 	call	0x4ce	; 0x4ce <APP_Init>
	
	while(1)
	{
		GasSensor_Poll();
     59c:	0e 94 c3 02 	call	0x586	; 0x586 <GasSensor_Poll>
		if( IsAnySensorActive() ){}
     5a0:	0e 94 87 02 	call	0x50e	; 0x50e <IsAnySensorActive>
     5a4:	81 11       	cpse	r24, r1
     5a6:	fa cf       	rjmp	.-12     	; 0x59c <main+0x4>
		else{
			if(IsModeNormal < 100000){
     5a8:	00 91 cc 00 	lds	r16, 0x00CC	; 0x8000cc <__data_end>
     5ac:	10 91 cd 00 	lds	r17, 0x00CD	; 0x8000cd <__data_end+0x1>
     5b0:	d0 91 ce 00 	lds	r29, 0x00CE	; 0x8000ce <__data_end+0x2>
     5b4:	c0 91 cf 00 	lds	r28, 0x00CF	; 0x8000cf <__data_end+0x3>
     5b8:	b0 91 d0 00 	lds	r27, 0x00D0	; 0x8000d0 <__data_end+0x4>
     5bc:	a0 91 d1 00 	lds	r26, 0x00D1	; 0x8000d1 <__data_end+0x5>
     5c0:	f0 91 d2 00 	lds	r31, 0x00D2	; 0x8000d2 <__data_end+0x6>
     5c4:	f0 90 d3 00 	lds	r15, 0x00D3	; 0x8000d3 <__data_end+0x7>
     5c8:	20 2f       	mov	r18, r16
     5ca:	31 2f       	mov	r19, r17
     5cc:	4d 2f       	mov	r20, r29
     5ce:	5c 2f       	mov	r21, r28
     5d0:	6b 2f       	mov	r22, r27
     5d2:	7a 2f       	mov	r23, r26
     5d4:	8f 2f       	mov	r24, r31
     5d6:	9f 2d       	mov	r25, r15
     5d8:	2f 39       	cpi	r18, 0x9F	; 159
     5da:	e6 e8       	ldi	r30, 0x86	; 134
     5dc:	3e 07       	cpc	r19, r30
     5de:	e1 e0       	ldi	r30, 0x01	; 1
     5e0:	4e 07       	cpc	r20, r30
     5e2:	51 05       	cpc	r21, r1
     5e4:	61 05       	cpc	r22, r1
     5e6:	71 05       	cpc	r23, r1
     5e8:	81 05       	cpc	r24, r1
     5ea:	91 05       	cpc	r25, r1
     5ec:	09 f0       	breq	.+2      	; 0x5f0 <main+0x58>
     5ee:	a0 f4       	brcc	.+40     	; 0x618 <main+0x80>
				IsModeNormal++;
     5f0:	a1 e0       	ldi	r26, 0x01	; 1
     5f2:	0e 94 51 08 	call	0x10a2	; 0x10a2 <__adddi3_s8>
     5f6:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__data_end>
     5fa:	30 93 cd 00 	sts	0x00CD, r19	; 0x8000cd <__data_end+0x1>
     5fe:	40 93 ce 00 	sts	0x00CE, r20	; 0x8000ce <__data_end+0x2>
     602:	50 93 cf 00 	sts	0x00CF, r21	; 0x8000cf <__data_end+0x3>
     606:	60 93 d0 00 	sts	0x00D0, r22	; 0x8000d0 <__data_end+0x4>
     60a:	70 93 d1 00 	sts	0x00D1, r23	; 0x8000d1 <__data_end+0x5>
     60e:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__data_end+0x6>
     612:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <__data_end+0x7>
     616:	c2 cf       	rjmp	.-124    	; 0x59c <main+0x4>
			}
			else if(IsModeNormal == 100000){
     618:	20 2f       	mov	r18, r16
     61a:	31 2f       	mov	r19, r17
     61c:	4d 2f       	mov	r20, r29
     61e:	5c 2f       	mov	r21, r28
     620:	6b 2f       	mov	r22, r27
     622:	7a 2f       	mov	r23, r26
     624:	8f 2f       	mov	r24, r31
     626:	9f 2d       	mov	r25, r15
     628:	20 3a       	cpi	r18, 0xA0	; 160
     62a:	36 48       	sbci	r19, 0x86	; 134
     62c:	41 40       	sbci	r20, 0x01	; 1
     62e:	51 05       	cpc	r21, r1
     630:	61 05       	cpc	r22, r1
     632:	71 05       	cpc	r23, r1
     634:	81 05       	cpc	r24, r1
     636:	91 05       	cpc	r25, r1
     638:	09 f0       	breq	.+2      	; 0x63c <main+0xa4>
     63a:	b0 cf       	rjmp	.-160    	; 0x59c <main+0x4>
				BUZZER_turn_off();
     63c:	0e 94 02 02 	call	0x404	; 0x404 <BUZZER_turn_off>
				LED_turn_off(LED_RED_PORT,LED_RED_PIN);
     640:	67 e0       	ldi	r22, 0x07	; 7
     642:	81 e0       	ldi	r24, 0x01	; 1
     644:	0e 94 ed 01 	call	0x3da	; 0x3da <LED_turn_off>
				LED_turn_off(LED_YELLOW_PORT,LED_YELLOW_PIN);
     648:	66 e0       	ldi	r22, 0x06	; 6
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	0e 94 ed 01 	call	0x3da	; 0x3da <LED_turn_off>
				LED_turn_on(LED_GREEN_PORT ,LED_GREEN_PIN);
     650:	64 e0       	ldi	r22, 0x04	; 4
     652:	80 e0       	ldi	r24, 0x00	; 0
     654:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <LED_turn_on>
				lcd_send_string_pos(gas_text_std,1,1);
     658:	41 e0       	ldi	r20, 0x01	; 1
     65a:	61 e0       	ldi	r22, 0x01	; 1
     65c:	8e ea       	ldi	r24, 0xAE	; 174
     65e:	90 e0       	ldi	r25, 0x00	; 0
     660:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_send_string_pos>
				lcd_send_string_pos(flame_text_std,2,1);
     664:	41 e0       	ldi	r20, 0x01	; 1
     666:	62 e0       	ldi	r22, 0x02	; 2
     668:	84 e8       	ldi	r24, 0x84	; 132
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	0e 94 3f 01 	call	0x27e	; 0x27e <lcd_send_string_pos>
				FanLowSpeed();
     670:	0e 94 99 02 	call	0x532	; 0x532 <FanLowSpeed>
				IsModeNormal++;
     674:	20 91 cc 00 	lds	r18, 0x00CC	; 0x8000cc <__data_end>
     678:	30 91 cd 00 	lds	r19, 0x00CD	; 0x8000cd <__data_end+0x1>
     67c:	40 91 ce 00 	lds	r20, 0x00CE	; 0x8000ce <__data_end+0x2>
     680:	50 91 cf 00 	lds	r21, 0x00CF	; 0x8000cf <__data_end+0x3>
     684:	60 91 d0 00 	lds	r22, 0x00D0	; 0x8000d0 <__data_end+0x4>
     688:	70 91 d1 00 	lds	r23, 0x00D1	; 0x8000d1 <__data_end+0x5>
     68c:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <__data_end+0x6>
     690:	90 91 d3 00 	lds	r25, 0x00D3	; 0x8000d3 <__data_end+0x7>
     694:	a1 e0       	ldi	r26, 0x01	; 1
     696:	0e 94 51 08 	call	0x10a2	; 0x10a2 <__adddi3_s8>
     69a:	20 93 cc 00 	sts	0x00CC, r18	; 0x8000cc <__data_end>
     69e:	30 93 cd 00 	sts	0x00CD, r19	; 0x8000cd <__data_end+0x1>
     6a2:	40 93 ce 00 	sts	0x00CE, r20	; 0x8000ce <__data_end+0x2>
     6a6:	50 93 cf 00 	sts	0x00CF, r21	; 0x8000cf <__data_end+0x3>
     6aa:	60 93 d0 00 	sts	0x00D0, r22	; 0x8000d0 <__data_end+0x4>
     6ae:	70 93 d1 00 	sts	0x00D1, r23	; 0x8000d1 <__data_end+0x5>
     6b2:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__data_end+0x6>
     6b6:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <__data_end+0x7>
     6ba:	70 cf       	rjmp	.-288    	; 0x59c <main+0x4>

000006bc <ADC_Auto_Trigger_Init>:
	SFIOR |= (last_mode<<5);
}

void ADC_Auto_Trigger_Init(u8 channel){
	/*		disable adc peripheral								*/
	CLEAR_BIT(ADCSRA, ADC_ENABLE_BIT);
     6bc:	96 b1       	in	r25, 0x06	; 6
     6be:	9f 77       	andi	r25, 0x7F	; 127
     6c0:	96 b9       	out	0x06, r25	; 6
	
	/*		select reference of adc								*/
	CLEAR_BIT(ADMUX, ADC_REF_SELECT_1);
     6c2:	97 b1       	in	r25, 0x07	; 7
     6c4:	9f 77       	andi	r25, 0x7F	; 127
     6c6:	97 b9       	out	0x07, r25	; 7
	SET_BIT(ADMUX, ADC_REF_SELECT_0);
     6c8:	97 b1       	in	r25, 0x07	; 7
     6ca:	90 64       	ori	r25, 0x40	; 64
     6cc:	97 b9       	out	0x07, r25	; 7
	
	/*		configure right adjustment							*/
	CLEAR_BIT(ADMUX, ADC_LEFT_ADJUST_BIT);
     6ce:	97 b1       	in	r25, 0x07	; 7
     6d0:	9f 7d       	andi	r25, 0xDF	; 223
     6d2:	97 b9       	out	0x07, r25	; 7
	
	/*		configure prescaler to be 128 16MHz crystal			*/
	SET_BIT(ADCSRA, ADC_PRESCALER_BIT_0);
     6d4:	96 b1       	in	r25, 0x06	; 6
     6d6:	91 60       	ori	r25, 0x01	; 1
     6d8:	96 b9       	out	0x06, r25	; 6
	SET_BIT(ADCSRA, ADC_PRESCALER_BIT_1);
     6da:	96 b1       	in	r25, 0x06	; 6
     6dc:	92 60       	ori	r25, 0x02	; 2
     6de:	96 b9       	out	0x06, r25	; 6
	SET_BIT(ADCSRA, ADC_PRESCALER_BIT_2);
     6e0:	96 b1       	in	r25, 0x06	; 6
     6e2:	94 60       	ori	r25, 0x04	; 4
     6e4:	96 b9       	out	0x06, r25	; 6
	
	/*		disable interrupt and clear flag by setting it		*/
	CLEAR_BIT(ADCSRA, ADC_INTERRUPT_ENABLE_BIT);
     6e6:	96 b1       	in	r25, 0x06	; 6
     6e8:	97 7f       	andi	r25, 0xF7	; 247
     6ea:	96 b9       	out	0x06, r25	; 6
	SET_BIT(ADCSRA, ADC_INTERRUPT_FLAG_BIT);
     6ec:	96 b1       	in	r25, 0x06	; 6
     6ee:	90 61       	ori	r25, 0x10	; 16
     6f0:	96 b9       	out	0x06, r25	; 6
	
	/*	select External Interrupt 0 as Auto trigger Source		*/
	CLEAR_BIT(SFIOR, 5);
     6f2:	90 b7       	in	r25, 0x30	; 48
     6f4:	9f 7d       	andi	r25, 0xDF	; 223
     6f6:	90 bf       	out	0x30, r25	; 48
	SET_BIT(SFIOR, 6);
     6f8:	90 b7       	in	r25, 0x30	; 48
     6fa:	90 64       	ori	r25, 0x40	; 64
     6fc:	90 bf       	out	0x30, r25	; 48
	CLEAR_BIT(SFIOR, 7);
     6fe:	90 b7       	in	r25, 0x30	; 48
     700:	9f 77       	andi	r25, 0x7F	; 127
     702:	90 bf       	out	0x30, r25	; 48
	/*select channel*/
	ADMUX &= 0xE0;
     704:	97 b1       	in	r25, 0x07	; 7
     706:	90 7e       	andi	r25, 0xE0	; 224
     708:	97 b9       	out	0x07, r25	; 7
	ADMUX |= channel;
     70a:	97 b1       	in	r25, 0x07	; 7
     70c:	89 2b       	or	r24, r25
     70e:	87 b9       	out	0x07, r24	; 7
	
	/*					enable auto trigger						*/
	SET_BIT(ADCSRA, 5);
     710:	86 b1       	in	r24, 0x06	; 6
     712:	80 62       	ori	r24, 0x20	; 32
     714:	86 b9       	out	0x06, r24	; 6
	
	/*					enable adc peripheral					*/
	SET_BIT(ADCSRA, ADC_ENABLE_BIT);
     716:	86 b1       	in	r24, 0x06	; 6
     718:	80 68       	ori	r24, 0x80	; 128
     71a:	86 b9       	out	0x06, r24	; 6
     71c:	08 95       	ret

0000071e <ADC_Auto_Trigger_Read>:
}

void ADC_Auto_Trigger_Read(volatile u16* retVal){
     71e:	fc 01       	movw	r30, r24
	/* DO NOT UN COMMENT THE WHILE LOOP BECAUSE THE FLAG SOMETIMES DOESNOT GET TRIGGERED*/
	//while(0 == GET_BIT(ADCSRA, ADC_INTERRUPT_FLAG_BIT)){
		///*NOTHING*/
	//}
	/* clear adc flag by setting it*/
	SET_BIT(ADCSRA, ADC_INTERRUPT_FLAG_BIT);
     720:	96 b1       	in	r25, 0x06	; 6
     722:	90 61       	ori	r25, 0x10	; 16
     724:	96 b9       	out	0x06, r25	; 6
	/*pass data to pointer*/
	*retVal = ADC;
     726:	84 b1       	in	r24, 0x04	; 4
     728:	95 b1       	in	r25, 0x05	; 5
     72a:	91 83       	std	Z+1, r25	; 0x01
     72c:	80 83       	st	Z, r24
     72e:	08 95       	ret

00000730 <DIO_void_SetPinDirection>:
void DIO_void_togglePinValue	( u8 portID, u8 pinID){
	switch(portID){
		case PORT_A: TOGGLE_BIT(PORTA, pinID); break;
		case PORT_B: TOGGLE_BIT(PORTB, pinID); break;
		case PORT_C: TOGGLE_BIT(PORTC, pinID); break;
		case PORT_D: TOGGLE_BIT(PORTD, pinID); break;
     730:	81 30       	cpi	r24, 0x01	; 1
     732:	11 f1       	breq	.+68     	; 0x778 <DIO_void_SetPinDirection+0x48>
     734:	30 f0       	brcs	.+12     	; 0x742 <DIO_void_SetPinDirection+0x12>
     736:	82 30       	cpi	r24, 0x02	; 2
     738:	d1 f1       	breq	.+116    	; 0x7ae <DIO_void_SetPinDirection+0x7e>
     73a:	83 30       	cpi	r24, 0x03	; 3
     73c:	09 f4       	brne	.+2      	; 0x740 <DIO_void_SetPinDirection+0x10>
     73e:	52 c0       	rjmp	.+164    	; 0x7e4 <DIO_void_SetPinDirection+0xb4>
     740:	08 95       	ret
     742:	41 30       	cpi	r20, 0x01	; 1
     744:	59 f4       	brne	.+22     	; 0x75c <DIO_void_SetPinDirection+0x2c>
     746:	2a b3       	in	r18, 0x1a	; 26
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	02 c0       	rjmp	.+4      	; 0x752 <DIO_void_SetPinDirection+0x22>
     74e:	88 0f       	add	r24, r24
     750:	99 1f       	adc	r25, r25
     752:	6a 95       	dec	r22
     754:	e2 f7       	brpl	.-8      	; 0x74e <DIO_void_SetPinDirection+0x1e>
     756:	82 2b       	or	r24, r18
     758:	8a bb       	out	0x1a, r24	; 26
     75a:	08 95       	ret
     75c:	41 11       	cpse	r20, r1
     75e:	5c c0       	rjmp	.+184    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     760:	2a b3       	in	r18, 0x1a	; 26
     762:	81 e0       	ldi	r24, 0x01	; 1
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	02 c0       	rjmp	.+4      	; 0x76c <DIO_void_SetPinDirection+0x3c>
     768:	88 0f       	add	r24, r24
     76a:	99 1f       	adc	r25, r25
     76c:	6a 95       	dec	r22
     76e:	e2 f7       	brpl	.-8      	; 0x768 <DIO_void_SetPinDirection+0x38>
     770:	80 95       	com	r24
     772:	82 23       	and	r24, r18
     774:	8a bb       	out	0x1a, r24	; 26
     776:	08 95       	ret
     778:	41 30       	cpi	r20, 0x01	; 1
     77a:	59 f4       	brne	.+22     	; 0x792 <DIO_void_SetPinDirection+0x62>
     77c:	27 b3       	in	r18, 0x17	; 23
     77e:	81 e0       	ldi	r24, 0x01	; 1
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	02 c0       	rjmp	.+4      	; 0x788 <DIO_void_SetPinDirection+0x58>
     784:	88 0f       	add	r24, r24
     786:	99 1f       	adc	r25, r25
     788:	6a 95       	dec	r22
     78a:	e2 f7       	brpl	.-8      	; 0x784 <DIO_void_SetPinDirection+0x54>
     78c:	82 2b       	or	r24, r18
     78e:	87 bb       	out	0x17, r24	; 23
     790:	08 95       	ret
     792:	41 11       	cpse	r20, r1
     794:	41 c0       	rjmp	.+130    	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     796:	27 b3       	in	r18, 0x17	; 23
     798:	81 e0       	ldi	r24, 0x01	; 1
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	02 c0       	rjmp	.+4      	; 0x7a2 <DIO_void_SetPinDirection+0x72>
     79e:	88 0f       	add	r24, r24
     7a0:	99 1f       	adc	r25, r25
     7a2:	6a 95       	dec	r22
     7a4:	e2 f7       	brpl	.-8      	; 0x79e <DIO_void_SetPinDirection+0x6e>
     7a6:	80 95       	com	r24
     7a8:	82 23       	and	r24, r18
     7aa:	87 bb       	out	0x17, r24	; 23
     7ac:	08 95       	ret
     7ae:	41 30       	cpi	r20, 0x01	; 1
     7b0:	59 f4       	brne	.+22     	; 0x7c8 <DIO_void_SetPinDirection+0x98>
     7b2:	24 b3       	in	r18, 0x14	; 20
     7b4:	81 e0       	ldi	r24, 0x01	; 1
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	02 c0       	rjmp	.+4      	; 0x7be <DIO_void_SetPinDirection+0x8e>
     7ba:	88 0f       	add	r24, r24
     7bc:	99 1f       	adc	r25, r25
     7be:	6a 95       	dec	r22
     7c0:	e2 f7       	brpl	.-8      	; 0x7ba <DIO_void_SetPinDirection+0x8a>
     7c2:	82 2b       	or	r24, r18
     7c4:	84 bb       	out	0x14, r24	; 20
     7c6:	08 95       	ret
     7c8:	41 11       	cpse	r20, r1
     7ca:	26 c0       	rjmp	.+76     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     7cc:	24 b3       	in	r18, 0x14	; 20
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <DIO_void_SetPinDirection+0xa8>
     7d4:	88 0f       	add	r24, r24
     7d6:	99 1f       	adc	r25, r25
     7d8:	6a 95       	dec	r22
     7da:	e2 f7       	brpl	.-8      	; 0x7d4 <DIO_void_SetPinDirection+0xa4>
     7dc:	80 95       	com	r24
     7de:	82 23       	and	r24, r18
     7e0:	84 bb       	out	0x14, r24	; 20
     7e2:	08 95       	ret
     7e4:	41 30       	cpi	r20, 0x01	; 1
     7e6:	59 f4       	brne	.+22     	; 0x7fe <DIO_void_SetPinDirection+0xce>
     7e8:	21 b3       	in	r18, 0x11	; 17
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	02 c0       	rjmp	.+4      	; 0x7f4 <DIO_void_SetPinDirection+0xc4>
     7f0:	88 0f       	add	r24, r24
     7f2:	99 1f       	adc	r25, r25
     7f4:	6a 95       	dec	r22
     7f6:	e2 f7       	brpl	.-8      	; 0x7f0 <DIO_void_SetPinDirection+0xc0>
     7f8:	82 2b       	or	r24, r18
     7fa:	81 bb       	out	0x11, r24	; 17
     7fc:	08 95       	ret
     7fe:	41 11       	cpse	r20, r1
     800:	0b c0       	rjmp	.+22     	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     802:	21 b3       	in	r18, 0x11	; 17
     804:	81 e0       	ldi	r24, 0x01	; 1
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	02 c0       	rjmp	.+4      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     80a:	88 0f       	add	r24, r24
     80c:	99 1f       	adc	r25, r25
     80e:	6a 95       	dec	r22
     810:	e2 f7       	brpl	.-8      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     812:	80 95       	com	r24
     814:	82 23       	and	r24, r18
     816:	81 bb       	out	0x11, r24	; 17
     818:	08 95       	ret

0000081a <DIO_void_SetPinValue>:
     81a:	81 30       	cpi	r24, 0x01	; 1
     81c:	11 f1       	breq	.+68     	; 0x862 <__stack+0x3>
     81e:	30 f0       	brcs	.+12     	; 0x82c <DIO_void_SetPinValue+0x12>
     820:	82 30       	cpi	r24, 0x02	; 2
     822:	d1 f1       	breq	.+116    	; 0x898 <__stack+0x39>
     824:	83 30       	cpi	r24, 0x03	; 3
     826:	09 f4       	brne	.+2      	; 0x82a <DIO_void_SetPinValue+0x10>
     828:	52 c0       	rjmp	.+164    	; 0x8ce <__stack+0x6f>
     82a:	08 95       	ret
     82c:	41 30       	cpi	r20, 0x01	; 1
     82e:	59 f4       	brne	.+22     	; 0x846 <DIO_void_SetPinValue+0x2c>
     830:	2b b3       	in	r18, 0x1b	; 27
     832:	81 e0       	ldi	r24, 0x01	; 1
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	02 c0       	rjmp	.+4      	; 0x83c <DIO_void_SetPinValue+0x22>
     838:	88 0f       	add	r24, r24
     83a:	99 1f       	adc	r25, r25
     83c:	6a 95       	dec	r22
     83e:	e2 f7       	brpl	.-8      	; 0x838 <DIO_void_SetPinValue+0x1e>
     840:	82 2b       	or	r24, r18
     842:	8b bb       	out	0x1b, r24	; 27
     844:	08 95       	ret
     846:	41 11       	cpse	r20, r1
     848:	5c c0       	rjmp	.+184    	; 0x902 <__stack+0xa3>
     84a:	2b b3       	in	r18, 0x1b	; 27
     84c:	81 e0       	ldi	r24, 0x01	; 1
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	02 c0       	rjmp	.+4      	; 0x856 <DIO_void_SetPinValue+0x3c>
     852:	88 0f       	add	r24, r24
     854:	99 1f       	adc	r25, r25
     856:	6a 95       	dec	r22
     858:	e2 f7       	brpl	.-8      	; 0x852 <DIO_void_SetPinValue+0x38>
     85a:	80 95       	com	r24
     85c:	82 23       	and	r24, r18
     85e:	8b bb       	out	0x1b, r24	; 27
     860:	08 95       	ret
     862:	41 30       	cpi	r20, 0x01	; 1
     864:	59 f4       	brne	.+22     	; 0x87c <__stack+0x1d>
     866:	28 b3       	in	r18, 0x18	; 24
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	02 c0       	rjmp	.+4      	; 0x872 <__stack+0x13>
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	6a 95       	dec	r22
     874:	e2 f7       	brpl	.-8      	; 0x86e <__stack+0xf>
     876:	82 2b       	or	r24, r18
     878:	88 bb       	out	0x18, r24	; 24
     87a:	08 95       	ret
     87c:	41 11       	cpse	r20, r1
     87e:	41 c0       	rjmp	.+130    	; 0x902 <__stack+0xa3>
     880:	28 b3       	in	r18, 0x18	; 24
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	02 c0       	rjmp	.+4      	; 0x88c <__stack+0x2d>
     888:	88 0f       	add	r24, r24
     88a:	99 1f       	adc	r25, r25
     88c:	6a 95       	dec	r22
     88e:	e2 f7       	brpl	.-8      	; 0x888 <__stack+0x29>
     890:	80 95       	com	r24
     892:	82 23       	and	r24, r18
     894:	88 bb       	out	0x18, r24	; 24
     896:	08 95       	ret
     898:	41 30       	cpi	r20, 0x01	; 1
     89a:	59 f4       	brne	.+22     	; 0x8b2 <__stack+0x53>
     89c:	25 b3       	in	r18, 0x15	; 21
     89e:	81 e0       	ldi	r24, 0x01	; 1
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <__stack+0x49>
     8a4:	88 0f       	add	r24, r24
     8a6:	99 1f       	adc	r25, r25
     8a8:	6a 95       	dec	r22
     8aa:	e2 f7       	brpl	.-8      	; 0x8a4 <__stack+0x45>
     8ac:	82 2b       	or	r24, r18
     8ae:	85 bb       	out	0x15, r24	; 21
     8b0:	08 95       	ret
     8b2:	41 11       	cpse	r20, r1
     8b4:	26 c0       	rjmp	.+76     	; 0x902 <__stack+0xa3>
     8b6:	25 b3       	in	r18, 0x15	; 21
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	02 c0       	rjmp	.+4      	; 0x8c2 <__stack+0x63>
     8be:	88 0f       	add	r24, r24
     8c0:	99 1f       	adc	r25, r25
     8c2:	6a 95       	dec	r22
     8c4:	e2 f7       	brpl	.-8      	; 0x8be <__stack+0x5f>
     8c6:	80 95       	com	r24
     8c8:	82 23       	and	r24, r18
     8ca:	85 bb       	out	0x15, r24	; 21
     8cc:	08 95       	ret
     8ce:	41 30       	cpi	r20, 0x01	; 1
     8d0:	59 f4       	brne	.+22     	; 0x8e8 <__stack+0x89>
     8d2:	22 b3       	in	r18, 0x12	; 18
     8d4:	81 e0       	ldi	r24, 0x01	; 1
     8d6:	90 e0       	ldi	r25, 0x00	; 0
     8d8:	02 c0       	rjmp	.+4      	; 0x8de <__stack+0x7f>
     8da:	88 0f       	add	r24, r24
     8dc:	99 1f       	adc	r25, r25
     8de:	6a 95       	dec	r22
     8e0:	e2 f7       	brpl	.-8      	; 0x8da <__stack+0x7b>
     8e2:	82 2b       	or	r24, r18
     8e4:	82 bb       	out	0x12, r24	; 18
     8e6:	08 95       	ret
     8e8:	41 11       	cpse	r20, r1
     8ea:	0b c0       	rjmp	.+22     	; 0x902 <__stack+0xa3>
     8ec:	22 b3       	in	r18, 0x12	; 18
     8ee:	81 e0       	ldi	r24, 0x01	; 1
     8f0:	90 e0       	ldi	r25, 0x00	; 0
     8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	88 0f       	add	r24, r24
     8f6:	99 1f       	adc	r25, r25
     8f8:	6a 95       	dec	r22
     8fa:	e2 f7       	brpl	.-8      	; 0x8f4 <__stack+0x95>
     8fc:	80 95       	com	r24
     8fe:	82 23       	and	r24, r18
     900:	82 bb       	out	0x12, r24	; 18
     902:	08 95       	ret

00000904 <DIO_void_GetBitValue>:
		default: break;
	}
}
u8 DIO_void_GetBitValue(u8 PortID, u8 PinID){
	u8 value = 0;
	switch(PortID){
     904:	81 30       	cpi	r24, 0x01	; 1
     906:	79 f0       	breq	.+30     	; 0x926 <DIO_void_GetBitValue+0x22>
     908:	28 f0       	brcs	.+10     	; 0x914 <DIO_void_GetBitValue+0x10>
     90a:	82 30       	cpi	r24, 0x02	; 2
     90c:	a9 f0       	breq	.+42     	; 0x938 <DIO_void_GetBitValue+0x34>
     90e:	83 30       	cpi	r24, 0x03	; 3
     910:	e1 f0       	breq	.+56     	; 0x94a <DIO_void_GetBitValue+0x46>
     912:	24 c0       	rjmp	.+72     	; 0x95c <DIO_void_GetBitValue+0x58>
		case PORT_A: value = GET_BIT(PINA, PinID); break;
     914:	89 b3       	in	r24, 0x19	; 25
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	02 c0       	rjmp	.+4      	; 0x91e <DIO_void_GetBitValue+0x1a>
     91a:	95 95       	asr	r25
     91c:	87 95       	ror	r24
     91e:	6a 95       	dec	r22
     920:	e2 f7       	brpl	.-8      	; 0x91a <DIO_void_GetBitValue+0x16>
     922:	81 70       	andi	r24, 0x01	; 1
     924:	08 95       	ret
		case PORT_B: value = GET_BIT(PINB, PinID); break;
     926:	86 b3       	in	r24, 0x16	; 22
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	02 c0       	rjmp	.+4      	; 0x930 <DIO_void_GetBitValue+0x2c>
     92c:	95 95       	asr	r25
     92e:	87 95       	ror	r24
     930:	6a 95       	dec	r22
     932:	e2 f7       	brpl	.-8      	; 0x92c <DIO_void_GetBitValue+0x28>
     934:	81 70       	andi	r24, 0x01	; 1
     936:	08 95       	ret
		case PORT_C: value = GET_BIT(PINC, PinID); break;
     938:	83 b3       	in	r24, 0x13	; 19
     93a:	90 e0       	ldi	r25, 0x00	; 0
     93c:	02 c0       	rjmp	.+4      	; 0x942 <DIO_void_GetBitValue+0x3e>
     93e:	95 95       	asr	r25
     940:	87 95       	ror	r24
     942:	6a 95       	dec	r22
     944:	e2 f7       	brpl	.-8      	; 0x93e <DIO_void_GetBitValue+0x3a>
     946:	81 70       	andi	r24, 0x01	; 1
     948:	08 95       	ret
		case PORT_D: value = GET_BIT(PIND, PinID); break;
     94a:	80 b3       	in	r24, 0x10	; 16
     94c:	90 e0       	ldi	r25, 0x00	; 0
     94e:	02 c0       	rjmp	.+4      	; 0x954 <DIO_void_GetBitValue+0x50>
     950:	95 95       	asr	r25
     952:	87 95       	ror	r24
     954:	6a 95       	dec	r22
     956:	e2 f7       	brpl	.-8      	; 0x950 <DIO_void_GetBitValue+0x4c>
     958:	81 70       	andi	r24, 0x01	; 1
     95a:	08 95       	ret
		case PORT_D: TOGGLE_BIT(PORTD, pinID); break;
		default: break;
	}
}
u8 DIO_void_GetBitValue(u8 PortID, u8 PinID){
	u8 value = 0;
     95c:	80 e0       	ldi	r24, 0x00	; 0
		case PORT_C: value = GET_BIT(PINC, PinID); break;
		case PORT_D: value = GET_BIT(PIND, PinID); break;
		default: break;
	}
	return value;
}
     95e:	08 95       	ret

00000960 <ext_callback>:
		
		default:			  break;
	}
}
static void ext_callback( void (*ptr)(void), u8 ext_int_num ){
	switch(ext_int_num){
     960:	61 30       	cpi	r22, 0x01	; 1
     962:	49 f0       	breq	.+18     	; 0x976 <ext_callback+0x16>
     964:	18 f0       	brcs	.+6      	; 0x96c <ext_callback+0xc>
     966:	62 30       	cpi	r22, 0x02	; 2
     968:	59 f0       	breq	.+22     	; 0x980 <ext_callback+0x20>
     96a:	08 95       	ret
		case EXT_INT_0_INDEX: 
		EXT_INT0_InterruptHandler = ptr;
     96c:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <EXT_INT0_InterruptHandler+0x1>
     970:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <EXT_INT0_InterruptHandler>
		break;
     974:	08 95       	ret
		case EXT_INT_1_INDEX: 
		EXT_INT1_InterruptHandler = ptr;
     976:	90 93 d9 00 	sts	0x00D9, r25	; 0x8000d9 <EXT_INT1_InterruptHandler+0x1>
     97a:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <EXT_INT1_InterruptHandler>
		break;
     97e:	08 95       	ret
		case EXT_INT_2_INDEX: 
		EXT_INT2_InterruptHandler = ptr;
     980:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <EXT_INT2_InterruptHandler+0x1>
     984:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <EXT_INT2_InterruptHandler>
     988:	08 95       	ret

0000098a <ext_init>:
static void (*EXT_INT1_InterruptHandler)(void) = (void*)0;
static void (*EXT_INT2_InterruptHandler)(void) = (void*)0;

static void ext_callback( void (*ptr)(void), u8 ext_int_num );

void ext_init	 ( u8 ext_int_num, void (*ptr)(void), u8 ext_int_sense){
     98a:	cf 93       	push	r28
     98c:	df 93       	push	r29
     98e:	c8 2f       	mov	r28, r24
     990:	cb 01       	movw	r24, r22
     992:	d4 2f       	mov	r29, r20
	
	ext_callback( ptr, ext_int_num );
     994:	6c 2f       	mov	r22, r28
     996:	0e 94 b0 04 	call	0x960	; 0x960 <ext_callback>
	
	switch(ext_int_num){
     99a:	c1 30       	cpi	r28, 0x01	; 1
     99c:	b1 f1       	breq	.+108    	; 0xa0a <ext_init+0x80>
     99e:	20 f0       	brcs	.+8      	; 0x9a8 <ext_init+0x1e>
     9a0:	c2 30       	cpi	r28, 0x02	; 2
     9a2:	09 f4       	brne	.+2      	; 0x9a6 <ext_init+0x1c>
     9a4:	63 c0       	rjmp	.+198    	; 0xa6c <ext_init+0xe2>
     9a6:	7b c0       	rjmp	.+246    	; 0xa9e <ext_init+0x114>
		case EXT_INT_0_INDEX: 
		DIO_void_SetPinDirection (PORT_D, PIN_2, DIO_DIRECTION_INPUT);
     9a8:	40 e0       	ldi	r20, 0x00	; 0
     9aa:	62 e0       	ldi	r22, 0x02	; 2
     9ac:	83 e0       	ldi	r24, 0x03	; 3
     9ae:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
		DIO_void_SetPinValue	(PORT_D, PIN_2, LOGIC_HIGH);
     9b2:	41 e0       	ldi	r20, 0x01	; 1
     9b4:	62 e0       	ldi	r22, 0x02	; 2
     9b6:	83 e0       	ldi	r24, 0x03	; 3
     9b8:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
		SET_BIT(GICR,GICR_INT0_PIN_MASK); 
     9bc:	8b b7       	in	r24, 0x3b	; 59
     9be:	80 64       	ori	r24, 0x40	; 64
     9c0:	8b bf       	out	0x3b, r24	; 59
		
		switch(ext_int_sense){
     9c2:	d1 30       	cpi	r29, 0x01	; 1
     9c4:	69 f0       	breq	.+26     	; 0x9e0 <ext_init+0x56>
     9c6:	28 f0       	brcs	.+10     	; 0x9d2 <ext_init+0x48>
     9c8:	d2 30       	cpi	r29, 0x02	; 2
     9ca:	89 f0       	breq	.+34     	; 0x9ee <ext_init+0x64>
     9cc:	d3 30       	cpi	r29, 0x03	; 3
     9ce:	b1 f0       	breq	.+44     	; 0x9fc <ext_init+0x72>
     9d0:	66 c0       	rjmp	.+204    	; 0xa9e <ext_init+0x114>
			case EXT_INT_ON_LOW_LEVEL: 
			CLEAR_BIT(MCUCR,ISC0_0_PIN_MASK);
     9d2:	85 b7       	in	r24, 0x35	; 53
     9d4:	8e 7f       	andi	r24, 0xFE	; 254
     9d6:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC0_1_PIN_MASK);
     9d8:	85 b7       	in	r24, 0x35	; 53
     9da:	8d 7f       	andi	r24, 0xFD	; 253
     9dc:	85 bf       	out	0x35, r24	; 53
			break;
     9de:	5f c0       	rjmp	.+190    	; 0xa9e <ext_init+0x114>
			
			case EXT_INT_ON_ANY_CHANGE: 
			SET_BIT(MCUCR,ISC0_0_PIN_MASK);
     9e0:	85 b7       	in	r24, 0x35	; 53
     9e2:	81 60       	ori	r24, 0x01	; 1
     9e4:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC0_1_PIN_MASK);
     9e6:	85 b7       	in	r24, 0x35	; 53
     9e8:	8d 7f       	andi	r24, 0xFD	; 253
     9ea:	85 bf       	out	0x35, r24	; 53
			break;
     9ec:	58 c0       	rjmp	.+176    	; 0xa9e <ext_init+0x114>
			
			case EXT_INT_ON_FALLING_EDGE:
			CLEAR_BIT(MCUCR,ISC0_0_PIN_MASK);
     9ee:	85 b7       	in	r24, 0x35	; 53
     9f0:	8e 7f       	andi	r24, 0xFE	; 254
     9f2:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR,ISC0_1_PIN_MASK);
     9f4:	85 b7       	in	r24, 0x35	; 53
     9f6:	82 60       	ori	r24, 0x02	; 2
     9f8:	85 bf       	out	0x35, r24	; 53
			break;
     9fa:	51 c0       	rjmp	.+162    	; 0xa9e <ext_init+0x114>
			
			case EXT_INT_ON_RISING_EDGE:
			SET_BIT(MCUCR,ISC0_0_PIN_MASK);
     9fc:	85 b7       	in	r24, 0x35	; 53
     9fe:	81 60       	ori	r24, 0x01	; 1
     a00:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR,ISC0_1_PIN_MASK);
     a02:	85 b7       	in	r24, 0x35	; 53
     a04:	82 60       	ori	r24, 0x02	; 2
     a06:	85 bf       	out	0x35, r24	; 53
			break;
     a08:	4a c0       	rjmp	.+148    	; 0xa9e <ext_init+0x114>
			default: break;
		}
		break;
		
		case EXT_INT_1_INDEX: 
		DIO_void_SetPinDirection (PORT_D, PIN_3, DIO_DIRECTION_INPUT);
     a0a:	40 e0       	ldi	r20, 0x00	; 0
     a0c:	63 e0       	ldi	r22, 0x03	; 3
     a0e:	83 e0       	ldi	r24, 0x03	; 3
     a10:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
		DIO_void_SetPinValue	(PORT_D, PIN_3, LOGIC_HIGH);
     a14:	41 e0       	ldi	r20, 0x01	; 1
     a16:	63 e0       	ldi	r22, 0x03	; 3
     a18:	83 e0       	ldi	r24, 0x03	; 3
     a1a:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
		SET_BIT(GICR,GICR_INT1_PIN_MASK); 
     a1e:	8b b7       	in	r24, 0x3b	; 59
     a20:	80 68       	ori	r24, 0x80	; 128
     a22:	8b bf       	out	0x3b, r24	; 59
		switch(ext_int_sense){
     a24:	d1 30       	cpi	r29, 0x01	; 1
     a26:	69 f0       	breq	.+26     	; 0xa42 <ext_init+0xb8>
     a28:	28 f0       	brcs	.+10     	; 0xa34 <ext_init+0xaa>
     a2a:	d2 30       	cpi	r29, 0x02	; 2
     a2c:	89 f0       	breq	.+34     	; 0xa50 <ext_init+0xc6>
     a2e:	d3 30       	cpi	r29, 0x03	; 3
     a30:	b1 f0       	breq	.+44     	; 0xa5e <ext_init+0xd4>
     a32:	35 c0       	rjmp	.+106    	; 0xa9e <ext_init+0x114>
			case EXT_INT_ON_LOW_LEVEL:
			CLEAR_BIT(MCUCR,ISC1_0_PIN_MASK);
     a34:	85 b7       	in	r24, 0x35	; 53
     a36:	8b 7f       	andi	r24, 0xFB	; 251
     a38:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC1_1_PIN_MASK);
     a3a:	85 b7       	in	r24, 0x35	; 53
     a3c:	87 7f       	andi	r24, 0xF7	; 247
     a3e:	85 bf       	out	0x35, r24	; 53
			break;
     a40:	2e c0       	rjmp	.+92     	; 0xa9e <ext_init+0x114>
			
			case EXT_INT_ON_ANY_CHANGE:
			SET_BIT  (MCUCR,ISC1_0_PIN_MASK);
     a42:	85 b7       	in	r24, 0x35	; 53
     a44:	84 60       	ori	r24, 0x04	; 4
     a46:	85 bf       	out	0x35, r24	; 53
			CLEAR_BIT(MCUCR,ISC1_1_PIN_MASK);
     a48:	85 b7       	in	r24, 0x35	; 53
     a4a:	87 7f       	andi	r24, 0xF7	; 247
     a4c:	85 bf       	out	0x35, r24	; 53
			break;
     a4e:	27 c0       	rjmp	.+78     	; 0xa9e <ext_init+0x114>
			
			case EXT_INT_ON_FALLING_EDGE:
			CLEAR_BIT(MCUCR,ISC1_0_PIN_MASK);
     a50:	85 b7       	in	r24, 0x35	; 53
     a52:	8b 7f       	andi	r24, 0xFB	; 251
     a54:	85 bf       	out	0x35, r24	; 53
			SET_BIT	 (MCUCR,ISC1_1_PIN_MASK);
     a56:	85 b7       	in	r24, 0x35	; 53
     a58:	88 60       	ori	r24, 0x08	; 8
     a5a:	85 bf       	out	0x35, r24	; 53
			break;
     a5c:	20 c0       	rjmp	.+64     	; 0xa9e <ext_init+0x114>
			
			case EXT_INT_ON_RISING_EDGE:
			SET_BIT(MCUCR,ISC1_0_PIN_MASK);
     a5e:	85 b7       	in	r24, 0x35	; 53
     a60:	84 60       	ori	r24, 0x04	; 4
     a62:	85 bf       	out	0x35, r24	; 53
			SET_BIT(MCUCR,ISC1_1_PIN_MASK);
     a64:	85 b7       	in	r24, 0x35	; 53
     a66:	88 60       	ori	r24, 0x08	; 8
     a68:	85 bf       	out	0x35, r24	; 53
			break;
     a6a:	19 c0       	rjmp	.+50     	; 0xa9e <ext_init+0x114>
		}
		break;
		
		case EXT_INT_2_INDEX: 
		
		SET_BIT(GICR,GICR_INT2_PIN_MASK);
     a6c:	8b b7       	in	r24, 0x3b	; 59
     a6e:	80 62       	ori	r24, 0x20	; 32
     a70:	8b bf       	out	0x3b, r24	; 59
		DIO_void_SetPinDirection (PORT_B, PIN_2, DIO_DIRECTION_INPUT); 
     a72:	40 e0       	ldi	r20, 0x00	; 0
     a74:	62 e0       	ldi	r22, 0x02	; 2
     a76:	81 e0       	ldi	r24, 0x01	; 1
     a78:	0e 94 98 03 	call	0x730	; 0x730 <DIO_void_SetPinDirection>
		DIO_void_SetPinValue	(PORT_B, PIN_2, LOGIC_HIGH);
     a7c:	41 e0       	ldi	r20, 0x01	; 1
     a7e:	62 e0       	ldi	r22, 0x02	; 2
     a80:	81 e0       	ldi	r24, 0x01	; 1
     a82:	0e 94 0d 04 	call	0x81a	; 0x81a <DIO_void_SetPinValue>
		switch(ext_int_sense){			
     a86:	d2 30       	cpi	r29, 0x02	; 2
     a88:	19 f0       	breq	.+6      	; 0xa90 <ext_init+0x106>
     a8a:	d3 30       	cpi	r29, 0x03	; 3
     a8c:	29 f0       	breq	.+10     	; 0xa98 <ext_init+0x10e>
     a8e:	07 c0       	rjmp	.+14     	; 0xa9e <ext_init+0x114>
			case EXT_INT_ON_FALLING_EDGE:
			CLEAR_BIT(MCUCSR,ISC2_PIN_MASK);
     a90:	84 b7       	in	r24, 0x34	; 52
     a92:	8f 7b       	andi	r24, 0xBF	; 191
     a94:	84 bf       	out	0x34, r24	; 52
			break;
     a96:	03 c0       	rjmp	.+6      	; 0xa9e <ext_init+0x114>
			
			case EXT_INT_ON_RISING_EDGE:
			SET_BIT(MCUCSR,ISC2_PIN_MASK);
     a98:	84 b7       	in	r24, 0x34	; 52
     a9a:	80 64       	ori	r24, 0x40	; 64
     a9c:	84 bf       	out	0x34, r24	; 52
		}
		break;
		
		default:			  break;
	}
}
     a9e:	df 91       	pop	r29
     aa0:	cf 91       	pop	r28
     aa2:	08 95       	ret

00000aa4 <__vector_1>:
		break;
	}
}

void __vector_1() __attribute__((signal));
void __vector_1(){
     aa4:	1f 92       	push	r1
     aa6:	0f 92       	push	r0
     aa8:	0f b6       	in	r0, 0x3f	; 63
     aaa:	0f 92       	push	r0
     aac:	11 24       	eor	r1, r1
     aae:	2f 93       	push	r18
     ab0:	3f 93       	push	r19
     ab2:	4f 93       	push	r20
     ab4:	5f 93       	push	r21
     ab6:	6f 93       	push	r22
     ab8:	7f 93       	push	r23
     aba:	8f 93       	push	r24
     abc:	9f 93       	push	r25
     abe:	af 93       	push	r26
     ac0:	bf 93       	push	r27
     ac2:	ef 93       	push	r30
     ac4:	ff 93       	push	r31
	GIE_Disable();
     ac6:	0e 94 dd 05 	call	0xbba	; 0xbba <GIE_Disable>
	
	if(EXT_INT0_InterruptHandler){
     aca:	e0 91 da 00 	lds	r30, 0x00DA	; 0x8000da <EXT_INT0_InterruptHandler>
     ace:	f0 91 db 00 	lds	r31, 0x00DB	; 0x8000db <EXT_INT0_InterruptHandler+0x1>
     ad2:	30 97       	sbiw	r30, 0x00	; 0
     ad4:	09 f0       	breq	.+2      	; 0xad8 <__vector_1+0x34>
		EXT_INT0_InterruptHandler();
     ad6:	09 95       	icall
	}
	
	GIE_Enable();
     ad8:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <GIE_Enable>
}
     adc:	ff 91       	pop	r31
     ade:	ef 91       	pop	r30
     ae0:	bf 91       	pop	r27
     ae2:	af 91       	pop	r26
     ae4:	9f 91       	pop	r25
     ae6:	8f 91       	pop	r24
     ae8:	7f 91       	pop	r23
     aea:	6f 91       	pop	r22
     aec:	5f 91       	pop	r21
     aee:	4f 91       	pop	r20
     af0:	3f 91       	pop	r19
     af2:	2f 91       	pop	r18
     af4:	0f 90       	pop	r0
     af6:	0f be       	out	0x3f, r0	; 63
     af8:	0f 90       	pop	r0
     afa:	1f 90       	pop	r1
     afc:	18 95       	reti

00000afe <__vector_2>:
void __vector_2() __attribute__((signal));
void __vector_2(){
     afe:	1f 92       	push	r1
     b00:	0f 92       	push	r0
     b02:	0f b6       	in	r0, 0x3f	; 63
     b04:	0f 92       	push	r0
     b06:	11 24       	eor	r1, r1
     b08:	2f 93       	push	r18
     b0a:	3f 93       	push	r19
     b0c:	4f 93       	push	r20
     b0e:	5f 93       	push	r21
     b10:	6f 93       	push	r22
     b12:	7f 93       	push	r23
     b14:	8f 93       	push	r24
     b16:	9f 93       	push	r25
     b18:	af 93       	push	r26
     b1a:	bf 93       	push	r27
     b1c:	ef 93       	push	r30
     b1e:	ff 93       	push	r31
	GIE_Disable();
     b20:	0e 94 dd 05 	call	0xbba	; 0xbba <GIE_Disable>
	
	if(EXT_INT1_InterruptHandler){
     b24:	e0 91 d8 00 	lds	r30, 0x00D8	; 0x8000d8 <EXT_INT1_InterruptHandler>
     b28:	f0 91 d9 00 	lds	r31, 0x00D9	; 0x8000d9 <EXT_INT1_InterruptHandler+0x1>
     b2c:	30 97       	sbiw	r30, 0x00	; 0
     b2e:	09 f0       	breq	.+2      	; 0xb32 <__vector_2+0x34>
		EXT_INT1_InterruptHandler();
     b30:	09 95       	icall
	}
	
	GIE_Enable();
     b32:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <GIE_Enable>
}
     b36:	ff 91       	pop	r31
     b38:	ef 91       	pop	r30
     b3a:	bf 91       	pop	r27
     b3c:	af 91       	pop	r26
     b3e:	9f 91       	pop	r25
     b40:	8f 91       	pop	r24
     b42:	7f 91       	pop	r23
     b44:	6f 91       	pop	r22
     b46:	5f 91       	pop	r21
     b48:	4f 91       	pop	r20
     b4a:	3f 91       	pop	r19
     b4c:	2f 91       	pop	r18
     b4e:	0f 90       	pop	r0
     b50:	0f be       	out	0x3f, r0	; 63
     b52:	0f 90       	pop	r0
     b54:	1f 90       	pop	r1
     b56:	18 95       	reti

00000b58 <__vector_3>:
void __vector_3() __attribute__((signal));
void __vector_3(){
     b58:	1f 92       	push	r1
     b5a:	0f 92       	push	r0
     b5c:	0f b6       	in	r0, 0x3f	; 63
     b5e:	0f 92       	push	r0
     b60:	11 24       	eor	r1, r1
     b62:	2f 93       	push	r18
     b64:	3f 93       	push	r19
     b66:	4f 93       	push	r20
     b68:	5f 93       	push	r21
     b6a:	6f 93       	push	r22
     b6c:	7f 93       	push	r23
     b6e:	8f 93       	push	r24
     b70:	9f 93       	push	r25
     b72:	af 93       	push	r26
     b74:	bf 93       	push	r27
     b76:	ef 93       	push	r30
     b78:	ff 93       	push	r31
	GIE_Disable();
     b7a:	0e 94 dd 05 	call	0xbba	; 0xbba <GIE_Disable>
	
	if(EXT_INT2_InterruptHandler){
     b7e:	e0 91 d6 00 	lds	r30, 0x00D6	; 0x8000d6 <EXT_INT2_InterruptHandler>
     b82:	f0 91 d7 00 	lds	r31, 0x00D7	; 0x8000d7 <EXT_INT2_InterruptHandler+0x1>
     b86:	30 97       	sbiw	r30, 0x00	; 0
     b88:	09 f0       	breq	.+2      	; 0xb8c <__vector_3+0x34>
		EXT_INT2_InterruptHandler();
     b8a:	09 95       	icall
	}
	
	GIE_Enable();
     b8c:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <GIE_Enable>
}
     b90:	ff 91       	pop	r31
     b92:	ef 91       	pop	r30
     b94:	bf 91       	pop	r27
     b96:	af 91       	pop	r26
     b98:	9f 91       	pop	r25
     b9a:	8f 91       	pop	r24
     b9c:	7f 91       	pop	r23
     b9e:	6f 91       	pop	r22
     ba0:	5f 91       	pop	r21
     ba2:	4f 91       	pop	r20
     ba4:	3f 91       	pop	r19
     ba6:	2f 91       	pop	r18
     ba8:	0f 90       	pop	r0
     baa:	0f be       	out	0x3f, r0	; 63
     bac:	0f 90       	pop	r0
     bae:	1f 90       	pop	r1
     bb0:	18 95       	reti

00000bb2 <GIE_Enable>:
#include "gie_interface.h"
#include "gie_config.h"
#include "gie_private.h"

void GIE_Enable(void){
	SET_BIT(SREG, GIE_PIN_MASK);
     bb2:	8f b7       	in	r24, 0x3f	; 63
     bb4:	80 68       	ori	r24, 0x80	; 128
     bb6:	8f bf       	out	0x3f, r24	; 63
     bb8:	08 95       	ret

00000bba <GIE_Disable>:
}
void GIE_Disable(void){
	CLEAR_BIT(SREG, GIE_PIN_MASK);
     bba:	8f b7       	in	r24, 0x3f	; 63
     bbc:	8f 77       	andi	r24, 0x7F	; 127
     bbe:	8f bf       	out	0x3f, r24	; 63
     bc0:	08 95       	ret

00000bc2 <GIE_GetValue>:
}
void GIE_GetValue(u8* GIE_Value){
     bc2:	fc 01       	movw	r30, r24
	*GIE_Value = GET_BIT(SREG, GIE_PIN_MASK);
     bc4:	9f b7       	in	r25, 0x3f	; 63
     bc6:	99 1f       	adc	r25, r25
     bc8:	99 27       	eor	r25, r25
     bca:	99 1f       	adc	r25, r25
     bcc:	90 83       	st	Z, r25
     bce:	08 95       	ret

00000bd0 <GIE_SetValue>:
}
void GIE_SetValue(u8 GIE_Value){
	if(GIE_Value == 1){
     bd0:	81 30       	cpi	r24, 0x01	; 1
     bd2:	19 f4       	brne	.+6      	; 0xbda <GIE_SetValue+0xa>
		GIE_Enable();
     bd4:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <GIE_Enable>
     bd8:	08 95       	ret
	}
	else if(GIE_Value == 0){
     bda:	81 11       	cpse	r24, r1
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <GIE_SetValue+0x12>
		GIE_Disable();
     bde:	0e 94 dd 05 	call	0xbba	; 0xbba <GIE_Disable>
     be2:	08 95       	ret

00000be4 <TMR0_Select_Mode_Select_Prescaler>:
		/*clear timer0 flag by setting it*/
		SET_BIT(TIFR, TOV0);
	}
	TMR0_Disable();	
	GIE_SetValue(GIE_State);
}
     be4:	81 11       	cpse	r24, r1
     be6:	0a c0       	rjmp	.+20     	; 0xbfc <TMR0_Select_Mode_Select_Prescaler+0x18>
     be8:	83 b7       	in	r24, 0x33	; 51
     bea:	8e 7f       	andi	r24, 0xFE	; 254
     bec:	83 bf       	out	0x33, r24	; 51
     bee:	83 b7       	in	r24, 0x33	; 51
     bf0:	8d 7f       	andi	r24, 0xFD	; 253
     bf2:	83 bf       	out	0x33, r24	; 51
     bf4:	83 b7       	in	r24, 0x33	; 51
     bf6:	8b 7f       	andi	r24, 0xFB	; 251
     bf8:	83 bf       	out	0x33, r24	; 51
     bfa:	08 95       	ret
     bfc:	81 30       	cpi	r24, 0x01	; 1
     bfe:	51 f4       	brne	.+20     	; 0xc14 <TMR0_Select_Mode_Select_Prescaler+0x30>
     c00:	83 b7       	in	r24, 0x33	; 51
     c02:	81 60       	ori	r24, 0x01	; 1
     c04:	83 bf       	out	0x33, r24	; 51
     c06:	83 b7       	in	r24, 0x33	; 51
     c08:	8d 7f       	andi	r24, 0xFD	; 253
     c0a:	83 bf       	out	0x33, r24	; 51
     c0c:	83 b7       	in	r24, 0x33	; 51
     c0e:	8b 7f       	andi	r24, 0xFB	; 251
     c10:	83 bf       	out	0x33, r24	; 51
     c12:	08 95       	ret
     c14:	82 30       	cpi	r24, 0x02	; 2
     c16:	51 f4       	brne	.+20     	; 0xc2c <TMR0_Select_Mode_Select_Prescaler+0x48>
     c18:	83 b7       	in	r24, 0x33	; 51
     c1a:	8e 7f       	andi	r24, 0xFE	; 254
     c1c:	83 bf       	out	0x33, r24	; 51
     c1e:	83 b7       	in	r24, 0x33	; 51
     c20:	82 60       	ori	r24, 0x02	; 2
     c22:	83 bf       	out	0x33, r24	; 51
     c24:	83 b7       	in	r24, 0x33	; 51
     c26:	8b 7f       	andi	r24, 0xFB	; 251
     c28:	83 bf       	out	0x33, r24	; 51
     c2a:	08 95       	ret
     c2c:	83 30       	cpi	r24, 0x03	; 3
     c2e:	51 f4       	brne	.+20     	; 0xc44 <TMR0_Select_Mode_Select_Prescaler+0x60>
     c30:	83 b7       	in	r24, 0x33	; 51
     c32:	81 60       	ori	r24, 0x01	; 1
     c34:	83 bf       	out	0x33, r24	; 51
     c36:	83 b7       	in	r24, 0x33	; 51
     c38:	82 60       	ori	r24, 0x02	; 2
     c3a:	83 bf       	out	0x33, r24	; 51
     c3c:	83 b7       	in	r24, 0x33	; 51
     c3e:	8b 7f       	andi	r24, 0xFB	; 251
     c40:	83 bf       	out	0x33, r24	; 51
     c42:	08 95       	ret
     c44:	84 30       	cpi	r24, 0x04	; 4
     c46:	51 f4       	brne	.+20     	; 0xc5c <TMR0_Select_Mode_Select_Prescaler+0x78>
     c48:	83 b7       	in	r24, 0x33	; 51
     c4a:	8e 7f       	andi	r24, 0xFE	; 254
     c4c:	83 bf       	out	0x33, r24	; 51
     c4e:	83 b7       	in	r24, 0x33	; 51
     c50:	8d 7f       	andi	r24, 0xFD	; 253
     c52:	83 bf       	out	0x33, r24	; 51
     c54:	83 b7       	in	r24, 0x33	; 51
     c56:	84 60       	ori	r24, 0x04	; 4
     c58:	83 bf       	out	0x33, r24	; 51
     c5a:	08 95       	ret
     c5c:	85 30       	cpi	r24, 0x05	; 5
     c5e:	49 f4       	brne	.+18     	; 0xc72 <TMR0_Select_Mode_Select_Prescaler+0x8e>
     c60:	83 b7       	in	r24, 0x33	; 51
     c62:	81 60       	ori	r24, 0x01	; 1
     c64:	83 bf       	out	0x33, r24	; 51
     c66:	83 b7       	in	r24, 0x33	; 51
     c68:	8d 7f       	andi	r24, 0xFD	; 253
     c6a:	83 bf       	out	0x33, r24	; 51
     c6c:	83 b7       	in	r24, 0x33	; 51
     c6e:	84 60       	ori	r24, 0x04	; 4
     c70:	83 bf       	out	0x33, r24	; 51
     c72:	08 95       	ret

00000c74 <TMR0_CTC_SelectCompareMatchOutput>:
     c74:	81 11       	cpse	r24, r1
     c76:	07 c0       	rjmp	.+14     	; 0xc86 <TMR0_CTC_SelectCompareMatchOutput+0x12>
     c78:	83 b7       	in	r24, 0x33	; 51
     c7a:	8f 7e       	andi	r24, 0xEF	; 239
     c7c:	83 bf       	out	0x33, r24	; 51
     c7e:	83 b7       	in	r24, 0x33	; 51
     c80:	8f 7d       	andi	r24, 0xDF	; 223
     c82:	83 bf       	out	0x33, r24	; 51
     c84:	08 95       	ret
     c86:	81 30       	cpi	r24, 0x01	; 1
     c88:	39 f4       	brne	.+14     	; 0xc98 <TMR0_CTC_SelectCompareMatchOutput+0x24>
     c8a:	83 b7       	in	r24, 0x33	; 51
     c8c:	80 61       	ori	r24, 0x10	; 16
     c8e:	83 bf       	out	0x33, r24	; 51
     c90:	83 b7       	in	r24, 0x33	; 51
     c92:	8f 7d       	andi	r24, 0xDF	; 223
     c94:	83 bf       	out	0x33, r24	; 51
     c96:	08 95       	ret
     c98:	82 30       	cpi	r24, 0x02	; 2
     c9a:	39 f4       	brne	.+14     	; 0xcaa <TMR0_CTC_SelectCompareMatchOutput+0x36>
     c9c:	83 b7       	in	r24, 0x33	; 51
     c9e:	8f 7e       	andi	r24, 0xEF	; 239
     ca0:	83 bf       	out	0x33, r24	; 51
     ca2:	83 b7       	in	r24, 0x33	; 51
     ca4:	80 62       	ori	r24, 0x20	; 32
     ca6:	83 bf       	out	0x33, r24	; 51
     ca8:	08 95       	ret
     caa:	83 30       	cpi	r24, 0x03	; 3
     cac:	31 f4       	brne	.+12     	; 0xcba <TMR0_CTC_SelectCompareMatchOutput+0x46>
     cae:	83 b7       	in	r24, 0x33	; 51
     cb0:	80 61       	ori	r24, 0x10	; 16
     cb2:	83 bf       	out	0x33, r24	; 51
     cb4:	83 b7       	in	r24, 0x33	; 51
     cb6:	80 62       	ori	r24, 0x20	; 32
     cb8:	83 bf       	out	0x33, r24	; 51
     cba:	08 95       	ret

00000cbc <TMR0_Init>:
     cbc:	83 b7       	in	r24, 0x33	; 51
     cbe:	8f 7b       	andi	r24, 0xBF	; 191
     cc0:	83 bf       	out	0x33, r24	; 51
     cc2:	83 b7       	in	r24, 0x33	; 51
     cc4:	88 60       	ori	r24, 0x08	; 8
     cc6:	83 bf       	out	0x33, r24	; 51
     cc8:	81 e0       	ldi	r24, 0x01	; 1
     cca:	0e 94 3a 06 	call	0xc74	; 0xc74 <TMR0_CTC_SelectCompareMatchOutput>
     cce:	84 e6       	ldi	r24, 0x64	; 100
     cd0:	8c bf       	out	0x3c, r24	; 60
     cd2:	84 e0       	ldi	r24, 0x04	; 4
     cd4:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <TMR0_Select_Mode_Select_Prescaler>
     cd8:	08 95       	ret

00000cda <__vector_11>:

void __vector_11() __attribute__((signal));
void __vector_11(){
     cda:	1f 92       	push	r1
     cdc:	0f 92       	push	r0
     cde:	0f b6       	in	r0, 0x3f	; 63
     ce0:	0f 92       	push	r0
     ce2:	11 24       	eor	r1, r1
		}
		TMR0_OverFlowCounter = 0;
//		TCNT0 = TIMER0_INITIAL_REG_VALUE;
	}
#endif
}
     ce4:	0f 90       	pop	r0
     ce6:	0f be       	out	0x3f, r0	; 63
     ce8:	0f 90       	pop	r0
     cea:	1f 90       	pop	r1
     cec:	18 95       	reti

00000cee <__vector_10>:

void __vector_10() __attribute__((signal));
void __vector_10(){
     cee:	1f 92       	push	r1
     cf0:	0f 92       	push	r0
     cf2:	0f b6       	in	r0, 0x3f	; 63
     cf4:	0f 92       	push	r0
     cf6:	11 24       	eor	r1, r1
     cf8:	2f 93       	push	r18
     cfa:	3f 93       	push	r19
     cfc:	4f 93       	push	r20
     cfe:	5f 93       	push	r21
     d00:	6f 93       	push	r22
     d02:	7f 93       	push	r23
     d04:	8f 93       	push	r24
     d06:	9f 93       	push	r25
     d08:	af 93       	push	r26
     d0a:	bf 93       	push	r27
     d0c:	ef 93       	push	r30
     d0e:	ff 93       	push	r31
	#if TIMER0_CTC_MODE==TIMER0_WORKING_MODE
		TMR0_OverFlowCounter++;
     d10:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <TMR0_OverFlowCounter>
     d14:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <TMR0_OverFlowCounter+0x1>
     d18:	01 96       	adiw	r24, 0x01	; 1
     d1a:	90 93 df 00 	sts	0x00DF, r25	; 0x8000df <TMR0_OverFlowCounter+0x1>
     d1e:	80 93 de 00 	sts	0x00DE, r24	; 0x8000de <TMR0_OverFlowCounter>
		if(TIMER0_OCR_OVERFLOWS_NEEDED <= TMR0_OverFlowCounter){
     d22:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <TMR0_OverFlowCounter>
     d26:	90 91 df 00 	lds	r25, 0x00DF	; 0x8000df <TMR0_OverFlowCounter+0x1>
     d2a:	89 2b       	or	r24, r25
     d2c:	59 f0       	breq	.+22     	; 0xd44 <__vector_10+0x56>
			if(TMR0_InterruptHandler_Compare){
     d2e:	e0 91 dc 00 	lds	r30, 0x00DC	; 0x8000dc <TMR0_InterruptHandler_Compare>
     d32:	f0 91 dd 00 	lds	r31, 0x00DD	; 0x8000dd <TMR0_InterruptHandler_Compare+0x1>
     d36:	30 97       	sbiw	r30, 0x00	; 0
     d38:	09 f0       	breq	.+2      	; 0xd3c <__vector_10+0x4e>
				TMR0_InterruptHandler_Compare();
     d3a:	09 95       	icall
			}
			TMR0_OverFlowCounter = 0;
     d3c:	10 92 df 00 	sts	0x00DF, r1	; 0x8000df <TMR0_OverFlowCounter+0x1>
     d40:	10 92 de 00 	sts	0x00DE, r1	; 0x8000de <TMR0_OverFlowCounter>
		}
	#endif	
}
     d44:	ff 91       	pop	r31
     d46:	ef 91       	pop	r30
     d48:	bf 91       	pop	r27
     d4a:	af 91       	pop	r26
     d4c:	9f 91       	pop	r25
     d4e:	8f 91       	pop	r24
     d50:	7f 91       	pop	r23
     d52:	6f 91       	pop	r22
     d54:	5f 91       	pop	r21
     d56:	4f 91       	pop	r20
     d58:	3f 91       	pop	r19
     d5a:	2f 91       	pop	r18
     d5c:	0f 90       	pop	r0
     d5e:	0f be       	out	0x3f, r0	; 63
     d60:	0f 90       	pop	r0
     d62:	1f 90       	pop	r1
     d64:	18 95       	reti

00000d66 <TMR0_Set_OCR0_Value>:

void TMR0_Set_OCR0_Value(u8 value){
	OCR0 = value;
     d66:	8c bf       	out	0x3c, r24	; 60
     d68:	08 95       	ret

00000d6a <__divsf3>:
     d6a:	0e 94 c9 06 	call	0xd92	; 0xd92 <__divsf3x>
     d6e:	0c 94 aa 07 	jmp	0xf54	; 0xf54 <__fp_round>
     d72:	0e 94 a3 07 	call	0xf46	; 0xf46 <__fp_pscB>
     d76:	58 f0       	brcs	.+22     	; 0xd8e <__divsf3+0x24>
     d78:	0e 94 9c 07 	call	0xf38	; 0xf38 <__fp_pscA>
     d7c:	40 f0       	brcs	.+16     	; 0xd8e <__divsf3+0x24>
     d7e:	29 f4       	brne	.+10     	; 0xd8a <__divsf3+0x20>
     d80:	5f 3f       	cpi	r21, 0xFF	; 255
     d82:	29 f0       	breq	.+10     	; 0xd8e <__divsf3+0x24>
     d84:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__fp_inf>
     d88:	51 11       	cpse	r21, r1
     d8a:	0c 94 de 07 	jmp	0xfbc	; 0xfbc <__fp_szero>
     d8e:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_nan>

00000d92 <__divsf3x>:
     d92:	0e 94 bb 07 	call	0xf76	; 0xf76 <__fp_split3>
     d96:	68 f3       	brcs	.-38     	; 0xd72 <__divsf3+0x8>

00000d98 <__divsf3_pse>:
     d98:	99 23       	and	r25, r25
     d9a:	b1 f3       	breq	.-20     	; 0xd88 <__divsf3+0x1e>
     d9c:	55 23       	and	r21, r21
     d9e:	91 f3       	breq	.-28     	; 0xd84 <__divsf3+0x1a>
     da0:	95 1b       	sub	r25, r21
     da2:	55 0b       	sbc	r21, r21
     da4:	bb 27       	eor	r27, r27
     da6:	aa 27       	eor	r26, r26
     da8:	62 17       	cp	r22, r18
     daa:	73 07       	cpc	r23, r19
     dac:	84 07       	cpc	r24, r20
     dae:	38 f0       	brcs	.+14     	; 0xdbe <__divsf3_pse+0x26>
     db0:	9f 5f       	subi	r25, 0xFF	; 255
     db2:	5f 4f       	sbci	r21, 0xFF	; 255
     db4:	22 0f       	add	r18, r18
     db6:	33 1f       	adc	r19, r19
     db8:	44 1f       	adc	r20, r20
     dba:	aa 1f       	adc	r26, r26
     dbc:	a9 f3       	breq	.-22     	; 0xda8 <__divsf3_pse+0x10>
     dbe:	35 d0       	rcall	.+106    	; 0xe2a <__divsf3_pse+0x92>
     dc0:	0e 2e       	mov	r0, r30
     dc2:	3a f0       	brmi	.+14     	; 0xdd2 <__divsf3_pse+0x3a>
     dc4:	e0 e8       	ldi	r30, 0x80	; 128
     dc6:	32 d0       	rcall	.+100    	; 0xe2c <__divsf3_pse+0x94>
     dc8:	91 50       	subi	r25, 0x01	; 1
     dca:	50 40       	sbci	r21, 0x00	; 0
     dcc:	e6 95       	lsr	r30
     dce:	00 1c       	adc	r0, r0
     dd0:	ca f7       	brpl	.-14     	; 0xdc4 <__divsf3_pse+0x2c>
     dd2:	2b d0       	rcall	.+86     	; 0xe2a <__divsf3_pse+0x92>
     dd4:	fe 2f       	mov	r31, r30
     dd6:	29 d0       	rcall	.+82     	; 0xe2a <__divsf3_pse+0x92>
     dd8:	66 0f       	add	r22, r22
     dda:	77 1f       	adc	r23, r23
     ddc:	88 1f       	adc	r24, r24
     dde:	bb 1f       	adc	r27, r27
     de0:	26 17       	cp	r18, r22
     de2:	37 07       	cpc	r19, r23
     de4:	48 07       	cpc	r20, r24
     de6:	ab 07       	cpc	r26, r27
     de8:	b0 e8       	ldi	r27, 0x80	; 128
     dea:	09 f0       	breq	.+2      	; 0xdee <__divsf3_pse+0x56>
     dec:	bb 0b       	sbc	r27, r27
     dee:	80 2d       	mov	r24, r0
     df0:	bf 01       	movw	r22, r30
     df2:	ff 27       	eor	r31, r31
     df4:	93 58       	subi	r25, 0x83	; 131
     df6:	5f 4f       	sbci	r21, 0xFF	; 255
     df8:	3a f0       	brmi	.+14     	; 0xe08 <__divsf3_pse+0x70>
     dfa:	9e 3f       	cpi	r25, 0xFE	; 254
     dfc:	51 05       	cpc	r21, r1
     dfe:	78 f0       	brcs	.+30     	; 0xe1e <__divsf3_pse+0x86>
     e00:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__fp_inf>
     e04:	0c 94 de 07 	jmp	0xfbc	; 0xfbc <__fp_szero>
     e08:	5f 3f       	cpi	r21, 0xFF	; 255
     e0a:	e4 f3       	brlt	.-8      	; 0xe04 <__divsf3_pse+0x6c>
     e0c:	98 3e       	cpi	r25, 0xE8	; 232
     e0e:	d4 f3       	brlt	.-12     	; 0xe04 <__divsf3_pse+0x6c>
     e10:	86 95       	lsr	r24
     e12:	77 95       	ror	r23
     e14:	67 95       	ror	r22
     e16:	b7 95       	ror	r27
     e18:	f7 95       	ror	r31
     e1a:	9f 5f       	subi	r25, 0xFF	; 255
     e1c:	c9 f7       	brne	.-14     	; 0xe10 <__divsf3_pse+0x78>
     e1e:	88 0f       	add	r24, r24
     e20:	91 1d       	adc	r25, r1
     e22:	96 95       	lsr	r25
     e24:	87 95       	ror	r24
     e26:	97 f9       	bld	r25, 7
     e28:	08 95       	ret
     e2a:	e1 e0       	ldi	r30, 0x01	; 1
     e2c:	66 0f       	add	r22, r22
     e2e:	77 1f       	adc	r23, r23
     e30:	88 1f       	adc	r24, r24
     e32:	bb 1f       	adc	r27, r27
     e34:	62 17       	cp	r22, r18
     e36:	73 07       	cpc	r23, r19
     e38:	84 07       	cpc	r24, r20
     e3a:	ba 07       	cpc	r27, r26
     e3c:	20 f0       	brcs	.+8      	; 0xe46 <__divsf3_pse+0xae>
     e3e:	62 1b       	sub	r22, r18
     e40:	73 0b       	sbc	r23, r19
     e42:	84 0b       	sbc	r24, r20
     e44:	ba 0b       	sbc	r27, r26
     e46:	ee 1f       	adc	r30, r30
     e48:	88 f7       	brcc	.-30     	; 0xe2c <__divsf3_pse+0x94>
     e4a:	e0 95       	com	r30
     e4c:	08 95       	ret

00000e4e <__fixunssfsi>:
     e4e:	0e 94 c3 07 	call	0xf86	; 0xf86 <__fp_splitA>
     e52:	88 f0       	brcs	.+34     	; 0xe76 <__fixunssfsi+0x28>
     e54:	9f 57       	subi	r25, 0x7F	; 127
     e56:	98 f0       	brcs	.+38     	; 0xe7e <__fixunssfsi+0x30>
     e58:	b9 2f       	mov	r27, r25
     e5a:	99 27       	eor	r25, r25
     e5c:	b7 51       	subi	r27, 0x17	; 23
     e5e:	b0 f0       	brcs	.+44     	; 0xe8c <__fixunssfsi+0x3e>
     e60:	e1 f0       	breq	.+56     	; 0xe9a <__fixunssfsi+0x4c>
     e62:	66 0f       	add	r22, r22
     e64:	77 1f       	adc	r23, r23
     e66:	88 1f       	adc	r24, r24
     e68:	99 1f       	adc	r25, r25
     e6a:	1a f0       	brmi	.+6      	; 0xe72 <__fixunssfsi+0x24>
     e6c:	ba 95       	dec	r27
     e6e:	c9 f7       	brne	.-14     	; 0xe62 <__fixunssfsi+0x14>
     e70:	14 c0       	rjmp	.+40     	; 0xe9a <__fixunssfsi+0x4c>
     e72:	b1 30       	cpi	r27, 0x01	; 1
     e74:	91 f0       	breq	.+36     	; 0xe9a <__fixunssfsi+0x4c>
     e76:	0e 94 dd 07 	call	0xfba	; 0xfba <__fp_zero>
     e7a:	b1 e0       	ldi	r27, 0x01	; 1
     e7c:	08 95       	ret
     e7e:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__fp_zero>
     e82:	67 2f       	mov	r22, r23
     e84:	78 2f       	mov	r23, r24
     e86:	88 27       	eor	r24, r24
     e88:	b8 5f       	subi	r27, 0xF8	; 248
     e8a:	39 f0       	breq	.+14     	; 0xe9a <__fixunssfsi+0x4c>
     e8c:	b9 3f       	cpi	r27, 0xF9	; 249
     e8e:	cc f3       	brlt	.-14     	; 0xe82 <__fixunssfsi+0x34>
     e90:	86 95       	lsr	r24
     e92:	77 95       	ror	r23
     e94:	67 95       	ror	r22
     e96:	b3 95       	inc	r27
     e98:	d9 f7       	brne	.-10     	; 0xe90 <__fixunssfsi+0x42>
     e9a:	3e f4       	brtc	.+14     	; 0xeaa <__fixunssfsi+0x5c>
     e9c:	90 95       	com	r25
     e9e:	80 95       	com	r24
     ea0:	70 95       	com	r23
     ea2:	61 95       	neg	r22
     ea4:	7f 4f       	sbci	r23, 0xFF	; 255
     ea6:	8f 4f       	sbci	r24, 0xFF	; 255
     ea8:	9f 4f       	sbci	r25, 0xFF	; 255
     eaa:	08 95       	ret

00000eac <__floatunsisf>:
     eac:	e8 94       	clt
     eae:	09 c0       	rjmp	.+18     	; 0xec2 <__floatsisf+0x12>

00000eb0 <__floatsisf>:
     eb0:	97 fb       	bst	r25, 7
     eb2:	3e f4       	brtc	.+14     	; 0xec2 <__floatsisf+0x12>
     eb4:	90 95       	com	r25
     eb6:	80 95       	com	r24
     eb8:	70 95       	com	r23
     eba:	61 95       	neg	r22
     ebc:	7f 4f       	sbci	r23, 0xFF	; 255
     ebe:	8f 4f       	sbci	r24, 0xFF	; 255
     ec0:	9f 4f       	sbci	r25, 0xFF	; 255
     ec2:	99 23       	and	r25, r25
     ec4:	a9 f0       	breq	.+42     	; 0xef0 <__floatsisf+0x40>
     ec6:	f9 2f       	mov	r31, r25
     ec8:	96 e9       	ldi	r25, 0x96	; 150
     eca:	bb 27       	eor	r27, r27
     ecc:	93 95       	inc	r25
     ece:	f6 95       	lsr	r31
     ed0:	87 95       	ror	r24
     ed2:	77 95       	ror	r23
     ed4:	67 95       	ror	r22
     ed6:	b7 95       	ror	r27
     ed8:	f1 11       	cpse	r31, r1
     eda:	f8 cf       	rjmp	.-16     	; 0xecc <__floatsisf+0x1c>
     edc:	fa f4       	brpl	.+62     	; 0xf1c <__floatsisf+0x6c>
     ede:	bb 0f       	add	r27, r27
     ee0:	11 f4       	brne	.+4      	; 0xee6 <__floatsisf+0x36>
     ee2:	60 ff       	sbrs	r22, 0
     ee4:	1b c0       	rjmp	.+54     	; 0xf1c <__floatsisf+0x6c>
     ee6:	6f 5f       	subi	r22, 0xFF	; 255
     ee8:	7f 4f       	sbci	r23, 0xFF	; 255
     eea:	8f 4f       	sbci	r24, 0xFF	; 255
     eec:	9f 4f       	sbci	r25, 0xFF	; 255
     eee:	16 c0       	rjmp	.+44     	; 0xf1c <__floatsisf+0x6c>
     ef0:	88 23       	and	r24, r24
     ef2:	11 f0       	breq	.+4      	; 0xef8 <__floatsisf+0x48>
     ef4:	96 e9       	ldi	r25, 0x96	; 150
     ef6:	11 c0       	rjmp	.+34     	; 0xf1a <__floatsisf+0x6a>
     ef8:	77 23       	and	r23, r23
     efa:	21 f0       	breq	.+8      	; 0xf04 <__floatsisf+0x54>
     efc:	9e e8       	ldi	r25, 0x8E	; 142
     efe:	87 2f       	mov	r24, r23
     f00:	76 2f       	mov	r23, r22
     f02:	05 c0       	rjmp	.+10     	; 0xf0e <__floatsisf+0x5e>
     f04:	66 23       	and	r22, r22
     f06:	71 f0       	breq	.+28     	; 0xf24 <__floatsisf+0x74>
     f08:	96 e8       	ldi	r25, 0x86	; 134
     f0a:	86 2f       	mov	r24, r22
     f0c:	70 e0       	ldi	r23, 0x00	; 0
     f0e:	60 e0       	ldi	r22, 0x00	; 0
     f10:	2a f0       	brmi	.+10     	; 0xf1c <__floatsisf+0x6c>
     f12:	9a 95       	dec	r25
     f14:	66 0f       	add	r22, r22
     f16:	77 1f       	adc	r23, r23
     f18:	88 1f       	adc	r24, r24
     f1a:	da f7       	brpl	.-10     	; 0xf12 <__floatsisf+0x62>
     f1c:	88 0f       	add	r24, r24
     f1e:	96 95       	lsr	r25
     f20:	87 95       	ror	r24
     f22:	97 f9       	bld	r25, 7
     f24:	08 95       	ret

00000f26 <__fp_inf>:
     f26:	97 f9       	bld	r25, 7
     f28:	9f 67       	ori	r25, 0x7F	; 127
     f2a:	80 e8       	ldi	r24, 0x80	; 128
     f2c:	70 e0       	ldi	r23, 0x00	; 0
     f2e:	60 e0       	ldi	r22, 0x00	; 0
     f30:	08 95       	ret

00000f32 <__fp_nan>:
     f32:	9f ef       	ldi	r25, 0xFF	; 255
     f34:	80 ec       	ldi	r24, 0xC0	; 192
     f36:	08 95       	ret

00000f38 <__fp_pscA>:
     f38:	00 24       	eor	r0, r0
     f3a:	0a 94       	dec	r0
     f3c:	16 16       	cp	r1, r22
     f3e:	17 06       	cpc	r1, r23
     f40:	18 06       	cpc	r1, r24
     f42:	09 06       	cpc	r0, r25
     f44:	08 95       	ret

00000f46 <__fp_pscB>:
     f46:	00 24       	eor	r0, r0
     f48:	0a 94       	dec	r0
     f4a:	12 16       	cp	r1, r18
     f4c:	13 06       	cpc	r1, r19
     f4e:	14 06       	cpc	r1, r20
     f50:	05 06       	cpc	r0, r21
     f52:	08 95       	ret

00000f54 <__fp_round>:
     f54:	09 2e       	mov	r0, r25
     f56:	03 94       	inc	r0
     f58:	00 0c       	add	r0, r0
     f5a:	11 f4       	brne	.+4      	; 0xf60 <__fp_round+0xc>
     f5c:	88 23       	and	r24, r24
     f5e:	52 f0       	brmi	.+20     	; 0xf74 <__fp_round+0x20>
     f60:	bb 0f       	add	r27, r27
     f62:	40 f4       	brcc	.+16     	; 0xf74 <__fp_round+0x20>
     f64:	bf 2b       	or	r27, r31
     f66:	11 f4       	brne	.+4      	; 0xf6c <__fp_round+0x18>
     f68:	60 ff       	sbrs	r22, 0
     f6a:	04 c0       	rjmp	.+8      	; 0xf74 <__fp_round+0x20>
     f6c:	6f 5f       	subi	r22, 0xFF	; 255
     f6e:	7f 4f       	sbci	r23, 0xFF	; 255
     f70:	8f 4f       	sbci	r24, 0xFF	; 255
     f72:	9f 4f       	sbci	r25, 0xFF	; 255
     f74:	08 95       	ret

00000f76 <__fp_split3>:
     f76:	57 fd       	sbrc	r21, 7
     f78:	90 58       	subi	r25, 0x80	; 128
     f7a:	44 0f       	add	r20, r20
     f7c:	55 1f       	adc	r21, r21
     f7e:	59 f0       	breq	.+22     	; 0xf96 <__fp_splitA+0x10>
     f80:	5f 3f       	cpi	r21, 0xFF	; 255
     f82:	71 f0       	breq	.+28     	; 0xfa0 <__fp_splitA+0x1a>
     f84:	47 95       	ror	r20

00000f86 <__fp_splitA>:
     f86:	88 0f       	add	r24, r24
     f88:	97 fb       	bst	r25, 7
     f8a:	99 1f       	adc	r25, r25
     f8c:	61 f0       	breq	.+24     	; 0xfa6 <__fp_splitA+0x20>
     f8e:	9f 3f       	cpi	r25, 0xFF	; 255
     f90:	79 f0       	breq	.+30     	; 0xfb0 <__fp_splitA+0x2a>
     f92:	87 95       	ror	r24
     f94:	08 95       	ret
     f96:	12 16       	cp	r1, r18
     f98:	13 06       	cpc	r1, r19
     f9a:	14 06       	cpc	r1, r20
     f9c:	55 1f       	adc	r21, r21
     f9e:	f2 cf       	rjmp	.-28     	; 0xf84 <__fp_split3+0xe>
     fa0:	46 95       	lsr	r20
     fa2:	f1 df       	rcall	.-30     	; 0xf86 <__fp_splitA>
     fa4:	08 c0       	rjmp	.+16     	; 0xfb6 <__fp_splitA+0x30>
     fa6:	16 16       	cp	r1, r22
     fa8:	17 06       	cpc	r1, r23
     faa:	18 06       	cpc	r1, r24
     fac:	99 1f       	adc	r25, r25
     fae:	f1 cf       	rjmp	.-30     	; 0xf92 <__fp_splitA+0xc>
     fb0:	86 95       	lsr	r24
     fb2:	71 05       	cpc	r23, r1
     fb4:	61 05       	cpc	r22, r1
     fb6:	08 94       	sec
     fb8:	08 95       	ret

00000fba <__fp_zero>:
     fba:	e8 94       	clt

00000fbc <__fp_szero>:
     fbc:	bb 27       	eor	r27, r27
     fbe:	66 27       	eor	r22, r22
     fc0:	77 27       	eor	r23, r23
     fc2:	cb 01       	movw	r24, r22
     fc4:	97 f9       	bld	r25, 7
     fc6:	08 95       	ret

00000fc8 <__mulsf3>:
     fc8:	0e 94 f7 07 	call	0xfee	; 0xfee <__mulsf3x>
     fcc:	0c 94 aa 07 	jmp	0xf54	; 0xf54 <__fp_round>
     fd0:	0e 94 9c 07 	call	0xf38	; 0xf38 <__fp_pscA>
     fd4:	38 f0       	brcs	.+14     	; 0xfe4 <__mulsf3+0x1c>
     fd6:	0e 94 a3 07 	call	0xf46	; 0xf46 <__fp_pscB>
     fda:	20 f0       	brcs	.+8      	; 0xfe4 <__mulsf3+0x1c>
     fdc:	95 23       	and	r25, r21
     fde:	11 f0       	breq	.+4      	; 0xfe4 <__mulsf3+0x1c>
     fe0:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__fp_inf>
     fe4:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_nan>
     fe8:	11 24       	eor	r1, r1
     fea:	0c 94 de 07 	jmp	0xfbc	; 0xfbc <__fp_szero>

00000fee <__mulsf3x>:
     fee:	0e 94 bb 07 	call	0xf76	; 0xf76 <__fp_split3>
     ff2:	70 f3       	brcs	.-36     	; 0xfd0 <__mulsf3+0x8>

00000ff4 <__mulsf3_pse>:
     ff4:	95 9f       	mul	r25, r21
     ff6:	c1 f3       	breq	.-16     	; 0xfe8 <__mulsf3+0x20>
     ff8:	95 0f       	add	r25, r21
     ffa:	50 e0       	ldi	r21, 0x00	; 0
     ffc:	55 1f       	adc	r21, r21
     ffe:	62 9f       	mul	r22, r18
    1000:	f0 01       	movw	r30, r0
    1002:	72 9f       	mul	r23, r18
    1004:	bb 27       	eor	r27, r27
    1006:	f0 0d       	add	r31, r0
    1008:	b1 1d       	adc	r27, r1
    100a:	63 9f       	mul	r22, r19
    100c:	aa 27       	eor	r26, r26
    100e:	f0 0d       	add	r31, r0
    1010:	b1 1d       	adc	r27, r1
    1012:	aa 1f       	adc	r26, r26
    1014:	64 9f       	mul	r22, r20
    1016:	66 27       	eor	r22, r22
    1018:	b0 0d       	add	r27, r0
    101a:	a1 1d       	adc	r26, r1
    101c:	66 1f       	adc	r22, r22
    101e:	82 9f       	mul	r24, r18
    1020:	22 27       	eor	r18, r18
    1022:	b0 0d       	add	r27, r0
    1024:	a1 1d       	adc	r26, r1
    1026:	62 1f       	adc	r22, r18
    1028:	73 9f       	mul	r23, r19
    102a:	b0 0d       	add	r27, r0
    102c:	a1 1d       	adc	r26, r1
    102e:	62 1f       	adc	r22, r18
    1030:	83 9f       	mul	r24, r19
    1032:	a0 0d       	add	r26, r0
    1034:	61 1d       	adc	r22, r1
    1036:	22 1f       	adc	r18, r18
    1038:	74 9f       	mul	r23, r20
    103a:	33 27       	eor	r19, r19
    103c:	a0 0d       	add	r26, r0
    103e:	61 1d       	adc	r22, r1
    1040:	23 1f       	adc	r18, r19
    1042:	84 9f       	mul	r24, r20
    1044:	60 0d       	add	r22, r0
    1046:	21 1d       	adc	r18, r1
    1048:	82 2f       	mov	r24, r18
    104a:	76 2f       	mov	r23, r22
    104c:	6a 2f       	mov	r22, r26
    104e:	11 24       	eor	r1, r1
    1050:	9f 57       	subi	r25, 0x7F	; 127
    1052:	50 40       	sbci	r21, 0x00	; 0
    1054:	9a f0       	brmi	.+38     	; 0x107c <__mulsf3_pse+0x88>
    1056:	f1 f0       	breq	.+60     	; 0x1094 <__mulsf3_pse+0xa0>
    1058:	88 23       	and	r24, r24
    105a:	4a f0       	brmi	.+18     	; 0x106e <__mulsf3_pse+0x7a>
    105c:	ee 0f       	add	r30, r30
    105e:	ff 1f       	adc	r31, r31
    1060:	bb 1f       	adc	r27, r27
    1062:	66 1f       	adc	r22, r22
    1064:	77 1f       	adc	r23, r23
    1066:	88 1f       	adc	r24, r24
    1068:	91 50       	subi	r25, 0x01	; 1
    106a:	50 40       	sbci	r21, 0x00	; 0
    106c:	a9 f7       	brne	.-22     	; 0x1058 <__mulsf3_pse+0x64>
    106e:	9e 3f       	cpi	r25, 0xFE	; 254
    1070:	51 05       	cpc	r21, r1
    1072:	80 f0       	brcs	.+32     	; 0x1094 <__mulsf3_pse+0xa0>
    1074:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__fp_inf>
    1078:	0c 94 de 07 	jmp	0xfbc	; 0xfbc <__fp_szero>
    107c:	5f 3f       	cpi	r21, 0xFF	; 255
    107e:	e4 f3       	brlt	.-8      	; 0x1078 <__mulsf3_pse+0x84>
    1080:	98 3e       	cpi	r25, 0xE8	; 232
    1082:	d4 f3       	brlt	.-12     	; 0x1078 <__mulsf3_pse+0x84>
    1084:	86 95       	lsr	r24
    1086:	77 95       	ror	r23
    1088:	67 95       	ror	r22
    108a:	b7 95       	ror	r27
    108c:	f7 95       	ror	r31
    108e:	e7 95       	ror	r30
    1090:	9f 5f       	subi	r25, 0xFF	; 255
    1092:	c1 f7       	brne	.-16     	; 0x1084 <__mulsf3_pse+0x90>
    1094:	fe 2b       	or	r31, r30
    1096:	88 0f       	add	r24, r24
    1098:	91 1d       	adc	r25, r1
    109a:	96 95       	lsr	r25
    109c:	87 95       	ror	r24
    109e:	97 f9       	bld	r25, 7
    10a0:	08 95       	ret

000010a2 <__adddi3_s8>:
    10a2:	00 24       	eor	r0, r0
    10a4:	a7 fd       	sbrc	r26, 7
    10a6:	00 94       	com	r0
    10a8:	2a 0f       	add	r18, r26
    10aa:	30 1d       	adc	r19, r0
    10ac:	40 1d       	adc	r20, r0
    10ae:	50 1d       	adc	r21, r0
    10b0:	60 1d       	adc	r22, r0
    10b2:	70 1d       	adc	r23, r0
    10b4:	80 1d       	adc	r24, r0
    10b6:	90 1d       	adc	r25, r0
    10b8:	08 95       	ret

000010ba <sprintf>:
    10ba:	ae e0       	ldi	r26, 0x0E	; 14
    10bc:	b0 e0       	ldi	r27, 0x00	; 0
    10be:	e3 e6       	ldi	r30, 0x63	; 99
    10c0:	f8 e0       	ldi	r31, 0x08	; 8
    10c2:	0c 94 1e 0b 	jmp	0x163c	; 0x163c <__prologue_saves__+0x1c>
    10c6:	0d 89       	ldd	r16, Y+21	; 0x15
    10c8:	1e 89       	ldd	r17, Y+22	; 0x16
    10ca:	86 e0       	ldi	r24, 0x06	; 6
    10cc:	8c 83       	std	Y+4, r24	; 0x04
    10ce:	1a 83       	std	Y+2, r17	; 0x02
    10d0:	09 83       	std	Y+1, r16	; 0x01
    10d2:	8f ef       	ldi	r24, 0xFF	; 255
    10d4:	9f e7       	ldi	r25, 0x7F	; 127
    10d6:	9e 83       	std	Y+6, r25	; 0x06
    10d8:	8d 83       	std	Y+5, r24	; 0x05
    10da:	ae 01       	movw	r20, r28
    10dc:	47 5e       	subi	r20, 0xE7	; 231
    10de:	5f 4f       	sbci	r21, 0xFF	; 255
    10e0:	6f 89       	ldd	r22, Y+23	; 0x17
    10e2:	78 8d       	ldd	r23, Y+24	; 0x18
    10e4:	ce 01       	movw	r24, r28
    10e6:	01 96       	adiw	r24, 0x01	; 1
    10e8:	0e 94 7f 08 	call	0x10fe	; 0x10fe <vfprintf>
    10ec:	ef 81       	ldd	r30, Y+7	; 0x07
    10ee:	f8 85       	ldd	r31, Y+8	; 0x08
    10f0:	e0 0f       	add	r30, r16
    10f2:	f1 1f       	adc	r31, r17
    10f4:	10 82       	st	Z, r1
    10f6:	2e 96       	adiw	r28, 0x0e	; 14
    10f8:	e4 e0       	ldi	r30, 0x04	; 4
    10fa:	0c 94 3a 0b 	jmp	0x1674	; 0x1674 <__epilogue_restores__+0x1c>

000010fe <vfprintf>:
    10fe:	ab e0       	ldi	r26, 0x0B	; 11
    1100:	b0 e0       	ldi	r27, 0x00	; 0
    1102:	e5 e8       	ldi	r30, 0x85	; 133
    1104:	f8 e0       	ldi	r31, 0x08	; 8
    1106:	0c 94 10 0b 	jmp	0x1620	; 0x1620 <__prologue_saves__>
    110a:	6c 01       	movw	r12, r24
    110c:	7b 01       	movw	r14, r22
    110e:	8a 01       	movw	r16, r20
    1110:	fc 01       	movw	r30, r24
    1112:	17 82       	std	Z+7, r1	; 0x07
    1114:	16 82       	std	Z+6, r1	; 0x06
    1116:	83 81       	ldd	r24, Z+3	; 0x03
    1118:	81 ff       	sbrs	r24, 1
    111a:	cc c1       	rjmp	.+920    	; 0x14b4 <vfprintf+0x3b6>
    111c:	ce 01       	movw	r24, r28
    111e:	01 96       	adiw	r24, 0x01	; 1
    1120:	3c 01       	movw	r6, r24
    1122:	f6 01       	movw	r30, r12
    1124:	93 81       	ldd	r25, Z+3	; 0x03
    1126:	f7 01       	movw	r30, r14
    1128:	93 fd       	sbrc	r25, 3
    112a:	85 91       	lpm	r24, Z+
    112c:	93 ff       	sbrs	r25, 3
    112e:	81 91       	ld	r24, Z+
    1130:	7f 01       	movw	r14, r30
    1132:	88 23       	and	r24, r24
    1134:	09 f4       	brne	.+2      	; 0x1138 <vfprintf+0x3a>
    1136:	ba c1       	rjmp	.+884    	; 0x14ac <vfprintf+0x3ae>
    1138:	85 32       	cpi	r24, 0x25	; 37
    113a:	39 f4       	brne	.+14     	; 0x114a <vfprintf+0x4c>
    113c:	93 fd       	sbrc	r25, 3
    113e:	85 91       	lpm	r24, Z+
    1140:	93 ff       	sbrs	r25, 3
    1142:	81 91       	ld	r24, Z+
    1144:	7f 01       	movw	r14, r30
    1146:	85 32       	cpi	r24, 0x25	; 37
    1148:	29 f4       	brne	.+10     	; 0x1154 <vfprintf+0x56>
    114a:	b6 01       	movw	r22, r12
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    1152:	e7 cf       	rjmp	.-50     	; 0x1122 <vfprintf+0x24>
    1154:	91 2c       	mov	r9, r1
    1156:	21 2c       	mov	r2, r1
    1158:	31 2c       	mov	r3, r1
    115a:	ff e1       	ldi	r31, 0x1F	; 31
    115c:	f3 15       	cp	r31, r3
    115e:	d8 f0       	brcs	.+54     	; 0x1196 <vfprintf+0x98>
    1160:	8b 32       	cpi	r24, 0x2B	; 43
    1162:	79 f0       	breq	.+30     	; 0x1182 <vfprintf+0x84>
    1164:	38 f4       	brcc	.+14     	; 0x1174 <vfprintf+0x76>
    1166:	80 32       	cpi	r24, 0x20	; 32
    1168:	79 f0       	breq	.+30     	; 0x1188 <vfprintf+0x8a>
    116a:	83 32       	cpi	r24, 0x23	; 35
    116c:	a1 f4       	brne	.+40     	; 0x1196 <vfprintf+0x98>
    116e:	23 2d       	mov	r18, r3
    1170:	20 61       	ori	r18, 0x10	; 16
    1172:	1d c0       	rjmp	.+58     	; 0x11ae <vfprintf+0xb0>
    1174:	8d 32       	cpi	r24, 0x2D	; 45
    1176:	61 f0       	breq	.+24     	; 0x1190 <vfprintf+0x92>
    1178:	80 33       	cpi	r24, 0x30	; 48
    117a:	69 f4       	brne	.+26     	; 0x1196 <vfprintf+0x98>
    117c:	23 2d       	mov	r18, r3
    117e:	21 60       	ori	r18, 0x01	; 1
    1180:	16 c0       	rjmp	.+44     	; 0x11ae <vfprintf+0xb0>
    1182:	83 2d       	mov	r24, r3
    1184:	82 60       	ori	r24, 0x02	; 2
    1186:	38 2e       	mov	r3, r24
    1188:	e3 2d       	mov	r30, r3
    118a:	e4 60       	ori	r30, 0x04	; 4
    118c:	3e 2e       	mov	r3, r30
    118e:	2a c0       	rjmp	.+84     	; 0x11e4 <vfprintf+0xe6>
    1190:	f3 2d       	mov	r31, r3
    1192:	f8 60       	ori	r31, 0x08	; 8
    1194:	1d c0       	rjmp	.+58     	; 0x11d0 <vfprintf+0xd2>
    1196:	37 fc       	sbrc	r3, 7
    1198:	2d c0       	rjmp	.+90     	; 0x11f4 <vfprintf+0xf6>
    119a:	20 ed       	ldi	r18, 0xD0	; 208
    119c:	28 0f       	add	r18, r24
    119e:	2a 30       	cpi	r18, 0x0A	; 10
    11a0:	40 f0       	brcs	.+16     	; 0x11b2 <vfprintf+0xb4>
    11a2:	8e 32       	cpi	r24, 0x2E	; 46
    11a4:	b9 f4       	brne	.+46     	; 0x11d4 <vfprintf+0xd6>
    11a6:	36 fc       	sbrc	r3, 6
    11a8:	81 c1       	rjmp	.+770    	; 0x14ac <vfprintf+0x3ae>
    11aa:	23 2d       	mov	r18, r3
    11ac:	20 64       	ori	r18, 0x40	; 64
    11ae:	32 2e       	mov	r3, r18
    11b0:	19 c0       	rjmp	.+50     	; 0x11e4 <vfprintf+0xe6>
    11b2:	36 fe       	sbrs	r3, 6
    11b4:	06 c0       	rjmp	.+12     	; 0x11c2 <vfprintf+0xc4>
    11b6:	8a e0       	ldi	r24, 0x0A	; 10
    11b8:	98 9e       	mul	r9, r24
    11ba:	20 0d       	add	r18, r0
    11bc:	11 24       	eor	r1, r1
    11be:	92 2e       	mov	r9, r18
    11c0:	11 c0       	rjmp	.+34     	; 0x11e4 <vfprintf+0xe6>
    11c2:	ea e0       	ldi	r30, 0x0A	; 10
    11c4:	2e 9e       	mul	r2, r30
    11c6:	20 0d       	add	r18, r0
    11c8:	11 24       	eor	r1, r1
    11ca:	22 2e       	mov	r2, r18
    11cc:	f3 2d       	mov	r31, r3
    11ce:	f0 62       	ori	r31, 0x20	; 32
    11d0:	3f 2e       	mov	r3, r31
    11d2:	08 c0       	rjmp	.+16     	; 0x11e4 <vfprintf+0xe6>
    11d4:	8c 36       	cpi	r24, 0x6C	; 108
    11d6:	21 f4       	brne	.+8      	; 0x11e0 <vfprintf+0xe2>
    11d8:	83 2d       	mov	r24, r3
    11da:	80 68       	ori	r24, 0x80	; 128
    11dc:	38 2e       	mov	r3, r24
    11de:	02 c0       	rjmp	.+4      	; 0x11e4 <vfprintf+0xe6>
    11e0:	88 36       	cpi	r24, 0x68	; 104
    11e2:	41 f4       	brne	.+16     	; 0x11f4 <vfprintf+0xf6>
    11e4:	f7 01       	movw	r30, r14
    11e6:	93 fd       	sbrc	r25, 3
    11e8:	85 91       	lpm	r24, Z+
    11ea:	93 ff       	sbrs	r25, 3
    11ec:	81 91       	ld	r24, Z+
    11ee:	7f 01       	movw	r14, r30
    11f0:	81 11       	cpse	r24, r1
    11f2:	b3 cf       	rjmp	.-154    	; 0x115a <vfprintf+0x5c>
    11f4:	98 2f       	mov	r25, r24
    11f6:	9f 7d       	andi	r25, 0xDF	; 223
    11f8:	95 54       	subi	r25, 0x45	; 69
    11fa:	93 30       	cpi	r25, 0x03	; 3
    11fc:	28 f4       	brcc	.+10     	; 0x1208 <vfprintf+0x10a>
    11fe:	0c 5f       	subi	r16, 0xFC	; 252
    1200:	1f 4f       	sbci	r17, 0xFF	; 255
    1202:	9f e3       	ldi	r25, 0x3F	; 63
    1204:	99 83       	std	Y+1, r25	; 0x01
    1206:	0d c0       	rjmp	.+26     	; 0x1222 <vfprintf+0x124>
    1208:	83 36       	cpi	r24, 0x63	; 99
    120a:	31 f0       	breq	.+12     	; 0x1218 <vfprintf+0x11a>
    120c:	83 37       	cpi	r24, 0x73	; 115
    120e:	71 f0       	breq	.+28     	; 0x122c <vfprintf+0x12e>
    1210:	83 35       	cpi	r24, 0x53	; 83
    1212:	09 f0       	breq	.+2      	; 0x1216 <vfprintf+0x118>
    1214:	59 c0       	rjmp	.+178    	; 0x12c8 <vfprintf+0x1ca>
    1216:	21 c0       	rjmp	.+66     	; 0x125a <vfprintf+0x15c>
    1218:	f8 01       	movw	r30, r16
    121a:	80 81       	ld	r24, Z
    121c:	89 83       	std	Y+1, r24	; 0x01
    121e:	0e 5f       	subi	r16, 0xFE	; 254
    1220:	1f 4f       	sbci	r17, 0xFF	; 255
    1222:	88 24       	eor	r8, r8
    1224:	83 94       	inc	r8
    1226:	91 2c       	mov	r9, r1
    1228:	53 01       	movw	r10, r6
    122a:	13 c0       	rjmp	.+38     	; 0x1252 <vfprintf+0x154>
    122c:	28 01       	movw	r4, r16
    122e:	f2 e0       	ldi	r31, 0x02	; 2
    1230:	4f 0e       	add	r4, r31
    1232:	51 1c       	adc	r5, r1
    1234:	f8 01       	movw	r30, r16
    1236:	a0 80       	ld	r10, Z
    1238:	b1 80       	ldd	r11, Z+1	; 0x01
    123a:	36 fe       	sbrs	r3, 6
    123c:	03 c0       	rjmp	.+6      	; 0x1244 <vfprintf+0x146>
    123e:	69 2d       	mov	r22, r9
    1240:	70 e0       	ldi	r23, 0x00	; 0
    1242:	02 c0       	rjmp	.+4      	; 0x1248 <vfprintf+0x14a>
    1244:	6f ef       	ldi	r22, 0xFF	; 255
    1246:	7f ef       	ldi	r23, 0xFF	; 255
    1248:	c5 01       	movw	r24, r10
    124a:	0e 94 6b 0a 	call	0x14d6	; 0x14d6 <strnlen>
    124e:	4c 01       	movw	r8, r24
    1250:	82 01       	movw	r16, r4
    1252:	f3 2d       	mov	r31, r3
    1254:	ff 77       	andi	r31, 0x7F	; 127
    1256:	3f 2e       	mov	r3, r31
    1258:	16 c0       	rjmp	.+44     	; 0x1286 <vfprintf+0x188>
    125a:	28 01       	movw	r4, r16
    125c:	22 e0       	ldi	r18, 0x02	; 2
    125e:	42 0e       	add	r4, r18
    1260:	51 1c       	adc	r5, r1
    1262:	f8 01       	movw	r30, r16
    1264:	a0 80       	ld	r10, Z
    1266:	b1 80       	ldd	r11, Z+1	; 0x01
    1268:	36 fe       	sbrs	r3, 6
    126a:	03 c0       	rjmp	.+6      	; 0x1272 <vfprintf+0x174>
    126c:	69 2d       	mov	r22, r9
    126e:	70 e0       	ldi	r23, 0x00	; 0
    1270:	02 c0       	rjmp	.+4      	; 0x1276 <vfprintf+0x178>
    1272:	6f ef       	ldi	r22, 0xFF	; 255
    1274:	7f ef       	ldi	r23, 0xFF	; 255
    1276:	c5 01       	movw	r24, r10
    1278:	0e 94 60 0a 	call	0x14c0	; 0x14c0 <strnlen_P>
    127c:	4c 01       	movw	r8, r24
    127e:	f3 2d       	mov	r31, r3
    1280:	f0 68       	ori	r31, 0x80	; 128
    1282:	3f 2e       	mov	r3, r31
    1284:	82 01       	movw	r16, r4
    1286:	33 fc       	sbrc	r3, 3
    1288:	1b c0       	rjmp	.+54     	; 0x12c0 <vfprintf+0x1c2>
    128a:	82 2d       	mov	r24, r2
    128c:	90 e0       	ldi	r25, 0x00	; 0
    128e:	88 16       	cp	r8, r24
    1290:	99 06       	cpc	r9, r25
    1292:	b0 f4       	brcc	.+44     	; 0x12c0 <vfprintf+0x1c2>
    1294:	b6 01       	movw	r22, r12
    1296:	80 e2       	ldi	r24, 0x20	; 32
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    129e:	2a 94       	dec	r2
    12a0:	f4 cf       	rjmp	.-24     	; 0x128a <vfprintf+0x18c>
    12a2:	f5 01       	movw	r30, r10
    12a4:	37 fc       	sbrc	r3, 7
    12a6:	85 91       	lpm	r24, Z+
    12a8:	37 fe       	sbrs	r3, 7
    12aa:	81 91       	ld	r24, Z+
    12ac:	5f 01       	movw	r10, r30
    12ae:	b6 01       	movw	r22, r12
    12b0:	90 e0       	ldi	r25, 0x00	; 0
    12b2:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    12b6:	21 10       	cpse	r2, r1
    12b8:	2a 94       	dec	r2
    12ba:	21 e0       	ldi	r18, 0x01	; 1
    12bc:	82 1a       	sub	r8, r18
    12be:	91 08       	sbc	r9, r1
    12c0:	81 14       	cp	r8, r1
    12c2:	91 04       	cpc	r9, r1
    12c4:	71 f7       	brne	.-36     	; 0x12a2 <vfprintf+0x1a4>
    12c6:	e8 c0       	rjmp	.+464    	; 0x1498 <vfprintf+0x39a>
    12c8:	84 36       	cpi	r24, 0x64	; 100
    12ca:	11 f0       	breq	.+4      	; 0x12d0 <vfprintf+0x1d2>
    12cc:	89 36       	cpi	r24, 0x69	; 105
    12ce:	41 f5       	brne	.+80     	; 0x1320 <vfprintf+0x222>
    12d0:	f8 01       	movw	r30, r16
    12d2:	37 fe       	sbrs	r3, 7
    12d4:	07 c0       	rjmp	.+14     	; 0x12e4 <vfprintf+0x1e6>
    12d6:	60 81       	ld	r22, Z
    12d8:	71 81       	ldd	r23, Z+1	; 0x01
    12da:	82 81       	ldd	r24, Z+2	; 0x02
    12dc:	93 81       	ldd	r25, Z+3	; 0x03
    12de:	0c 5f       	subi	r16, 0xFC	; 252
    12e0:	1f 4f       	sbci	r17, 0xFF	; 255
    12e2:	08 c0       	rjmp	.+16     	; 0x12f4 <vfprintf+0x1f6>
    12e4:	60 81       	ld	r22, Z
    12e6:	71 81       	ldd	r23, Z+1	; 0x01
    12e8:	07 2e       	mov	r0, r23
    12ea:	00 0c       	add	r0, r0
    12ec:	88 0b       	sbc	r24, r24
    12ee:	99 0b       	sbc	r25, r25
    12f0:	0e 5f       	subi	r16, 0xFE	; 254
    12f2:	1f 4f       	sbci	r17, 0xFF	; 255
    12f4:	f3 2d       	mov	r31, r3
    12f6:	ff 76       	andi	r31, 0x6F	; 111
    12f8:	3f 2e       	mov	r3, r31
    12fa:	97 ff       	sbrs	r25, 7
    12fc:	09 c0       	rjmp	.+18     	; 0x1310 <vfprintf+0x212>
    12fe:	90 95       	com	r25
    1300:	80 95       	com	r24
    1302:	70 95       	com	r23
    1304:	61 95       	neg	r22
    1306:	7f 4f       	sbci	r23, 0xFF	; 255
    1308:	8f 4f       	sbci	r24, 0xFF	; 255
    130a:	9f 4f       	sbci	r25, 0xFF	; 255
    130c:	f0 68       	ori	r31, 0x80	; 128
    130e:	3f 2e       	mov	r3, r31
    1310:	2a e0       	ldi	r18, 0x0A	; 10
    1312:	30 e0       	ldi	r19, 0x00	; 0
    1314:	a3 01       	movw	r20, r6
    1316:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__ultoa_invert>
    131a:	88 2e       	mov	r8, r24
    131c:	86 18       	sub	r8, r6
    131e:	45 c0       	rjmp	.+138    	; 0x13aa <vfprintf+0x2ac>
    1320:	85 37       	cpi	r24, 0x75	; 117
    1322:	31 f4       	brne	.+12     	; 0x1330 <vfprintf+0x232>
    1324:	23 2d       	mov	r18, r3
    1326:	2f 7e       	andi	r18, 0xEF	; 239
    1328:	b2 2e       	mov	r11, r18
    132a:	2a e0       	ldi	r18, 0x0A	; 10
    132c:	30 e0       	ldi	r19, 0x00	; 0
    132e:	25 c0       	rjmp	.+74     	; 0x137a <vfprintf+0x27c>
    1330:	93 2d       	mov	r25, r3
    1332:	99 7f       	andi	r25, 0xF9	; 249
    1334:	b9 2e       	mov	r11, r25
    1336:	8f 36       	cpi	r24, 0x6F	; 111
    1338:	c1 f0       	breq	.+48     	; 0x136a <vfprintf+0x26c>
    133a:	18 f4       	brcc	.+6      	; 0x1342 <vfprintf+0x244>
    133c:	88 35       	cpi	r24, 0x58	; 88
    133e:	79 f0       	breq	.+30     	; 0x135e <vfprintf+0x260>
    1340:	b5 c0       	rjmp	.+362    	; 0x14ac <vfprintf+0x3ae>
    1342:	80 37       	cpi	r24, 0x70	; 112
    1344:	19 f0       	breq	.+6      	; 0x134c <vfprintf+0x24e>
    1346:	88 37       	cpi	r24, 0x78	; 120
    1348:	21 f0       	breq	.+8      	; 0x1352 <vfprintf+0x254>
    134a:	b0 c0       	rjmp	.+352    	; 0x14ac <vfprintf+0x3ae>
    134c:	e9 2f       	mov	r30, r25
    134e:	e0 61       	ori	r30, 0x10	; 16
    1350:	be 2e       	mov	r11, r30
    1352:	b4 fe       	sbrs	r11, 4
    1354:	0d c0       	rjmp	.+26     	; 0x1370 <vfprintf+0x272>
    1356:	fb 2d       	mov	r31, r11
    1358:	f4 60       	ori	r31, 0x04	; 4
    135a:	bf 2e       	mov	r11, r31
    135c:	09 c0       	rjmp	.+18     	; 0x1370 <vfprintf+0x272>
    135e:	34 fe       	sbrs	r3, 4
    1360:	0a c0       	rjmp	.+20     	; 0x1376 <vfprintf+0x278>
    1362:	29 2f       	mov	r18, r25
    1364:	26 60       	ori	r18, 0x06	; 6
    1366:	b2 2e       	mov	r11, r18
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <vfprintf+0x278>
    136a:	28 e0       	ldi	r18, 0x08	; 8
    136c:	30 e0       	ldi	r19, 0x00	; 0
    136e:	05 c0       	rjmp	.+10     	; 0x137a <vfprintf+0x27c>
    1370:	20 e1       	ldi	r18, 0x10	; 16
    1372:	30 e0       	ldi	r19, 0x00	; 0
    1374:	02 c0       	rjmp	.+4      	; 0x137a <vfprintf+0x27c>
    1376:	20 e1       	ldi	r18, 0x10	; 16
    1378:	32 e0       	ldi	r19, 0x02	; 2
    137a:	f8 01       	movw	r30, r16
    137c:	b7 fe       	sbrs	r11, 7
    137e:	07 c0       	rjmp	.+14     	; 0x138e <vfprintf+0x290>
    1380:	60 81       	ld	r22, Z
    1382:	71 81       	ldd	r23, Z+1	; 0x01
    1384:	82 81       	ldd	r24, Z+2	; 0x02
    1386:	93 81       	ldd	r25, Z+3	; 0x03
    1388:	0c 5f       	subi	r16, 0xFC	; 252
    138a:	1f 4f       	sbci	r17, 0xFF	; 255
    138c:	06 c0       	rjmp	.+12     	; 0x139a <vfprintf+0x29c>
    138e:	60 81       	ld	r22, Z
    1390:	71 81       	ldd	r23, Z+1	; 0x01
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	0e 5f       	subi	r16, 0xFE	; 254
    1398:	1f 4f       	sbci	r17, 0xFF	; 255
    139a:	a3 01       	movw	r20, r6
    139c:	0e 94 b2 0a 	call	0x1564	; 0x1564 <__ultoa_invert>
    13a0:	88 2e       	mov	r8, r24
    13a2:	86 18       	sub	r8, r6
    13a4:	fb 2d       	mov	r31, r11
    13a6:	ff 77       	andi	r31, 0x7F	; 127
    13a8:	3f 2e       	mov	r3, r31
    13aa:	36 fe       	sbrs	r3, 6
    13ac:	0d c0       	rjmp	.+26     	; 0x13c8 <vfprintf+0x2ca>
    13ae:	23 2d       	mov	r18, r3
    13b0:	2e 7f       	andi	r18, 0xFE	; 254
    13b2:	a2 2e       	mov	r10, r18
    13b4:	89 14       	cp	r8, r9
    13b6:	58 f4       	brcc	.+22     	; 0x13ce <vfprintf+0x2d0>
    13b8:	34 fe       	sbrs	r3, 4
    13ba:	0b c0       	rjmp	.+22     	; 0x13d2 <vfprintf+0x2d4>
    13bc:	32 fc       	sbrc	r3, 2
    13be:	09 c0       	rjmp	.+18     	; 0x13d2 <vfprintf+0x2d4>
    13c0:	83 2d       	mov	r24, r3
    13c2:	8e 7e       	andi	r24, 0xEE	; 238
    13c4:	a8 2e       	mov	r10, r24
    13c6:	05 c0       	rjmp	.+10     	; 0x13d2 <vfprintf+0x2d4>
    13c8:	b8 2c       	mov	r11, r8
    13ca:	a3 2c       	mov	r10, r3
    13cc:	03 c0       	rjmp	.+6      	; 0x13d4 <vfprintf+0x2d6>
    13ce:	b8 2c       	mov	r11, r8
    13d0:	01 c0       	rjmp	.+2      	; 0x13d4 <vfprintf+0x2d6>
    13d2:	b9 2c       	mov	r11, r9
    13d4:	a4 fe       	sbrs	r10, 4
    13d6:	0f c0       	rjmp	.+30     	; 0x13f6 <vfprintf+0x2f8>
    13d8:	fe 01       	movw	r30, r28
    13da:	e8 0d       	add	r30, r8
    13dc:	f1 1d       	adc	r31, r1
    13de:	80 81       	ld	r24, Z
    13e0:	80 33       	cpi	r24, 0x30	; 48
    13e2:	21 f4       	brne	.+8      	; 0x13ec <vfprintf+0x2ee>
    13e4:	9a 2d       	mov	r25, r10
    13e6:	99 7e       	andi	r25, 0xE9	; 233
    13e8:	a9 2e       	mov	r10, r25
    13ea:	09 c0       	rjmp	.+18     	; 0x13fe <vfprintf+0x300>
    13ec:	a2 fe       	sbrs	r10, 2
    13ee:	06 c0       	rjmp	.+12     	; 0x13fc <vfprintf+0x2fe>
    13f0:	b3 94       	inc	r11
    13f2:	b3 94       	inc	r11
    13f4:	04 c0       	rjmp	.+8      	; 0x13fe <vfprintf+0x300>
    13f6:	8a 2d       	mov	r24, r10
    13f8:	86 78       	andi	r24, 0x86	; 134
    13fa:	09 f0       	breq	.+2      	; 0x13fe <vfprintf+0x300>
    13fc:	b3 94       	inc	r11
    13fe:	a3 fc       	sbrc	r10, 3
    1400:	11 c0       	rjmp	.+34     	; 0x1424 <vfprintf+0x326>
    1402:	a0 fe       	sbrs	r10, 0
    1404:	06 c0       	rjmp	.+12     	; 0x1412 <vfprintf+0x314>
    1406:	b2 14       	cp	r11, r2
    1408:	88 f4       	brcc	.+34     	; 0x142c <vfprintf+0x32e>
    140a:	28 0c       	add	r2, r8
    140c:	92 2c       	mov	r9, r2
    140e:	9b 18       	sub	r9, r11
    1410:	0e c0       	rjmp	.+28     	; 0x142e <vfprintf+0x330>
    1412:	b2 14       	cp	r11, r2
    1414:	60 f4       	brcc	.+24     	; 0x142e <vfprintf+0x330>
    1416:	b6 01       	movw	r22, r12
    1418:	80 e2       	ldi	r24, 0x20	; 32
    141a:	90 e0       	ldi	r25, 0x00	; 0
    141c:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    1420:	b3 94       	inc	r11
    1422:	f7 cf       	rjmp	.-18     	; 0x1412 <vfprintf+0x314>
    1424:	b2 14       	cp	r11, r2
    1426:	18 f4       	brcc	.+6      	; 0x142e <vfprintf+0x330>
    1428:	2b 18       	sub	r2, r11
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <vfprintf+0x332>
    142c:	98 2c       	mov	r9, r8
    142e:	21 2c       	mov	r2, r1
    1430:	a4 fe       	sbrs	r10, 4
    1432:	10 c0       	rjmp	.+32     	; 0x1454 <vfprintf+0x356>
    1434:	b6 01       	movw	r22, r12
    1436:	80 e3       	ldi	r24, 0x30	; 48
    1438:	90 e0       	ldi	r25, 0x00	; 0
    143a:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    143e:	a2 fe       	sbrs	r10, 2
    1440:	17 c0       	rjmp	.+46     	; 0x1470 <vfprintf+0x372>
    1442:	a1 fc       	sbrc	r10, 1
    1444:	03 c0       	rjmp	.+6      	; 0x144c <vfprintf+0x34e>
    1446:	88 e7       	ldi	r24, 0x78	; 120
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	02 c0       	rjmp	.+4      	; 0x1450 <vfprintf+0x352>
    144c:	88 e5       	ldi	r24, 0x58	; 88
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	b6 01       	movw	r22, r12
    1452:	0c c0       	rjmp	.+24     	; 0x146c <vfprintf+0x36e>
    1454:	8a 2d       	mov	r24, r10
    1456:	86 78       	andi	r24, 0x86	; 134
    1458:	59 f0       	breq	.+22     	; 0x1470 <vfprintf+0x372>
    145a:	a1 fe       	sbrs	r10, 1
    145c:	02 c0       	rjmp	.+4      	; 0x1462 <vfprintf+0x364>
    145e:	8b e2       	ldi	r24, 0x2B	; 43
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <vfprintf+0x366>
    1462:	80 e2       	ldi	r24, 0x20	; 32
    1464:	a7 fc       	sbrc	r10, 7
    1466:	8d e2       	ldi	r24, 0x2D	; 45
    1468:	b6 01       	movw	r22, r12
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    1470:	89 14       	cp	r8, r9
    1472:	38 f4       	brcc	.+14     	; 0x1482 <vfprintf+0x384>
    1474:	b6 01       	movw	r22, r12
    1476:	80 e3       	ldi	r24, 0x30	; 48
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    147e:	9a 94       	dec	r9
    1480:	f7 cf       	rjmp	.-18     	; 0x1470 <vfprintf+0x372>
    1482:	8a 94       	dec	r8
    1484:	f3 01       	movw	r30, r6
    1486:	e8 0d       	add	r30, r8
    1488:	f1 1d       	adc	r31, r1
    148a:	80 81       	ld	r24, Z
    148c:	b6 01       	movw	r22, r12
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    1494:	81 10       	cpse	r8, r1
    1496:	f5 cf       	rjmp	.-22     	; 0x1482 <vfprintf+0x384>
    1498:	22 20       	and	r2, r2
    149a:	09 f4       	brne	.+2      	; 0x149e <vfprintf+0x3a0>
    149c:	42 ce       	rjmp	.-892    	; 0x1122 <vfprintf+0x24>
    149e:	b6 01       	movw	r22, r12
    14a0:	80 e2       	ldi	r24, 0x20	; 32
    14a2:	90 e0       	ldi	r25, 0x00	; 0
    14a4:	0e 94 76 0a 	call	0x14ec	; 0x14ec <fputc>
    14a8:	2a 94       	dec	r2
    14aa:	f6 cf       	rjmp	.-20     	; 0x1498 <vfprintf+0x39a>
    14ac:	f6 01       	movw	r30, r12
    14ae:	86 81       	ldd	r24, Z+6	; 0x06
    14b0:	97 81       	ldd	r25, Z+7	; 0x07
    14b2:	02 c0       	rjmp	.+4      	; 0x14b8 <vfprintf+0x3ba>
    14b4:	8f ef       	ldi	r24, 0xFF	; 255
    14b6:	9f ef       	ldi	r25, 0xFF	; 255
    14b8:	2b 96       	adiw	r28, 0x0b	; 11
    14ba:	e2 e1       	ldi	r30, 0x12	; 18
    14bc:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__epilogue_restores__>

000014c0 <strnlen_P>:
    14c0:	fc 01       	movw	r30, r24
    14c2:	05 90       	lpm	r0, Z+
    14c4:	61 50       	subi	r22, 0x01	; 1
    14c6:	70 40       	sbci	r23, 0x00	; 0
    14c8:	01 10       	cpse	r0, r1
    14ca:	d8 f7       	brcc	.-10     	; 0x14c2 <strnlen_P+0x2>
    14cc:	80 95       	com	r24
    14ce:	90 95       	com	r25
    14d0:	8e 0f       	add	r24, r30
    14d2:	9f 1f       	adc	r25, r31
    14d4:	08 95       	ret

000014d6 <strnlen>:
    14d6:	fc 01       	movw	r30, r24
    14d8:	61 50       	subi	r22, 0x01	; 1
    14da:	70 40       	sbci	r23, 0x00	; 0
    14dc:	01 90       	ld	r0, Z+
    14de:	01 10       	cpse	r0, r1
    14e0:	d8 f7       	brcc	.-10     	; 0x14d8 <strnlen+0x2>
    14e2:	80 95       	com	r24
    14e4:	90 95       	com	r25
    14e6:	8e 0f       	add	r24, r30
    14e8:	9f 1f       	adc	r25, r31
    14ea:	08 95       	ret

000014ec <fputc>:
    14ec:	0f 93       	push	r16
    14ee:	1f 93       	push	r17
    14f0:	cf 93       	push	r28
    14f2:	df 93       	push	r29
    14f4:	fb 01       	movw	r30, r22
    14f6:	23 81       	ldd	r18, Z+3	; 0x03
    14f8:	21 fd       	sbrc	r18, 1
    14fa:	03 c0       	rjmp	.+6      	; 0x1502 <fputc+0x16>
    14fc:	8f ef       	ldi	r24, 0xFF	; 255
    14fe:	9f ef       	ldi	r25, 0xFF	; 255
    1500:	2c c0       	rjmp	.+88     	; 0x155a <fputc+0x6e>
    1502:	22 ff       	sbrs	r18, 2
    1504:	16 c0       	rjmp	.+44     	; 0x1532 <fputc+0x46>
    1506:	46 81       	ldd	r20, Z+6	; 0x06
    1508:	57 81       	ldd	r21, Z+7	; 0x07
    150a:	24 81       	ldd	r18, Z+4	; 0x04
    150c:	35 81       	ldd	r19, Z+5	; 0x05
    150e:	42 17       	cp	r20, r18
    1510:	53 07       	cpc	r21, r19
    1512:	44 f4       	brge	.+16     	; 0x1524 <fputc+0x38>
    1514:	a0 81       	ld	r26, Z
    1516:	b1 81       	ldd	r27, Z+1	; 0x01
    1518:	9d 01       	movw	r18, r26
    151a:	2f 5f       	subi	r18, 0xFF	; 255
    151c:	3f 4f       	sbci	r19, 0xFF	; 255
    151e:	31 83       	std	Z+1, r19	; 0x01
    1520:	20 83       	st	Z, r18
    1522:	8c 93       	st	X, r24
    1524:	26 81       	ldd	r18, Z+6	; 0x06
    1526:	37 81       	ldd	r19, Z+7	; 0x07
    1528:	2f 5f       	subi	r18, 0xFF	; 255
    152a:	3f 4f       	sbci	r19, 0xFF	; 255
    152c:	37 83       	std	Z+7, r19	; 0x07
    152e:	26 83       	std	Z+6, r18	; 0x06
    1530:	14 c0       	rjmp	.+40     	; 0x155a <fputc+0x6e>
    1532:	8b 01       	movw	r16, r22
    1534:	ec 01       	movw	r28, r24
    1536:	fb 01       	movw	r30, r22
    1538:	00 84       	ldd	r0, Z+8	; 0x08
    153a:	f1 85       	ldd	r31, Z+9	; 0x09
    153c:	e0 2d       	mov	r30, r0
    153e:	09 95       	icall
    1540:	89 2b       	or	r24, r25
    1542:	e1 f6       	brne	.-72     	; 0x14fc <fputc+0x10>
    1544:	d8 01       	movw	r26, r16
    1546:	16 96       	adiw	r26, 0x06	; 6
    1548:	8d 91       	ld	r24, X+
    154a:	9c 91       	ld	r25, X
    154c:	17 97       	sbiw	r26, 0x07	; 7
    154e:	01 96       	adiw	r24, 0x01	; 1
    1550:	17 96       	adiw	r26, 0x07	; 7
    1552:	9c 93       	st	X, r25
    1554:	8e 93       	st	-X, r24
    1556:	16 97       	sbiw	r26, 0x06	; 6
    1558:	ce 01       	movw	r24, r28
    155a:	df 91       	pop	r29
    155c:	cf 91       	pop	r28
    155e:	1f 91       	pop	r17
    1560:	0f 91       	pop	r16
    1562:	08 95       	ret

00001564 <__ultoa_invert>:
    1564:	fa 01       	movw	r30, r20
    1566:	aa 27       	eor	r26, r26
    1568:	28 30       	cpi	r18, 0x08	; 8
    156a:	51 f1       	breq	.+84     	; 0x15c0 <__ultoa_invert+0x5c>
    156c:	20 31       	cpi	r18, 0x10	; 16
    156e:	81 f1       	breq	.+96     	; 0x15d0 <__ultoa_invert+0x6c>
    1570:	e8 94       	clt
    1572:	6f 93       	push	r22
    1574:	6e 7f       	andi	r22, 0xFE	; 254
    1576:	6e 5f       	subi	r22, 0xFE	; 254
    1578:	7f 4f       	sbci	r23, 0xFF	; 255
    157a:	8f 4f       	sbci	r24, 0xFF	; 255
    157c:	9f 4f       	sbci	r25, 0xFF	; 255
    157e:	af 4f       	sbci	r26, 0xFF	; 255
    1580:	b1 e0       	ldi	r27, 0x01	; 1
    1582:	3e d0       	rcall	.+124    	; 0x1600 <__ultoa_invert+0x9c>
    1584:	b4 e0       	ldi	r27, 0x04	; 4
    1586:	3c d0       	rcall	.+120    	; 0x1600 <__ultoa_invert+0x9c>
    1588:	67 0f       	add	r22, r23
    158a:	78 1f       	adc	r23, r24
    158c:	89 1f       	adc	r24, r25
    158e:	9a 1f       	adc	r25, r26
    1590:	a1 1d       	adc	r26, r1
    1592:	68 0f       	add	r22, r24
    1594:	79 1f       	adc	r23, r25
    1596:	8a 1f       	adc	r24, r26
    1598:	91 1d       	adc	r25, r1
    159a:	a1 1d       	adc	r26, r1
    159c:	6a 0f       	add	r22, r26
    159e:	71 1d       	adc	r23, r1
    15a0:	81 1d       	adc	r24, r1
    15a2:	91 1d       	adc	r25, r1
    15a4:	a1 1d       	adc	r26, r1
    15a6:	20 d0       	rcall	.+64     	; 0x15e8 <__ultoa_invert+0x84>
    15a8:	09 f4       	brne	.+2      	; 0x15ac <__ultoa_invert+0x48>
    15aa:	68 94       	set
    15ac:	3f 91       	pop	r19
    15ae:	2a e0       	ldi	r18, 0x0A	; 10
    15b0:	26 9f       	mul	r18, r22
    15b2:	11 24       	eor	r1, r1
    15b4:	30 19       	sub	r19, r0
    15b6:	30 5d       	subi	r19, 0xD0	; 208
    15b8:	31 93       	st	Z+, r19
    15ba:	de f6       	brtc	.-74     	; 0x1572 <__ultoa_invert+0xe>
    15bc:	cf 01       	movw	r24, r30
    15be:	08 95       	ret
    15c0:	46 2f       	mov	r20, r22
    15c2:	47 70       	andi	r20, 0x07	; 7
    15c4:	40 5d       	subi	r20, 0xD0	; 208
    15c6:	41 93       	st	Z+, r20
    15c8:	b3 e0       	ldi	r27, 0x03	; 3
    15ca:	0f d0       	rcall	.+30     	; 0x15ea <__ultoa_invert+0x86>
    15cc:	c9 f7       	brne	.-14     	; 0x15c0 <__ultoa_invert+0x5c>
    15ce:	f6 cf       	rjmp	.-20     	; 0x15bc <__ultoa_invert+0x58>
    15d0:	46 2f       	mov	r20, r22
    15d2:	4f 70       	andi	r20, 0x0F	; 15
    15d4:	40 5d       	subi	r20, 0xD0	; 208
    15d6:	4a 33       	cpi	r20, 0x3A	; 58
    15d8:	18 f0       	brcs	.+6      	; 0x15e0 <__ultoa_invert+0x7c>
    15da:	49 5d       	subi	r20, 0xD9	; 217
    15dc:	31 fd       	sbrc	r19, 1
    15de:	40 52       	subi	r20, 0x20	; 32
    15e0:	41 93       	st	Z+, r20
    15e2:	02 d0       	rcall	.+4      	; 0x15e8 <__ultoa_invert+0x84>
    15e4:	a9 f7       	brne	.-22     	; 0x15d0 <__ultoa_invert+0x6c>
    15e6:	ea cf       	rjmp	.-44     	; 0x15bc <__ultoa_invert+0x58>
    15e8:	b4 e0       	ldi	r27, 0x04	; 4
    15ea:	a6 95       	lsr	r26
    15ec:	97 95       	ror	r25
    15ee:	87 95       	ror	r24
    15f0:	77 95       	ror	r23
    15f2:	67 95       	ror	r22
    15f4:	ba 95       	dec	r27
    15f6:	c9 f7       	brne	.-14     	; 0x15ea <__ultoa_invert+0x86>
    15f8:	00 97       	sbiw	r24, 0x00	; 0
    15fa:	61 05       	cpc	r22, r1
    15fc:	71 05       	cpc	r23, r1
    15fe:	08 95       	ret
    1600:	9b 01       	movw	r18, r22
    1602:	ac 01       	movw	r20, r24
    1604:	0a 2e       	mov	r0, r26
    1606:	06 94       	lsr	r0
    1608:	57 95       	ror	r21
    160a:	47 95       	ror	r20
    160c:	37 95       	ror	r19
    160e:	27 95       	ror	r18
    1610:	ba 95       	dec	r27
    1612:	c9 f7       	brne	.-14     	; 0x1606 <__ultoa_invert+0xa2>
    1614:	62 0f       	add	r22, r18
    1616:	73 1f       	adc	r23, r19
    1618:	84 1f       	adc	r24, r20
    161a:	95 1f       	adc	r25, r21
    161c:	a0 1d       	adc	r26, r0
    161e:	08 95       	ret

00001620 <__prologue_saves__>:
    1620:	2f 92       	push	r2
    1622:	3f 92       	push	r3
    1624:	4f 92       	push	r4
    1626:	5f 92       	push	r5
    1628:	6f 92       	push	r6
    162a:	7f 92       	push	r7
    162c:	8f 92       	push	r8
    162e:	9f 92       	push	r9
    1630:	af 92       	push	r10
    1632:	bf 92       	push	r11
    1634:	cf 92       	push	r12
    1636:	df 92       	push	r13
    1638:	ef 92       	push	r14
    163a:	ff 92       	push	r15
    163c:	0f 93       	push	r16
    163e:	1f 93       	push	r17
    1640:	cf 93       	push	r28
    1642:	df 93       	push	r29
    1644:	cd b7       	in	r28, 0x3d	; 61
    1646:	de b7       	in	r29, 0x3e	; 62
    1648:	ca 1b       	sub	r28, r26
    164a:	db 0b       	sbc	r29, r27
    164c:	0f b6       	in	r0, 0x3f	; 63
    164e:	f8 94       	cli
    1650:	de bf       	out	0x3e, r29	; 62
    1652:	0f be       	out	0x3f, r0	; 63
    1654:	cd bf       	out	0x3d, r28	; 61
    1656:	09 94       	ijmp

00001658 <__epilogue_restores__>:
    1658:	2a 88       	ldd	r2, Y+18	; 0x12
    165a:	39 88       	ldd	r3, Y+17	; 0x11
    165c:	48 88       	ldd	r4, Y+16	; 0x10
    165e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1660:	6e 84       	ldd	r6, Y+14	; 0x0e
    1662:	7d 84       	ldd	r7, Y+13	; 0x0d
    1664:	8c 84       	ldd	r8, Y+12	; 0x0c
    1666:	9b 84       	ldd	r9, Y+11	; 0x0b
    1668:	aa 84       	ldd	r10, Y+10	; 0x0a
    166a:	b9 84       	ldd	r11, Y+9	; 0x09
    166c:	c8 84       	ldd	r12, Y+8	; 0x08
    166e:	df 80       	ldd	r13, Y+7	; 0x07
    1670:	ee 80       	ldd	r14, Y+6	; 0x06
    1672:	fd 80       	ldd	r15, Y+5	; 0x05
    1674:	0c 81       	ldd	r16, Y+4	; 0x04
    1676:	1b 81       	ldd	r17, Y+3	; 0x03
    1678:	aa 81       	ldd	r26, Y+2	; 0x02
    167a:	b9 81       	ldd	r27, Y+1	; 0x01
    167c:	ce 0f       	add	r28, r30
    167e:	d1 1d       	adc	r29, r1
    1680:	0f b6       	in	r0, 0x3f	; 63
    1682:	f8 94       	cli
    1684:	de bf       	out	0x3e, r29	; 62
    1686:	0f be       	out	0x3f, r0	; 63
    1688:	cd bf       	out	0x3d, r28	; 61
    168a:	ed 01       	movw	r28, r26
    168c:	08 95       	ret

0000168e <_exit>:
    168e:	f8 94       	cli

00001690 <__stop_program>:
    1690:	ff cf       	rjmp	.-2      	; 0x1690 <__stop_program>
